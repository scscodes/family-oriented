302293cba338a4445f7b97f909e1457d
/**
 * SubscriptionBadge Component
 * Shows current subscription tier with status indicators
 * Provides upgrade prompts and tier comparison
 */ 'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    TierIndicator: function() {
        return TierIndicator;
    },
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _material = require("@mui/material");
const _Business = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Business"));
const _Star = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Star"));
const _CheckCircle = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/CheckCircle"));
const _Lock = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Lock"));
const _useSubscription = require("../../../hooks/useSubscription");
const _subscriptionService = require("../../../utils/subscriptionService");
const _TierTransitionButton = /*#__PURE__*/ _interop_require_default(require("../../../features/subscription/components/TierTransitionButton"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
/**
 * Tier color mapping for consistent styling
 */ const TIER_COLORS = {
    personal: 'primary',
    professional: 'success',
    enterprise: 'warning'
};
/**
 * Tier icon mapping
 */ const TIER_ICONS = {
    personal: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Business.default, {}),
    professional: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Star.default, {}),
    enterprise: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Star.default, {
        sx: {
            color: 'gold'
        }
    })
};
/**
 * Main subscription badge component - safe initialization
 */ const SubscriptionBadge = /*#__PURE__*/ _react.default.memo(({ variant = 'basic', showUpgradeButton = true, showDetails = true })=>{
    const { tier, subscriptionPlan, isLoaded, getAvailableFeatures } = (0, _useSubscription.useSubscription)();
    const [anchorEl, setAnchorEl] = (0, _react.useState)(null);
    const handleClick = (event)=>{
        if (showDetails) {
            setAnchorEl(event.currentTarget);
        }
    };
    const handleClose = ()=>{
        setAnchorEl(null);
    };
    const open = Boolean(anchorEl);
    // Memoize computed values to prevent re-renders
    const computedValues = (0, _react.useMemo)(()=>{
        if (!isLoaded || !subscriptionPlan || !tier) {
            return null;
        }
        return {
            tierConfig: _subscriptionService.TIER_CONFIGURATIONS[tier],
            availableFeatures: getAvailableFeatures(),
            tierIcon: TIER_ICONS[tier],
            tierColor: TIER_COLORS[tier]
        };
    }, [
        tier,
        subscriptionPlan,
        isLoaded,
        getAvailableFeatures
    ]);
    if (!isLoaded) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
            label: "Loading...",
            variant: "outlined",
            size: "small",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {
                size: 16
            })
        });
    }
    if (!subscriptionPlan || !tier) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
            label: "No Plan",
            color: "error",
            variant: "outlined",
            size: "small",
            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Lock.default, {})
        });
    }
    if (!computedValues) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
            label: "Loading...",
            variant: "outlined",
            size: "small"
        });
    }
    const { tierConfig, availableFeatures, tierIcon, tierColor } = computedValues;
    if (variant === 'compact') {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
            icon: tierIcon,
            label: tier.toUpperCase(),
            color: tierColor,
            size: "small",
            onClick: showDetails ? handleClick : undefined,
            clickable: showDetails
        });
    }
    if (variant === 'basic') {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
                display: 'flex',
                alignItems: 'center',
                gap: 1
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                    icon: tierIcon,
                    label: tierConfig?.displayName || tier,
                    color: tierColor,
                    onClick: showDetails ? handleClick : undefined,
                    clickable: showDetails
                }),
                showUpgradeButton && tier !== 'enterprise' && /*#__PURE__*/ (0, _jsxruntime.jsx)(_TierTransitionButton.default, {
                    targetTier: tier === 'personal' ? 'professional' : 'enterprise',
                    size: "small",
                    variant: "outlined"
                }),
                showDetails && /*#__PURE__*/ (0, _jsxruntime.jsx)(SubscriptionDetailsPopover, {
                    open: open,
                    anchorEl: anchorEl,
                    onClose: handleClose,
                    tier: tier,
                    tierConfig: tierConfig,
                    availableFeatures: availableFeatures
                })
            ]
        });
    }
    // Detailed variant
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
        sx: {
            bgcolor: 'grey.50',
            border: 1,
            borderColor: 'grey.200'
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CardContent, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                spacing: 2,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        sx: {
                            display: 'flex',
                            justifyContent: 'space-between',
                            alignItems: 'center'
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: 1
                                },
                                children: [
                                    tierIcon,
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "h6",
                                        children: tierConfig?.displayName || tier
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                        label: tier.toUpperCase(),
                                        color: tierColor,
                                        size: "small"
                                    })
                                ]
                            }),
                            showUpgradeButton && tier !== 'enterprise' && /*#__PURE__*/ (0, _jsxruntime.jsx)(_TierTransitionButton.default, {
                                targetTier: tier === 'personal' ? 'professional' : 'enterprise',
                                variant: "contained"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        children: tierConfig?.description
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                variant: "subtitle2",
                                gutterBottom: true,
                                children: [
                                    "Available Features (",
                                    availableFeatures.length,
                                    ")"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    display: 'flex',
                                    flexWrap: 'wrap',
                                    gap: 0.5
                                },
                                children: [
                                    availableFeatures.slice(0, 6).map((feature)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                            label: feature.replace(/_/g, ' '),
                                            size: "small",
                                            variant: "outlined",
                                            color: "success",
                                            icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CheckCircle.default, {})
                                        }, feature)),
                                    availableFeatures.length > 6 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                        label: `+${availableFeatures.length - 6} more`,
                                        size: "small",
                                        variant: "outlined",
                                        color: "info"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            })
        })
    });
});
SubscriptionBadge.displayName = 'SubscriptionBadge';
/**
 * Detailed popover showing subscription information
 */ function SubscriptionDetailsPopover({ open, anchorEl, onClose, tier, tierConfig, availableFeatures }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Popover, {
        open: open,
        anchorEl: anchorEl,
        onClose: onClose,
        anchorOrigin: {
            vertical: 'bottom',
            horizontal: 'left'
        },
        transformOrigin: {
            vertical: 'top',
            horizontal: 'left'
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
            sx: {
                maxWidth: 400
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CardContent, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                    spacing: 2,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                            sx: {
                                display: 'flex',
                                alignItems: 'center',
                                gap: 1
                            },
                            children: [
                                TIER_ICONS[tier],
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                    variant: "h6",
                                    children: tierConfig?.displayName
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                    label: tier.toUpperCase(),
                                    color: TIER_COLORS[tier],
                                    size: "small"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                            variant: "body2",
                            color: "text.secondary",
                            children: tierConfig?.description
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Divider, {}),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                    variant: "subtitle2",
                                    gutterBottom: true,
                                    sx: {
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: 1
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_CheckCircle.default, {
                                            color: "success",
                                            fontSize: "small"
                                        }),
                                        "Available Features"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.List, {
                                    dense: true,
                                    children: availableFeatures.map((feature)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.ListItem, {
                                            sx: {
                                                py: 0.5
                                            },
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItemIcon, {
                                                    sx: {
                                                        minWidth: 32
                                                    },
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CheckCircle.default, {
                                                        color: "success",
                                                        fontSize: "small"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItemText, {
                                                    primary: feature.replace(/_/g, ' ').replace(/\b\w/g, (l)=>l.toUpperCase())
                                                })
                                            ]
                                        }, feature))
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Divider, {}),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                    variant: "subtitle2",
                                    gutterBottom: true,
                                    children: "Usage Limits"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                                    spacing: 1,
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "body2",
                                            children: [
                                                "Children: ",
                                                tierConfig?.limits.avatars === 10000 ? 'Unlimited' : tierConfig?.limits.avatars
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "body2",
                                            children: [
                                                "Collections per Child: ",
                                                tierConfig?.limits.collections_per_avatar
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "body2",
                                            children: [
                                                "Sessions per Month: ",
                                                tierConfig?.limits.sessions_per_month.toLocaleString()
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        tier !== 'enterprise' && /*#__PURE__*/ (0, _jsxruntime.jsx)(_TierTransitionButton.default, {
                            targetTier: tier === 'personal' ? 'professional' : 'enterprise',
                            variant: "contained"
                        })
                    ]
                })
            })
        })
    });
}
function TierIndicator({ showUpgrade = false }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(SubscriptionBadge, {
        variant: "compact",
        showUpgradeButton: showUpgrade,
        showDetails: true
    });
}
const _default = SubscriptionBadge;

//# sourceMappingURL=data:application/json;base64,
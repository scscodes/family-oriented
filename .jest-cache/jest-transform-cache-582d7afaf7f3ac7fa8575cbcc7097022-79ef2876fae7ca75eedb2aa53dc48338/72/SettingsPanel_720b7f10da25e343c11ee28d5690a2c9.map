{"version":3,"sources":["C:\\repos\\family-oriented\\src\\shared\\components\\forms\\SettingsPanel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GameSettings, DEFAULT_SETTINGS, getSettings, saveSettings } from \"@/utils/settingsUtils\";\r\nimport { GameType } from \"@/utils/gameUtils\";\r\n\r\ninterface SettingsPanelProps {\r\n  gameType: GameType;\r\n  onSettingsChange: (settings: GameSettings) => void;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n/**\r\n * Settings panel component for configuring game parameters\r\n */\r\nexport default function SettingsPanel({ \r\n  gameType, \r\n  onSettingsChange, \r\n  isOpen, \r\n  onClose\r\n}: SettingsPanelProps) {\r\n  const [settings, setSettings] = useState<GameSettings>(DEFAULT_SETTINGS[gameType]);\r\n  const [showNumberRange, setShowNumberRange] = useState(gameType === 'numbers');\r\n  \r\n  // Load settings when component mounts or gameType changes\r\n  useEffect(() => {\r\n    const loadedSettings = getSettings(gameType);\r\n    setSettings(loadedSettings);\r\n    setShowNumberRange(gameType === 'numbers');\r\n  }, [gameType]);\r\n  \r\n  type SettingsField = 'numberRange' | 'questionCount' | 'optionsCount';\r\n\r\n  const handleChange = (\r\n    field: SettingsField,\r\n    value: number | { min: number; max: number }\r\n  ) => {\r\n    const updatedSettings = { ...settings };\r\n    \r\n    if (field === 'numberRange') {\r\n      updatedSettings.numberRange = value as { min: number; max: number };\r\n    } else if (field === 'questionCount') {\r\n      updatedSettings.questionCount = value as number;\r\n    } else if (field === 'optionsCount') {\r\n      updatedSettings.optionsCount = value as number;\r\n    }\r\n    \r\n    setSettings(updatedSettings);\r\n  };\r\n  \r\n  const handleSave = () => {\r\n    saveSettings(gameType, settings);\r\n    onSettingsChange(settings);\r\n    onClose();\r\n  };\r\n  \r\n  if (!isOpen) return null;\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <h2>Game Settings</h2>\r\n          <button onClick={onClose}>Close</button>\r\n        </div>\r\n        \r\n        <div>\r\n          {/* Number Range Settings */}\r\n          {showNumberRange && (\r\n            <div>\r\n              <label>Number Range</label>\r\n              <div>\r\n                <div>\r\n                  <label>Min</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    value={settings.numberRange.min}\r\n                    onChange={(e) => handleChange('numberRange', {\r\n                      ...settings.numberRange,\r\n                      min: Math.max(1, parseInt(e.target.value) || 1)\r\n                    })}\r\n                    min=\"1\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label>Max</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    value={settings.numberRange.max}\r\n                    onChange={(e) => handleChange('numberRange', {\r\n                      ...settings.numberRange,\r\n                      max: Math.max(settings.numberRange.min, parseInt(e.target.value) || settings.numberRange.min)\r\n                    })}\r\n                    min={settings.numberRange.min}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Question Count Setting */}\r\n          <div>\r\n            <label>Number of Questions</label>\r\n            <input \r\n              type=\"number\" \r\n              value={settings.questionCount}\r\n              onChange={(e) => handleChange('questionCount', Math.max(1, parseInt(e.target.value) || 1))}\r\n              min=\"1\"\r\n              max=\"50\"\r\n            />\r\n          </div>\r\n          \r\n          {/* Options Count Setting */}\r\n          <div>\r\n            <label>Number of Answer Choices</label>\r\n            <input \r\n              type=\"number\" \r\n              value={settings.optionsCount}\r\n              onChange={(e) => handleChange('optionsCount', Math.max(2, Math.min(6, parseInt(e.target.value) || 2)))}\r\n              min=\"2\"\r\n              max=\"6\"\r\n            />\r\n            <p>Min: 2, Max: 6 answer choices</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <button onClick={onClose}>Cancel</button>\r\n          <button onClick={handleSave}>Save Settings</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":["SettingsPanel","gameType","onSettingsChange","isOpen","onClose","settings","setSettings","useState","DEFAULT_SETTINGS","showNumberRange","setShowNumberRange","useEffect","loadedSettings","getSettings","handleChange","field","value","updatedSettings","numberRange","questionCount","optionsCount","handleSave","saveSettings","div","h2","button","onClick","label","input","type","min","onChange","e","Math","max","parseInt","target","p"],"mappings":"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"}
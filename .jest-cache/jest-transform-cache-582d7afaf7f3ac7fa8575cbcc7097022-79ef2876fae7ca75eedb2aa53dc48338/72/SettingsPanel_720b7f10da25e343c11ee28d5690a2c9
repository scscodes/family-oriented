9bb7c27feee59ee46e3d40af0ebc5ee3
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * Settings panel component for configuring game parameters
 */ "default", {
    enumerable: true,
    get: function() {
        return SettingsPanel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _settingsUtils = require("../../../utils/settingsUtils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function SettingsPanel({ gameType, onSettingsChange, isOpen, onClose }) {
    const [settings, setSettings] = (0, _react.useState)(_settingsUtils.DEFAULT_SETTINGS[gameType]);
    const [showNumberRange, setShowNumberRange] = (0, _react.useState)(gameType === 'numbers');
    // Load settings when component mounts or gameType changes
    (0, _react.useEffect)(()=>{
        const loadedSettings = (0, _settingsUtils.getSettings)(gameType);
        setSettings(loadedSettings);
        setShowNumberRange(gameType === 'numbers');
    }, [
        gameType
    ]);
    const handleChange = (field, value)=>{
        const updatedSettings = {
            ...settings
        };
        if (field === 'numberRange') {
            updatedSettings.numberRange = value;
        } else if (field === 'questionCount') {
            updatedSettings.questionCount = value;
        } else if (field === 'optionsCount') {
            updatedSettings.optionsCount = value;
        }
        setSettings(updatedSettings);
    };
    const handleSave = ()=>{
        (0, _settingsUtils.saveSettings)(gameType, settings);
        onSettingsChange(settings);
        onClose();
    };
    if (!isOpen) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                            children: "Game Settings"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: onClose,
                            children: "Close"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    children: [
                        showNumberRange && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                    children: "Number Range"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    children: "Min"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                    type: "number",
                                                    value: settings.numberRange.min,
                                                    onChange: (e)=>handleChange('numberRange', {
                                                            ...settings.numberRange,
                                                            min: Math.max(1, parseInt(e.target.value) || 1)
                                                        }),
                                                    min: "1"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    children: "Max"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                    type: "number",
                                                    value: settings.numberRange.max,
                                                    onChange: (e)=>handleChange('numberRange', {
                                                            ...settings.numberRange,
                                                            max: Math.max(settings.numberRange.min, parseInt(e.target.value) || settings.numberRange.min)
                                                        }),
                                                    min: settings.numberRange.min
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                    children: "Number of Questions"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                    type: "number",
                                    value: settings.questionCount,
                                    onChange: (e)=>handleChange('questionCount', Math.max(1, parseInt(e.target.value) || 1)),
                                    min: "1",
                                    max: "50"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                    children: "Number of Answer Choices"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                    type: "number",
                                    value: settings.optionsCount,
                                    onChange: (e)=>handleChange('optionsCount', Math.max(2, Math.min(6, parseInt(e.target.value) || 2))),
                                    min: "2",
                                    max: "6"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    children: "Min: 2, Max: 6 answer choices"
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: onClose,
                            children: "Cancel"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: handleSave,
                            children: "Save Settings"
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,
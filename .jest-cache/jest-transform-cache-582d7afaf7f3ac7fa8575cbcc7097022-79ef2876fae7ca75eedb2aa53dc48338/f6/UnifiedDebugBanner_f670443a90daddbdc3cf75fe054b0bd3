7a5a6a62dfee48b0cda75fed1715be3a
/**
 * Unified Debug Banner
 * Consolidates all debug functionality into a single, compact banner
 * Combines: Hydration status + Subscription info + Scenario switching
 */ 'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * Main unified debug banner component
 */ "default", {
    enumerable: true,
    get: function() {
        return UnifiedDebugBanner;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _material = require("@mui/material");
const _BugReport = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/BugReport"));
const _Settings = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Settings"));
const _Warning = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Warning"));
const _Refresh = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Refresh"));
const _Science = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Science"));
const _AdminPanelSettings = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/AdminPanelSettings"));
const _Close = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Close"));
const _UserContext = require("../../../context/UserContext");
const _useSubscription = require("../../../hooks/useSubscription");
const _EnhancedThemeProvider = require("../../../theme/EnhancedThemeProvider");
const _DemoContext = require("../../../context/DemoContext");
const _DemoTransitionPreview = /*#__PURE__*/ _interop_require_default(require("./DemoTransitionPreview"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
/**
 * Detect if we're in development/demo environment
 */ function isDevelopmentMode() {
    const isDev = process.env.NODE_ENV === 'development';
    const hasDemo = process.env.NEXT_PUBLIC_DEMO_SCENARIO !== undefined;
    const hasDebugFlag = process.env.NEXT_PUBLIC_DEBUG_MODE === 'true';
    const isLocalhost = typeof window !== 'undefined' && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' || window.location.hostname.includes('.local'));
    const isDevPort = typeof window !== 'undefined' && (window.location.port === '3000' || window.location.port === '3001');
    return isDev || hasDemo || hasDebugFlag || isLocalhost || isDevPort;
}
/**
 * Debug popup modal with detailed controls
 */ function DebugPopupContent({ onClose, userContext, subscription, loadingState, hasIssues }) {
    const demoContext = (0, _DemoContext.useDemo)();
    const { availableScenarios, switchScenario, isTransitioning, error, clearError } = demoContext;
    const [selectedScenario, setSelectedScenario] = (0, _react.useState)('');
    const [previewScenario, setPreviewScenario] = (0, _react.useState)(null);
    const handleScenarioChange = async (event)=>{
        const scenarioKey = event.target.value;
        setSelectedScenario(scenarioKey);
        try {
            clearError();
            await switchScenario(scenarioKey);
        } catch (err) {
            console.error('Failed to switch scenario:', err);
        }
    };
    const handleRefresh = ()=>{
        window.location.reload();
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
        sx: {
            position: 'absolute',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            width: {
                xs: '90vw',
                sm: '80vw',
                md: '70vw'
            },
            maxWidth: 800,
            maxHeight: '90vh',
            overflow: 'auto',
            bgcolor: 'background.paper',
            borderRadius: 2,
            boxShadow: 24
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                        direction: "row",
                        alignItems: "center",
                        justifyContent: "space-between",
                        sx: {
                            mb: 2
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                variant: "h6",
                                children: "\uD83E\uDDEA Development Debug Console"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.IconButton, {
                                onClick: onClose,
                                size: "small",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Close.default, {})
                            })
                        ]
                    }),
                    hasIssues && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
                        severity: "error",
                        sx: {
                            mb: 2
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                variant: "subtitle2",
                                children: "Issues Detected:"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("ul", {
                                style: {
                                    margin: 0,
                                    paddingLeft: '20px'
                                },
                                children: [
                                    !userContext.org && /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "Organization data is null"
                                    }),
                                    !subscription.subscriptionPlan && /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "Subscription plan is null"
                                    }),
                                    !subscription.tier && /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "Subscription tier is null"
                                    }),
                                    !loadingState.isReady && /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "Loading state not ready"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                        direction: "row",
                        spacing: 2,
                        sx: {
                            mb: 3
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                size: "small",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Refresh.default, {}),
                                onClick: handleRefresh,
                                children: "Refresh App"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                size: "small",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AdminPanelSettings.default, {}),
                                onClick: ()=>console.log('UserContext State:', userContext),
                                children: "Log Context"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                size: "small",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Science.default, {}),
                                onClick: ()=>console.log('Subscription State:', subscription),
                                children: "Log Subscription"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Divider, {
                        sx: {
                            mb: 2
                        }
                    }),
                    error && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Alert, {
                        severity: "error",
                        sx: {
                            mb: 2
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                            variant: "body2",
                            children: [
                                "Demo Error: ",
                                error
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        sx: {
                            mb: 3
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                variant: "subtitle2",
                                gutterBottom: true,
                                children: [
                                    "Demo Scenario Switcher",
                                    isTransitioning && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "caption",
                                        sx: {
                                            ml: 1,
                                            color: 'info.main'
                                        },
                                        children: "\uD83D\uDD04 Switching..."
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.FormControl, {
                                fullWidth: true,
                                size: "small",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Select, {
                                    value: selectedScenario,
                                    onChange: handleScenarioChange,
                                    displayEmpty: true,
                                    disabled: isTransitioning,
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.MenuItem, {
                                            value: "",
                                            disabled: true,
                                            children: isTransitioning ? 'Switching Scenario...' : 'Switch to Different Scenario'
                                        }),
                                        availableScenarios.map((scenario)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.MenuItem, {
                                                value: scenario.key,
                                                onMouseEnter: ()=>setPreviewScenario(scenario.key),
                                                onMouseLeave: ()=>setPreviewScenario(null),
                                                children: [
                                                    scenario.label,
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                        variant: "caption",
                                                        color: "text.secondary",
                                                        sx: {
                                                            ml: 1
                                                        },
                                                        children: [
                                                            "(",
                                                            scenario.description,
                                                            ")"
                                                        ]
                                                    })
                                                ]
                                            }, scenario.key))
                                    ]
                                })
                            }),
                            previewScenario && previewScenario !== demoContext.currentScenario && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    mt: 2,
                                    p: 2,
                                    bgcolor: 'grey.50',
                                    borderRadius: 1,
                                    border: 1,
                                    borderColor: 'grey.200'
                                },
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "caption",
                                        color: "primary",
                                        sx: {
                                            fontWeight: 600,
                                            mb: 1,
                                            display: 'block'
                                        },
                                        children: "Preview Changes:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_DemoTransitionPreview.default, {
                                        targetScenarioKey: previewScenario
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Divider, {
                        sx: {
                            mb: 2
                        }
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                        spacing: 2,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "subtitle2",
                                        color: "text.secondary",
                                        gutterBottom: true,
                                        children: "Hydration State"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                                        sx: {
                                            fontSize: '11px',
                                            fontFamily: 'monospace',
                                            bgcolor: 'grey.100',
                                            p: 1,
                                            borderRadius: 1
                                        },
                                        children: JSON.stringify(loadingState, null, 2)
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "subtitle2",
                                        color: "text.secondary",
                                        gutterBottom: true,
                                        children: "Organization & Subscription"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                                        sx: {
                                            fontSize: '11px',
                                            fontFamily: 'monospace',
                                            bgcolor: 'grey.100',
                                            p: 1,
                                            borderRadius: 1
                                        },
                                        children: userContext.org ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        "Name: ",
                                                        userContext.org.name
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        "Plan: ",
                                                        userContext.org.subscriptionPlan?.name || 'None'
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        "Tier: ",
                                                        userContext.org.subscriptionPlan?.tier || 'None'
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        "Avatar Limit: ",
                                                        userContext.org.subscriptionPlan?.avatar_limit || 'N/A'
                                                    ]
                                                })
                                            ]
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            style: {
                                                color: 'red'
                                            },
                                            children: "Organization: NULL"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "subtitle2",
                                        color: "text.secondary",
                                        gutterBottom: true,
                                        children: "Feature Access"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                                        direction: "row",
                                        flexWrap: "wrap",
                                        spacing: 0.5,
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                                label: `Analytics: ${subscription.hasFeature('analytics')}`,
                                                color: subscription.hasFeature('analytics') ? 'success' : 'default',
                                                size: "small"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                                label: `User Mgmt: ${subscription.hasFeature('user_management')}`,
                                                color: subscription.hasFeature('user_management') ? 'success' : 'default',
                                                size: "small"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                                label: `Themes: ${subscription.hasFeature('premium_themes')}`,
                                                color: subscription.hasFeature('premium_themes') ? 'success' : 'default',
                                                size: "small"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                                label: `Export: ${subscription.hasFeature('export_data')}`,
                                                color: subscription.hasFeature('export_data') ? 'success' : 'default',
                                                size: "small"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                ]
            })
        })
    });
}
function UnifiedDebugBanner() {
    const [debugPopupOpen, setDebugPopupOpen] = (0, _react.useState)(false);
    const [selectedScenario, setSelectedScenario] = (0, _react.useState)('');
    const { isHydrated: themeHydrated } = (0, _EnhancedThemeProvider.useEnhancedTheme)();
    const userContext = (0, _UserContext.useUser)();
    const subscription = (0, _useSubscription.useSubscription)();
    // Always call useDemo hook at top level to avoid conditional hook calls
    let demoContext = null;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let availableScenarios = [];
    try {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        demoContext = (0, _DemoContext.useDemo)();
        availableScenarios = demoContext.availableScenarios;
    } catch  {
        // Not in demo mode or provider not available
        availableScenarios = [];
    }
    const { loadingState } = userContext;
    const hasIssues = !userContext.org || !subscription.subscriptionPlan || !subscription.tier;
    // Include demo context issues in overall health check
    const hasDemoIssues = demoContext?.error !== null;
    const isTransitioning = demoContext?.isTransitioning || false;
    // Hydration status icons
    const hydrationStatus = (0, _react.useMemo)(()=>{
        const theme = themeHydrated ? '✅' : '⏳';
        const user = loadingState.user ? '⏳' : '✅';
        const roles = loadingState.roles ? '⏳' : '✅';
        const ready = loadingState.isReady ? '✅' : '⏳';
        return `${theme}${user}${roles}${ready}`;
    }, [
        themeHydrated,
        loadingState
    ]);
    // Abbreviated tier display
    const tierDisplay = (0, _react.useMemo)(()=>{
        const tier = subscription.tier?.toUpperCase();
        const abbreviations = {
            'PERSONAL': 'PERS',
            'PROFESSIONAL': 'PROF',
            'ENTERPRISE': 'ENT'
        };
        return abbreviations[tier || ''] || tier || 'NO';
    }, [
        subscription.tier
    ]);
    // Abbreviated roles display
    const rolesDisplay = (0, _react.useMemo)(()=>{
        if (!userContext.roles?.length) return 'None';
        const abbreviations = {
            'account_owner': 'AO',
            'org_admin': 'OA',
            'educator': 'ED'
        };
        return userContext.roles.map((r)=>abbreviations[r.name] || r.name.slice(0, 2).toUpperCase()).join(',');
    }, [
        userContext.roles
    ]);
    // Only show in development/demo environments
    if (!isDevelopmentMode()) {
        return null;
    }
    // Avatar count display
    const avatarDisplay = `${userContext.avatars?.length || 0}/${subscription.subscriptionPlan?.avatar_limit || 'N/A'}`;
    const handleQuickScenarioChange = async (event)=>{
        const scenarioKey = event.target.value;
        setSelectedScenario(scenarioKey);
        if (demoContext) {
            try {
                demoContext.clearError();
                await demoContext.switchScenario(scenarioKey);
            } catch (err) {
                console.error('Failed to switch scenario:', err);
            }
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                sx: {
                    position: 'fixed',
                    top: 8,
                    left: '50%',
                    transform: 'translateX(-50%)',
                    bgcolor: hasIssues || hasDemoIssues ? 'error.light' : isTransitioning ? 'info.light' : 'warning.main',
                    color: 'black',
                    border: 1,
                    borderColor: hasIssues || hasDemoIssues ? 'error.dark' : isTransitioning ? 'info.dark' : 'warning.dark',
                    borderRadius: 1,
                    zIndex: 100,
                    p: 0.5,
                    boxShadow: 2,
                    opacity: isTransitioning ? 0.8 : 1,
                    transition: 'all 0.3s ease'
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Stack, {
                    direction: "row",
                    alignItems: "center",
                    spacing: 1,
                    sx: {
                        fontSize: '0.75rem'
                    },
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_BugReport.default, {
                            sx: {
                                fontSize: 16
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: "Hydration: Theme/User/Roles/Ready",
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    fontFamily: 'monospace',
                                    fontSize: '0.7rem'
                                },
                                children: [
                                    "H:",
                                    hydrationStatus
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: `Subscription Tier: ${subscription.tier || 'None'}`,
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Chip, {
                                label: tierDisplay,
                                size: "small",
                                color: subscription.tier ? 'success' : 'error',
                                sx: {
                                    height: 18,
                                    fontSize: '0.65rem',
                                    fontWeight: 600
                                }
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: `Avatars: ${avatarDisplay}`,
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    fontFamily: 'monospace'
                                },
                                children: [
                                    "\uD83D\uDC64",
                                    avatarDisplay
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: `Roles: ${userContext.roles?.map((r)=>r.name).join(', ') || 'None'}`,
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                sx: {
                                    fontFamily: 'monospace'
                                },
                                children: [
                                    "\uD83D\uDD11",
                                    rolesDisplay
                                ]
                            })
                        }),
                        isTransitioning && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: "Switching demo scenario...",
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                                sx: {
                                    display: 'flex',
                                    alignItems: 'center',
                                    fontSize: '0.7rem',
                                    fontFamily: 'monospace',
                                    animation: 'pulse 1.5s infinite'
                                },
                                children: "\uD83D\uDD04"
                            })
                        }),
                        (hasIssues || hasDemoIssues) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: `System issues detected${hasDemoIssues ? ` - Demo: ${demoContext?.error}` : ''} - click settings for details`,
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Warning.default, {
                                sx: {
                                    fontSize: 16,
                                    color: 'error.main'
                                }
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                            sx: {
                                flexGrow: 1
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Select, {
                            size: "small",
                            value: selectedScenario,
                            onChange: handleQuickScenarioChange,
                            displayEmpty: true,
                            sx: {
                                height: 20,
                                fontSize: '0.65rem',
                                minWidth: 100,
                                '& .MuiSelect-select': {
                                    py: 0.25,
                                    px: 1
                                }
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.MenuItem, {
                                    value: "",
                                    disabled: true,
                                    sx: {
                                        fontSize: '0.65rem'
                                    },
                                    children: "Switch Mode"
                                }),
                                availableScenarios.map((scenario)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.MenuItem, {
                                        value: scenario.key,
                                        sx: {
                                            fontSize: '0.65rem'
                                        },
                                        children: [
                                            (scenario.config?.tier || '').toUpperCase(),
                                            ": ",
                                            scenario.config?.name || scenario.label
                                        ]
                                    }, scenario.key))
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Tooltip, {
                            title: "Open Debug Console",
                            arrow: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.IconButton, {
                                size: "small",
                                onClick: ()=>setDebugPopupOpen(true),
                                sx: {
                                    p: 0.25
                                },
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Settings.default, {
                                    sx: {
                                        fontSize: 14
                                    }
                                })
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Modal, {
                open: debugPopupOpen,
                onClose: ()=>setDebugPopupOpen(false),
                closeAfterTransition: true,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(DebugPopupContent, {
                    onClose: ()=>setDebugPopupOpen(false),
                    userContext: userContext,
                    subscription: subscription,
                    loadingState: loadingState,
                    hasIssues: hasIssues
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
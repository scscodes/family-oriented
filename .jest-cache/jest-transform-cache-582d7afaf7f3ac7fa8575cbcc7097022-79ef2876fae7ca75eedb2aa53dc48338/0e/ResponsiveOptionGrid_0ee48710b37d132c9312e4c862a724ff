74aa4ff3d7954207b3ce9ef16c1b5f52
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * ResponsiveOptionGrid
 *
 * Usage:
 * <ResponsiveOptionGrid count={options.length}>
 *   {options.map(...)}
 * </ResponsiveOptionGrid>
 *
 * Lays out children in a responsive grid, adapting columns to count and screen size.
 */ "default", {
    enumerable: true,
    get: function() {
        return ResponsiveOptionGrid;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _material = require("@mui/material");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ResponsiveOptionGrid({ children, count, sx }) {
    // For 2: always 2 columns. For 3: 1fr on xs, 3 columns on sm+. For 4+: 2 on xs, 4 on sm+.
    const columns = `repeat(${count}, minmax(0, 1fr))`;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
        sx: {
            display: 'grid',
            gap: {
                xs: 2,
                sm: 3
            },
            gridTemplateColumns: columns,
            maxWidth: {
                xs: 340,
                sm: 600,
                md: 800
            },
            mx: 'auto',
            my: 2,
            boxSizing: 'border-box',
            ...sx
        },
        children: children
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxyZXBvc1xcZmFtaWx5LW9yaWVudGVkXFxzcmNcXHNoYXJlZFxcY29tcG9uZW50c1xcbGF5b3V0XFxSZXNwb25zaXZlT3B0aW9uR3JpZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBCb3gsIFN4UHJvcHMsIFRoZW1lIH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIjtcclxuXHJcbmludGVyZmFjZSBSZXNwb25zaXZlT3B0aW9uR3JpZFByb3BzIHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xyXG4gIGNvdW50OiBudW1iZXI7XHJcbiAgc3g/OiBTeFByb3BzPFRoZW1lPjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc3BvbnNpdmVPcHRpb25HcmlkXHJcbiAqXHJcbiAqIFVzYWdlOlxyXG4gKiA8UmVzcG9uc2l2ZU9wdGlvbkdyaWQgY291bnQ9e29wdGlvbnMubGVuZ3RofT5cclxuICogICB7b3B0aW9ucy5tYXAoLi4uKX1cclxuICogPC9SZXNwb25zaXZlT3B0aW9uR3JpZD5cclxuICpcclxuICogTGF5cyBvdXQgY2hpbGRyZW4gaW4gYSByZXNwb25zaXZlIGdyaWQsIGFkYXB0aW5nIGNvbHVtbnMgdG8gY291bnQgYW5kIHNjcmVlbiBzaXplLlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVzcG9uc2l2ZU9wdGlvbkdyaWQoeyBjaGlsZHJlbiwgY291bnQsIHN4IH06IFJlc3BvbnNpdmVPcHRpb25HcmlkUHJvcHMpIHtcclxuICAvLyBGb3IgMjogYWx3YXlzIDIgY29sdW1ucy4gRm9yIDM6IDFmciBvbiB4cywgMyBjb2x1bW5zIG9uIHNtKy4gRm9yIDQrOiAyIG9uIHhzLCA0IG9uIHNtKy5cclxuICBjb25zdCBjb2x1bW5zID0gYHJlcGVhdCgke2NvdW50fSwgbWlubWF4KDAsIDFmcikpYDtcclxuICByZXR1cm4gKFxyXG4gICAgPEJveFxyXG4gICAgICBzeD17e1xyXG4gICAgICAgIGRpc3BsYXk6ICdncmlkJyxcclxuICAgICAgICBnYXA6IHsgeHM6IDIsIHNtOiAzIH0sXHJcbiAgICAgICAgZ3JpZFRlbXBsYXRlQ29sdW1uczogY29sdW1ucyxcclxuICAgICAgICBtYXhXaWR0aDogeyB4czogMzQwLCBzbTogNjAwLCBtZDogODAwIH0sXHJcbiAgICAgICAgbXg6ICdhdXRvJyxcclxuICAgICAgICBteTogMixcclxuICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcclxuICAgICAgICAuLi5zeCxcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9Cb3g+XHJcbiAgKTtcclxufSAiXSwibmFtZXMiOlsiUmVzcG9uc2l2ZU9wdGlvbkdyaWQiLCJjaGlsZHJlbiIsImNvdW50Iiwic3giLCJjb2x1bW5zIiwiQm94IiwiZGlzcGxheSIsImdhcCIsInhzIiwic20iLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwibWF4V2lkdGgiLCJtZCIsIm14IiwibXkiLCJib3hTaXppbmciXSwibWFwcGluZ3MiOiI7Ozs7K0JBU0E7Ozs7Ozs7OztDQVNDLEdBQ0Q7OztlQUF3QkE7Ozs7OERBbkJOOzBCQUNrQjs7Ozs7O0FBa0JyQixTQUFTQSxxQkFBcUIsRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLEVBQUUsRUFBNkI7SUFDN0YsMEZBQTBGO0lBQzFGLE1BQU1DLFVBQVUsQ0FBQyxPQUFPLEVBQUVGLE1BQU0saUJBQWlCLENBQUM7SUFDbEQscUJBQ0UscUJBQUNHLGFBQUc7UUFDRkYsSUFBSTtZQUNGRyxTQUFTO1lBQ1RDLEtBQUs7Z0JBQUVDLElBQUk7Z0JBQUdDLElBQUk7WUFBRTtZQUNwQkMscUJBQXFCTjtZQUNyQk8sVUFBVTtnQkFBRUgsSUFBSTtnQkFBS0MsSUFBSTtnQkFBS0csSUFBSTtZQUFJO1lBQ3RDQyxJQUFJO1lBQ0pDLElBQUk7WUFDSkMsV0FBVztZQUNYLEdBQUdaLEVBQUU7UUFDUDtrQkFFQ0Y7O0FBR1AifQ==
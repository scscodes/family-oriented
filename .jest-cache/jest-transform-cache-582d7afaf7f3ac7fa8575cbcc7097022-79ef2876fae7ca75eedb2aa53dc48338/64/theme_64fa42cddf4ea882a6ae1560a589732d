24d40af008999201860ce248e54de2b7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createEnhancedTheme: function() {
        return createEnhancedTheme;
    },
    default: function() {
        return _default;
    },
    generateHeadingColors: function() {
        return generateHeadingColors;
    },
    nunito: function() {
        return nunito;
    },
    rubik: function() {
        return rubik;
    },
    themeVariants: function() {
        return _tokens.themeVariants;
    },
    varelaRound: function() {
        return varelaRound;
    }
});
const _styles = require("@mui/material/styles");
const _google = require("next/font/google");
const _tokens = require("./tokens");
const rubik = (0, _google.Rubik)({
    weight: [
        '400',
        '500',
        '700'
    ],
    subsets: [
        'latin'
    ],
    display: 'swap'
});
const varelaRound = (0, _google.Varela_Round)({
    weight: '400',
    subsets: [
        'latin'
    ],
    display: 'swap'
});
const nunito = (0, _google.Nunito)({
    weight: [
        '400',
        '600',
        '700'
    ],
    subsets: [
        'latin'
    ],
    display: 'swap'
});
/**
 * Mix two hex colors with a given ratio
 * @param color1 - First hex color (e.g., '#ff0000')
 * @param color2 - Second hex color (e.g., '#0000ff')
 * @param ratio - Mixing ratio (0.0 to 1.0, where 0.0 = color1, 1.0 = color2)
 */ const mixColors = (color1, color2, ratio)=>{
    // Remove # from hex colors
    const hex1 = color1.replace('#', '');
    const hex2 = color2.replace('#', '');
    // Parse RGB values
    const r1 = parseInt(hex1.slice(0, 2), 16);
    const g1 = parseInt(hex1.slice(2, 4), 16);
    const b1 = parseInt(hex1.slice(4, 6), 16);
    const r2 = parseInt(hex2.slice(0, 2), 16);
    const g2 = parseInt(hex2.slice(2, 4), 16);
    const b2 = parseInt(hex2.slice(4, 6), 16);
    // Mix colors
    const r = Math.round(r1 * (1 - ratio) + r2 * ratio);
    const g = Math.round(g1 * (1 - ratio) + g2 * ratio);
    const b = Math.round(b1 * (1 - ratio) + b2 * ratio);
    // Convert back to hex
    return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;
};
/**
 * Generate heading colors based on theme primary and secondary colors
 * Provides consistent hierarchy: h1 (primary) -> h6 (lightest)
 */ const generateHeadingColors = (primary, secondary)=>{
    return {
        h1: primary,
        h2: mixColors(primary, secondary, 0.1),
        h3: mixColors(primary, secondary, 0.2),
        h4: mixColors(primary, secondary, 0.3),
        h5: mixColors(primary, secondary, 0.4),
        h6: mixColors(primary, secondary, 0.5) // 50% primary, 50% secondary
    };
};
const createEnhancedTheme = (variant = 'purple')=>{
    const themeConfig = _tokens.themeVariants[variant];
    const headingColors = generateHeadingColors(themeConfig.primary, themeConfig.secondary);
    return (0, _styles.createTheme)({
        palette: {
            primary: {
                main: themeConfig.primary,
                light: mixColors(themeConfig.primary, '#ffffff', 0.2),
                dark: mixColors(themeConfig.primary, '#000000', 0.2)
            },
            secondary: {
                main: themeConfig.secondary,
                light: mixColors(themeConfig.secondary, '#ffffff', 0.2),
                dark: mixColors(themeConfig.secondary, '#000000', 0.2)
            },
            success: {
                main: '#2ec4b6',
                light: '#64f7e7',
                dark: '#009387'
            },
            error: {
                main: '#ff5a5f',
                light: '#ff8c8f',
                dark: '#c62333'
            },
            warning: {
                main: '#ffbe0b',
                light: '#fff04d',
                dark: '#c78f00'
            },
            info: {
                main: themeConfig.accent,
                light: mixColors(themeConfig.accent, '#ffffff', 0.2),
                dark: mixColors(themeConfig.accent, '#000000', 0.2)
            },
            background: {
                default: '#f8f9fa',
                paper: '#ffffff'
            },
            text: {
                primary: '#3a3a3a',
                secondary: '#606060'
            },
            // Custom game color palettes
            games: {
                colors: _tokens.gameColors.colors,
                shapes: _tokens.gameColors.shapes
            },
            // Heading color hierarchy
            headingColors
        },
        typography: {
            fontFamily: varelaRound.style.fontFamily,
            h1: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.bold,
                fontSize: _tokens.typography.fontSize['4xl'],
                lineHeight: _tokens.typography.lineHeight.tight,
                letterSpacing: _tokens.typography.letterSpacing.tight
            },
            h2: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.bold,
                fontSize: _tokens.typography.fontSize['3xl'],
                lineHeight: _tokens.typography.lineHeight.tight
            },
            h3: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.semibold,
                fontSize: _tokens.typography.fontSize['2xl'],
                lineHeight: _tokens.typography.lineHeight.normal
            },
            h4: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.semibold,
                fontSize: _tokens.typography.fontSize.xl,
                lineHeight: _tokens.typography.lineHeight.normal
            },
            h5: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.medium,
                fontSize: _tokens.typography.fontSize.lg,
                lineHeight: _tokens.typography.lineHeight.normal
            },
            h6: {
                fontFamily: rubik.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.medium,
                fontSize: _tokens.typography.fontSize.base,
                lineHeight: _tokens.typography.lineHeight.normal
            },
            body1: {
                fontFamily: nunito.style.fontFamily,
                fontSize: _tokens.typography.fontSize.lg,
                lineHeight: _tokens.typography.lineHeight.relaxed
            },
            body2: {
                fontFamily: nunito.style.fontFamily,
                fontSize: _tokens.typography.fontSize.base,
                lineHeight: _tokens.typography.lineHeight.normal
            },
            button: {
                fontFamily: varelaRound.style.fontFamily,
                fontWeight: _tokens.typography.fontWeight.medium,
                textTransform: 'none',
                fontSize: _tokens.typography.fontSize.base
            }
        },
        shape: {
            borderRadius: _tokens.borderRadius.md
        },
        spacing: (factor)=>`${_tokens.spacing.xs * factor}px`,
        components: {
            MuiCard: {
                styleOverrides: {
                    root: {
                        borderRadius: _tokens.borderRadius.lg,
                        boxShadow: _tokens.shadows.card,
                        transition: `transform ${_tokens.transitions.duration.slow}, box-shadow ${_tokens.transitions.duration.slow}`,
                        '&:hover': {
                            transform: 'translateY(-2px)',
                            boxShadow: _tokens.shadows.cardHover
                        }
                    }
                }
            },
            MuiButton: {
                styleOverrides: {
                    root: {
                        borderRadius: _tokens.borderRadius.xl,
                        padding: `${_tokens.spacing.sm}px ${_tokens.spacing.lg}px`,
                        boxShadow: _tokens.shadows.button,
                        minHeight: _tokens.accessibility.touchTarget.minSize,
                        transition: `all ${_tokens.transitions.duration.normal}`,
                        '&:hover': {
                            boxShadow: _tokens.shadows.buttonHover
                        },
                        '&:focus-visible': {
                            outline: `${_tokens.accessibility.focusRing.width} ${_tokens.accessibility.focusRing.style} ${_tokens.accessibility.focusRing.color}`,
                            outlineOffset: '2px'
                        }
                    },
                    containedPrimary: {
                        background: `linear-gradient(45deg, ${themeConfig.primary} 30%, ${themeConfig.accent} 90%)`
                    },
                    containedSecondary: {
                        background: `linear-gradient(45deg, ${themeConfig.secondary} 30%, ${themeConfig.accent} 90%)`
                    }
                }
            },
            MuiIconButton: {
                styleOverrides: {
                    root: {
                        color: themeConfig.primary,
                        minHeight: _tokens.accessibility.touchTarget.minSize,
                        minWidth: _tokens.accessibility.touchTarget.minSize,
                        '&:hover': {
                            backgroundColor: `${themeConfig.primary}10`
                        },
                        '&:focus-visible': {
                            outline: `${_tokens.accessibility.focusRing.width} ${_tokens.accessibility.focusRing.style} ${_tokens.accessibility.focusRing.color}`,
                            outlineOffset: '2px'
                        }
                    }
                }
            },
            MuiTypography: {
                styleOverrides: {
                    root: {
                        letterSpacing: _tokens.typography.letterSpacing.wide
                    }
                }
            },
            MuiAccordion: {
                styleOverrides: {
                    root: {
                        borderRadius: _tokens.borderRadius.lg,
                        boxShadow: _tokens.shadows.card,
                        '&:before': {
                            display: 'none'
                        },
                        '&.Mui-expanded': {
                            margin: 0
                        }
                    }
                }
            },
            MuiChip: {
                styleOverrides: {
                    root: {
                        borderRadius: _tokens.borderRadius.xl,
                        height: _tokens.accessibility.touchTarget.minSize,
                        '&:focus-visible': {
                            outline: `${_tokens.accessibility.focusRing.width} ${_tokens.accessibility.focusRing.style} ${_tokens.accessibility.focusRing.color}`,
                            outlineOffset: '2px'
                        }
                    }
                }
            }
        },
        // Custom properties for design tokens
        customSpacing: _tokens.spacing,
        customShadows: _tokens.shadows,
        themeVariant: variant
    });
};
// Default theme instance (purple variant)
const theme = createEnhancedTheme('purple');
const _default = theme;

//# sourceMappingURL=data:application/json;base64,
{"version":3,"sources":["C:\\repos\\family-oriented\\src\\shared\\components\\debug\\UnifiedDebugBanner.tsx"],"sourcesContent":["/**\r\n * Unified Debug Banner\r\n * Consolidates all debug functionality into a single, compact banner\r\n * Combines: Hydration status + Subscription info + Scenario switching\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Modal,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Alert,\r\n  Divider,\r\n  Tooltip,\r\n  FormControl,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport {\r\n  BugReport,\r\n  Settings,\r\n  Warning,\r\n  Refresh,\r\n  Science,\r\n  AdminPanelSettings,\r\n  Close\r\n} from '@mui/icons-material';\r\nimport { useUser } from '@/context/UserContext';\r\nimport { useSubscription } from '@/hooks/useSubscription';\r\nimport { useEnhancedTheme } from '@/theme/EnhancedThemeProvider';\r\nimport { useDemo } from '@/context/DemoContext';\r\nimport DemoTransitionPreview from './DemoTransitionPreview';\r\n\r\n\r\n\r\n/**\r\n * Detect if we're in development/demo environment\r\n */\r\nfunction isDevelopmentMode(): boolean {\r\n  const isDev = process.env.NODE_ENV === 'development';\r\n  const hasDemo = process.env.NEXT_PUBLIC_DEMO_SCENARIO !== undefined;\r\n  const hasDebugFlag = process.env.NEXT_PUBLIC_DEBUG_MODE === 'true';\r\n  const isLocalhost = typeof window !== 'undefined' && \r\n    (window.location.hostname === 'localhost' || \r\n     window.location.hostname === '127.0.0.1' ||\r\n     window.location.hostname.includes('.local'));\r\n  \r\n  const isDevPort = typeof window !== 'undefined' && \r\n    (window.location.port === '3000' || window.location.port === '3001');\r\n  \r\n  return isDev || hasDemo || hasDebugFlag || isLocalhost || isDevPort;\r\n}\r\n\r\n/**\r\n * Debug popup modal with detailed controls\r\n */\r\nfunction DebugPopupContent({ \r\n  onClose, \r\n  userContext, \r\n  subscription, \r\n  loadingState, \r\n  hasIssues \r\n}: {\r\n  onClose: () => void;\r\n  userContext: {\r\n    org: { name: string; subscriptionPlan?: { name?: string; tier?: string; avatar_limit?: number } | null } | null;\r\n    avatars?: unknown[];\r\n  };\r\n  subscription: {\r\n    hasFeature: (feature: string) => boolean;\r\n    subscriptionPlan?: { avatar_limit?: number };\r\n    tier?: string;\r\n  };\r\n  loadingState: {\r\n    user: boolean;\r\n    roles: boolean;\r\n    avatars: boolean;\r\n    isReady: boolean;\r\n  };\r\n  hasIssues: boolean;\r\n}) {\r\n  const demoContext = useDemo();\r\n  const { availableScenarios, switchScenario, isTransitioning, error, clearError } = demoContext;\r\n  const [selectedScenario, setSelectedScenario] = useState('');\r\n  const [previewScenario, setPreviewScenario] = useState<string | null>(null);\r\n\r\n  const handleScenarioChange = async (event: SelectChangeEvent<string>) => {\r\n    const scenarioKey = event.target.value as string;\r\n    setSelectedScenario(scenarioKey);\r\n    \r\n    try {\r\n      clearError();\r\n      await switchScenario(scenarioKey);\r\n    } catch (err) {\r\n      console.error('Failed to switch scenario:', err);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: { xs: '90vw', sm: '80vw', md: '70vw' },\r\n      maxWidth: 800,\r\n      maxHeight: '90vh',\r\n      overflow: 'auto',\r\n      bgcolor: 'background.paper',\r\n      borderRadius: 2,\r\n      boxShadow: 24\r\n    }}>\r\n      <Card>\r\n        <CardContent>\r\n          {/* Header */}\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 2 }}>\r\n            <Typography variant=\"h6\">\r\n              🧪 Development Debug Console\r\n            </Typography>\r\n            <IconButton onClick={onClose} size=\"small\">\r\n              <Close />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {/* Issues Alert */}\r\n          {hasIssues && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              <Typography variant=\"subtitle2\">Issues Detected:</Typography>\r\n              <ul style={{ margin: 0, paddingLeft: '20px' }}>\r\n                {!userContext.org && <li>Organization data is null</li>}\r\n                {!subscription.subscriptionPlan && <li>Subscription plan is null</li>}\r\n                {!subscription.tier && <li>Subscription tier is null</li>}\r\n                {!loadingState.isReady && <li>Loading state not ready</li>}\r\n              </ul>\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Quick Actions */}\r\n          <Stack direction=\"row\" spacing={2} sx={{ mb: 3 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              startIcon={<Refresh />}\r\n              onClick={handleRefresh}\r\n            >\r\n              Refresh App\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              startIcon={<AdminPanelSettings />}\r\n              onClick={() => console.log('UserContext State:', userContext)}\r\n            >\r\n              Log Context\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              startIcon={<Science />}\r\n              onClick={() => console.log('Subscription State:', subscription)}\r\n            >\r\n              Log Subscription\r\n            </Button>\r\n          </Stack>\r\n\r\n          <Divider sx={{ mb: 2 }} />\r\n\r\n          {/* Demo Context Error Display */}\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              <Typography variant=\"body2\">\r\n                Demo Error: {error}\r\n              </Typography>\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Scenario Switcher */}\r\n          <Box sx={{ mb: 3 }}>\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n              Demo Scenario Switcher\r\n              {isTransitioning && (\r\n                <Typography variant=\"caption\" sx={{ ml: 1, color: 'info.main' }}>\r\n                  🔄 Switching...\r\n                </Typography>\r\n              )}\r\n            </Typography>\r\n            <FormControl fullWidth size=\"small\">\r\n              <Select\r\n                value={selectedScenario}\r\n                onChange={handleScenarioChange}\r\n                displayEmpty\r\n                disabled={isTransitioning}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  {isTransitioning ? 'Switching Scenario...' : 'Switch to Different Scenario'}\r\n                </MenuItem>\r\n                {availableScenarios.map((scenario: { key: string; label: string; description: string }) => (\r\n                  <MenuItem \r\n                    key={scenario.key} \r\n                    value={scenario.key}\r\n                    onMouseEnter={() => setPreviewScenario(scenario.key)}\r\n                    onMouseLeave={() => setPreviewScenario(null)}\r\n                  >\r\n                    {scenario.label}\r\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 1 }}>\r\n                      ({scenario.description})\r\n                    </Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            {/* Transition Preview */}\r\n            {previewScenario && previewScenario !== demoContext.currentScenario && (\r\n              <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1, border: 1, borderColor: 'grey.200' }}>\r\n                <Typography variant=\"caption\" color=\"primary\" sx={{ fontWeight: 600, mb: 1, display: 'block' }}>\r\n                  Preview Changes:\r\n                </Typography>\r\n                <DemoTransitionPreview targetScenarioKey={previewScenario} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Divider sx={{ mb: 2 }} />\r\n\r\n          {/* Detailed Debug Info */}\r\n          <Stack spacing={2}>\r\n            {/* Hydration State */}\r\n            <Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                Hydration State\r\n              </Typography>\r\n              <Box sx={{ \r\n                fontSize: '11px', \r\n                fontFamily: 'monospace', \r\n                bgcolor: 'grey.100', \r\n                p: 1, \r\n                borderRadius: 1 \r\n              }}>\r\n                {JSON.stringify(loadingState, null, 2)}\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Organization Info */}\r\n            <Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                Organization & Subscription\r\n              </Typography>\r\n              <Box sx={{ \r\n                fontSize: '11px', \r\n                fontFamily: 'monospace', \r\n                bgcolor: 'grey.100', \r\n                p: 1, \r\n                borderRadius: 1 \r\n              }}>\r\n                {userContext.org ? (\r\n                  <>\r\n                    <div>Name: {userContext.org.name}</div>\r\n                    <div>Plan: {userContext.org.subscriptionPlan?.name || 'None'}</div>\r\n                    <div>Tier: {userContext.org.subscriptionPlan?.tier || 'None'}</div>\r\n                    <div>Avatar Limit: {userContext.org.subscriptionPlan?.avatar_limit || 'N/A'}</div>\r\n                  </>\r\n                ) : (\r\n                  <div style={{ color: 'red' }}>Organization: NULL</div>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Feature Access */}\r\n            <Box>\r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                Feature Access\r\n              </Typography>\r\n              <Stack direction=\"row\" flexWrap=\"wrap\" spacing={0.5}>\r\n                <Chip \r\n                  label={`Analytics: ${subscription.hasFeature('analytics')}`}\r\n                  color={subscription.hasFeature('analytics') ? 'success' : 'default'}\r\n                  size=\"small\"\r\n                />\r\n                <Chip \r\n                  label={`User Mgmt: ${subscription.hasFeature('user_management')}`}\r\n                  color={subscription.hasFeature('user_management') ? 'success' : 'default'}\r\n                  size=\"small\"\r\n                />\r\n                <Chip \r\n                  label={`Themes: ${subscription.hasFeature('premium_themes')}`}\r\n                  color={subscription.hasFeature('premium_themes') ? 'success' : 'default'}\r\n                  size=\"small\"\r\n                />\r\n                <Chip \r\n                  label={`Export: ${subscription.hasFeature('export_data')}`}\r\n                  color={subscription.hasFeature('export_data') ? 'success' : 'default'}\r\n                  size=\"small\"\r\n                />\r\n              </Stack>\r\n            </Box>\r\n          </Stack>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\n/**\r\n * Main unified debug banner component\r\n */\r\nexport default function UnifiedDebugBanner() {\r\n  const [debugPopupOpen, setDebugPopupOpen] = useState(false);\r\n  const [selectedScenario, setSelectedScenario] = useState('');\r\n  \r\n  const { isHydrated: themeHydrated } = useEnhancedTheme();\r\n  const userContext = useUser();\r\n  const subscription = useSubscription();\r\n  \r\n  // Use demo context for scenario management\r\n  let demoContext: ReturnType<typeof useDemo> | null = null;\r\n  let availableScenarios: Array<{ key: string; label: string; description: string; config: any }> = [];\r\n  \r\n  try {\r\n    demoContext = useDemo();\r\n    availableScenarios = demoContext.availableScenarios;\r\n  } catch {\r\n    // Not in demo mode or provider not available\r\n    availableScenarios = [];\r\n  }\r\n\r\n  const { loadingState } = userContext;\r\n  const hasIssues = !userContext.org || !subscription.subscriptionPlan || !subscription.tier;\r\n  \r\n  // Include demo context issues in overall health check\r\n  const hasDemoIssues = demoContext?.error !== null;\r\n  const isTransitioning = demoContext?.isTransitioning || false;\r\n\r\n  // Hydration status icons\r\n  const hydrationStatus = useMemo(() => {\r\n    const theme = themeHydrated ? '✅' : '⏳';\r\n    const user = loadingState.user ? '⏳' : '✅';\r\n    const roles = loadingState.roles ? '⏳' : '✅';\r\n    const ready = loadingState.isReady ? '✅' : '⏳';\r\n    return `${theme}${user}${roles}${ready}`;\r\n  }, [themeHydrated, loadingState]);\r\n\r\n  // Abbreviated tier display\r\n  const tierDisplay = useMemo(() => {\r\n    const tier = subscription.tier?.toUpperCase();\r\n    const abbreviations: Record<string, string> = {\r\n      'PERSONAL': 'PERS',\r\n      'PROFESSIONAL': 'PROF', \r\n      'ENTERPRISE': 'ENT'\r\n    };\r\n    return abbreviations[tier || ''] || tier || 'NO';\r\n  }, [subscription.tier]);\r\n\r\n  // Abbreviated roles display\r\n  const rolesDisplay = useMemo(() => {\r\n    if (!userContext.roles?.length) return 'None';\r\n    const abbreviations: Record<string, string> = {\r\n      'account_owner': 'AO',\r\n      'org_admin': 'OA',\r\n      'educator': 'ED'\r\n    };\r\n    return userContext.roles\r\n      .map(r => abbreviations[r.name] || r.name.slice(0, 2).toUpperCase())\r\n      .join(',');\r\n  }, [userContext.roles]);\r\n\r\n  // Only show in development/demo environments\r\n  if (!isDevelopmentMode()) {\r\n    return null;\r\n  }\r\n\r\n  // Avatar count display\r\n  const avatarDisplay = `${userContext.avatars?.length || 0}/${subscription.subscriptionPlan?.avatar_limit || 'N/A'}`;\r\n\r\n  const handleQuickScenarioChange = async (event: SelectChangeEvent<string>) => {\r\n    const scenarioKey = event.target.value as string;\r\n    setSelectedScenario(scenarioKey);\r\n    \r\n    if (demoContext) {\r\n      try {\r\n        demoContext.clearError();\r\n        await demoContext.switchScenario(scenarioKey);\r\n      } catch (err) {\r\n        console.error('Failed to switch scenario:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Fixed top banner - centered and content-width */}\r\n      <Box sx={{ \r\n        position: 'fixed', \r\n        top: 8, \r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        bgcolor: hasIssues || hasDemoIssues ? 'error.light' : isTransitioning ? 'info.light' : 'warning.main',\r\n        color: 'black',\r\n        border: 1,\r\n        borderColor: hasIssues || hasDemoIssues ? 'error.dark' : isTransitioning ? 'info.dark' : 'warning.dark',\r\n        borderRadius: 1,\r\n        zIndex: 100, // Lower z-index to avoid conflicts with navigation\r\n        p: 0.5,\r\n        boxShadow: 2,\r\n        opacity: isTransitioning ? 0.8 : 1,\r\n        transition: 'all 0.3s ease'\r\n      }}>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ fontSize: '0.75rem' }}>\r\n          {/* Debug indicator */}\r\n          <BugReport sx={{ fontSize: 16 }} />\r\n          \r\n          {/* Hydration status */}\r\n          <Tooltip title=\"Hydration: Theme/User/Roles/Ready\" arrow>\r\n            <Box sx={{ fontFamily: 'monospace', fontSize: '0.7rem' }}>\r\n              H:{hydrationStatus}\r\n            </Box>\r\n          </Tooltip>\r\n          \r\n          {/* Subscription tier */}\r\n          <Tooltip title={`Subscription Tier: ${subscription.tier || 'None'}`} arrow>\r\n            <Chip \r\n              label={tierDisplay}\r\n              size=\"small\" \r\n              color={subscription.tier ? 'success' : 'error'}\r\n              sx={{ height: 18, fontSize: '0.65rem', fontWeight: 600 }}\r\n            />\r\n          </Tooltip>\r\n          \r\n          {/* Avatar count */}\r\n          <Tooltip title={`Avatars: ${avatarDisplay}`} arrow>\r\n            <Box sx={{ fontFamily: 'monospace' }}>👤{avatarDisplay}</Box>\r\n          </Tooltip>\r\n          \r\n          {/* Roles */}\r\n          <Tooltip title={`Roles: ${userContext.roles?.map(r => r.name).join(', ') || 'None'}`} arrow>\r\n            <Box sx={{ fontFamily: 'monospace' }}>🔑{rolesDisplay}</Box>\r\n          </Tooltip>\r\n          \r\n          {/* Transition indicator */}\r\n          {isTransitioning && (\r\n            <Tooltip title=\"Switching demo scenario...\" arrow>\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                fontSize: '0.7rem',\r\n                fontFamily: 'monospace',\r\n                animation: 'pulse 1.5s infinite'\r\n              }}>\r\n                🔄\r\n              </Box>\r\n            </Tooltip>\r\n          )}\r\n          \r\n          {/* Issue indicator */}\r\n          {(hasIssues || hasDemoIssues) && (\r\n            <Tooltip title={`System issues detected${hasDemoIssues ? ` - Demo: ${demoContext?.error}` : ''} - click settings for details`} arrow>\r\n              <Warning sx={{ fontSize: 16, color: 'error.main' }} />\r\n            </Tooltip>\r\n          )}\r\n          \r\n          <Box sx={{ flexGrow: 1 }} />\r\n          \r\n          {/* Quick scenario switcher */}\r\n          <Select \r\n            size=\"small\" \r\n            value={selectedScenario}\r\n            onChange={handleQuickScenarioChange}\r\n            displayEmpty\r\n            sx={{ \r\n              height: 20, \r\n              fontSize: '0.65rem', \r\n              minWidth: 100,\r\n              '& .MuiSelect-select': { py: 0.25, px: 1 }\r\n            }}\r\n          >\r\n            <MenuItem value=\"\" disabled sx={{ fontSize: '0.65rem' }}>\r\n              Switch Mode\r\n            </MenuItem>\r\n            {availableScenarios.map((scenario: { key: string; label: string; description: string; config: any }) => (\r\n              <MenuItem key={scenario.key} value={scenario.key} sx={{ fontSize: '0.65rem' }}>\r\n                {scenario.config.tier.toUpperCase()}: {scenario.config.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          \r\n          {/* Debug popup toggle */}\r\n          <Tooltip title=\"Open Debug Console\" arrow>\r\n            <IconButton \r\n              size=\"small\" \r\n              onClick={() => setDebugPopupOpen(true)}\r\n              sx={{ p: 0.25 }}\r\n            >\r\n              <Settings sx={{ fontSize: 14 }} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      </Box>\r\n      \r\n      {/* Debug popup modal */}\r\n      <Modal \r\n        open={debugPopupOpen} \r\n        onClose={() => setDebugPopupOpen(false)}\r\n        closeAfterTransition\r\n      >\r\n        <DebugPopupContent\r\n          onClose={() => setDebugPopupOpen(false)}\r\n          userContext={userContext as {org: {name: string; subscriptionPlan?: {name?: string; tier?: string; avatar_limit?: number} | null} | null; avatars?: unknown[]}}\r\n          subscription={subscription as {hasFeature: (feature: string) => boolean; subscriptionPlan?: {avatar_limit?: number}; tier?: string}}\r\n          loadingState={loadingState}\r\n          hasIssues={hasIssues}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n} "],"names":["UnifiedDebugBanner","isDevelopmentMode","isDev","process","env","NODE_ENV","hasDemo","NEXT_PUBLIC_DEMO_SCENARIO","undefined","hasDebugFlag","NEXT_PUBLIC_DEBUG_MODE","isLocalhost","window","location","hostname","includes","isDevPort","port","DebugPopupContent","onClose","userContext","subscription","loadingState","hasIssues","demoContext","useDemo","availableScenarios","switchScenario","isTransitioning","error","clearError","selectedScenario","setSelectedScenario","useState","previewScenario","setPreviewScenario","handleScenarioChange","event","scenarioKey","target","value","err","console","handleRefresh","reload","Box","sx","position","top","left","transform","width","xs","sm","md","maxWidth","maxHeight","overflow","bgcolor","borderRadius","boxShadow","Card","CardContent","Stack","direction","alignItems","justifyContent","mb","Typography","variant","IconButton","onClick","size","Close","Alert","severity","ul","style","margin","paddingLeft","org","li","subscriptionPlan","tier","isReady","spacing","Button","startIcon","Refresh","AdminPanelSettings","log","Science","Divider","gutterBottom","ml","color","FormControl","fullWidth","Select","onChange","displayEmpty","disabled","MenuItem","map","scenario","key","onMouseEnter","onMouseLeave","label","description","currentScenario","mt","p","border","borderColor","fontWeight","display","DemoTransitionPreview","targetScenarioKey","fontSize","fontFamily","JSON","stringify","div","name","avatar_limit","flexWrap","Chip","hasFeature","debugPopupOpen","setDebugPopupOpen","isHydrated","themeHydrated","useEnhancedTheme","useUser","useSubscription","hasDemoIssues","hydrationStatus","useMemo","theme","user","roles","ready","tierDisplay","toUpperCase","abbreviations","rolesDisplay","length","r","slice","join","avatarDisplay","avatars","handleQuickScenarioChange","zIndex","opacity","transition","BugReport","Tooltip","title","arrow","height","animation","Warning","flexGrow","minWidth","py","px","config","Settings","Modal","open","closeAfterTransition"],"mappings":"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"}
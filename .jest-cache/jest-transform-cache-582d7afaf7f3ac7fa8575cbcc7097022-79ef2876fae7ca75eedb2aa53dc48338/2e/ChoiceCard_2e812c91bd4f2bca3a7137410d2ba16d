e10b10bb6208cedd6e0c7f312d12f2a5
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _material = require("@mui/material");
const _components = require("..");
const _constants = require("../../../utils/constants");
const _Circle = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Circle"));
const _Square = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Square"));
const _ChangeHistory = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/ChangeHistory"));
const _Rectangle = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Rectangle"));
const _Star = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Star"));
const _Favorite = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Favorite"));
const _Diamond = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Diamond"));
const _BeachAccess = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/BeachAccess"));
const _Build = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Build"));
const _Cake = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Cake"));
const _Phone = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Phone"));
const _EmojiEmotions = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/EmojiEmotions"));
const _WbSunny = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/WbSunny"));
const _DarkMode = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/DarkMode"));
const _Cloud = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Cloud"));
const _Add = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Add"));
const _Remove = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Remove"));
const _ArrowUpward = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/ArrowUpward"));
const _ArrowDownward = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/ArrowDownward"));
const _ArrowBack = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/ArrowBack"));
const _ArrowForward = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/ArrowForward"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/**
 * Enhanced choice card component using styled components and design tokens
 * Consolidated game-specific styling logic with improved accessibility
 */ function ChoiceCard({ onClick, children, selected = false, correct = false, incorrect = false, disabled = false, gameType }) {
    const theme = (0, _material.useTheme)();
    // Get the appropriate icon for shapes using design tokens
    const getShapeIcon = (0, _react.useMemo)(function createShapeIconFunction() {
        function getShapeIcon(shape) {
            const iconSize = _constants.UI_CONSTANTS.SHAPE_ICON_SIZE;
            const iconProps = {
                sx: {
                    fontSize: iconSize
                }
            };
            switch(shape.toLowerCase()){
                case 'circle':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Circle.default, {
                        ...iconProps
                    });
                case 'square':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Square.default, {
                        ...iconProps
                    });
                case 'triangle':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ChangeHistory.default, {
                        ...iconProps
                    });
                case 'rectangle':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Rectangle.default, {
                        ...iconProps
                    });
                case 'star':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Star.default, {
                        ...iconProps
                    });
                case 'heart':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Favorite.default, {
                        ...iconProps
                    });
                case 'diamond':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Diamond.default, {
                        ...iconProps
                    });
                case 'umbrella':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_BeachAccess.default, {
                        ...iconProps
                    });
                case 'wrench':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Build.default, {
                        ...iconProps
                    });
                case 'cake':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Cake.default, {
                        ...iconProps
                    });
                case 'call':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Phone.default, {
                        ...iconProps
                    });
                case 'smile':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_EmojiEmotions.default, {
                        ...iconProps
                    });
                case 'sun':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_WbSunny.default, {
                        ...iconProps
                    });
                case 'moon':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_DarkMode.default, {
                        ...iconProps
                    });
                case 'cloud':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Cloud.default, {
                        ...iconProps
                    });
                case 'plus':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Add.default, {
                        ...iconProps
                    });
                case 'minus':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Remove.default, {
                        ...iconProps
                    });
                case 'up':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ArrowUpward.default, {
                        ...iconProps
                    });
                case 'down':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ArrowDownward.default, {
                        ...iconProps
                    });
                case 'left':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ArrowBack.default, {
                        ...iconProps
                    });
                case 'right':
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ArrowForward.default, {
                        ...iconProps
                    });
                default:
                    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Square.default, {
                        ...iconProps
                    });
            }
        }
        getShapeIcon.displayName = 'getShapeIcon';
        return getShapeIcon;
    }, []);
    // Get game-specific color styling from theme
    const getColorStyles = (color)=>{
        const gameColors = theme.palette.games?.colors;
        if (!gameColors) return {};
        const colorKey = color.toLowerCase();
        const colorValue = gameColors[colorKey];
        if (colorValue) {
            return {
                backgroundColor: colorValue,
                color: [
                    'yellow',
                    'orange',
                    'pink'
                ].includes(colorKey) ? '#000' : '#fff'
            };
        }
        return {};
    };
    // Generate content based on game type and children
    const getContent = ()=>{
        if (gameType === 'colors' && typeof children === 'string') {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                variant: "h6",
                component: "span",
                sx: {
                    fontWeight: 'medium',
                    textTransform: 'capitalize',
                    ...getColorStyles(children)
                },
                children: children
            });
        } else if (gameType === 'shapes' && typeof children === 'string') {
            return getShapeIcon(children);
        } else if (typeof children === 'string') {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                variant: "h6",
                component: "span",
                sx: {
                    fontWeight: 'medium',
                    textAlign: 'center',
                    padding: theme.spacing(1)
                },
                children: children
            });
        }
        return children;
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.StyledChoiceCard, {
        onClick: !disabled ? onClick : undefined,
        role: "button",
        tabIndex: disabled ? -1 : 0,
        "aria-label": `Choice: ${children}`,
        "aria-pressed": selected,
        "aria-disabled": disabled,
        onKeyDown: (e)=>{
            if (!disabled && (e.key === 'Enter' || e.key === ' ')) {
                e.preventDefault();
                onClick();
            }
        },
        sx: {
            // Pass styling props through sx instead of component props
            ...selected && {
                borderColor: correct ? theme.palette.success.main : incorrect ? theme.palette.error.main : theme.palette.primary.main,
                borderWidth: '2px',
                borderStyle: 'solid',
                boxShadow: correct ? theme.customShadows.focus : incorrect ? theme.customShadows.focusError : theme.customShadows.cardHover
            },
            ...disabled && {
                opacity: 0.6,
                pointerEvents: 'none'
            },
            // Game-specific styling
            ...gameType === 'colors' && {
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
            },
            ...gameType === 'shapes' && {
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                '& .MuiSvgIcon-root': {
                    fontSize: 80,
                    transition: 'transform 0.3s ease, color 0.3s ease',
                    ...selected && {
                        transform: 'scale(1.1)',
                        color: correct ? theme.palette.success.light : incorrect ? theme.palette.error.light : undefined
                    }
                }
            }
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.StyledChoiceCardAction, {
            disabled: disabled,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CardContent, {
                sx: {
                    padding: theme.spacing(2),
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: '100%',
                    height: '100%',
                    '&:last-child': {
                        paddingBottom: theme.spacing(2)
                    }
                },
                children: getContent()
            })
        })
    });
}
ChoiceCard.displayName = 'ChoiceCard';
const _default = ChoiceCard;

//# sourceMappingURL=data:application/json;base64,
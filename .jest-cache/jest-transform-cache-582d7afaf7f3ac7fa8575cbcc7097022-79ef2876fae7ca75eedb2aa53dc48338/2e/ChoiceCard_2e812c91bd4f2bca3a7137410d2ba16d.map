{"version":3,"sources":["C:\\repos\\family-oriented\\src\\shared\\components\\cards\\ChoiceCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ReactNode, useMemo } from \"react\";\r\nimport { CardContent, Typography, useTheme } from '@mui/material';\r\nimport { StyledChoiceCard, StyledChoiceCardAction } from '@/shared/components';\r\nimport { GameType } from '@/utils/gameUtils';\r\nimport { UI_CONSTANTS } from '@/utils/constants';\r\nimport {\r\n  Circle,\r\n  Square,\r\n  ChangeHistory,\r\n  Rectangle,\r\n  Star,\r\n  Favorite,\r\n  Diamond,\r\n  BeachAccess,\r\n  Build,\r\n  Cake,\r\n  Phone,\r\n  EmojiEmotions,\r\n  WbSunny,\r\n  DarkMode,\r\n  Cloud,\r\n  Add,\r\n  Remove,\r\n  ArrowUpward,\r\n  ArrowDownward,\r\n  ArrowBack,\r\n  ArrowForward\r\n} from '@mui/icons-material';\r\n\r\ninterface ChoiceCardProps {\r\n  onClick: () => void;\r\n  children: ReactNode;\r\n  selected?: boolean;\r\n  correct?: boolean;\r\n  incorrect?: boolean;\r\n  disabled?: boolean;\r\n  gameType?: GameType;\r\n}\r\n\r\n/**\r\n * Enhanced choice card component using styled components and design tokens\r\n * Consolidated game-specific styling logic with improved accessibility\r\n */\r\nfunction ChoiceCard({ \r\n  onClick, \r\n  children,\r\n  selected = false,\r\n  correct = false,\r\n  incorrect = false,\r\n  disabled = false,\r\n  gameType,\r\n}: ChoiceCardProps) {\r\n  const theme = useTheme();\r\n\r\n  // Get the appropriate icon for shapes using design tokens\r\n  const getShapeIcon = useMemo(function createShapeIconFunction() {\r\n    function getShapeIcon(shape: string) {\r\n      const iconSize = UI_CONSTANTS.SHAPE_ICON_SIZE;\r\n      const iconProps = { sx: { fontSize: iconSize } };\r\n      \r\n      switch (shape.toLowerCase()) {\r\n        case 'circle':\r\n          return <Circle {...iconProps} />;\r\n        case 'square':\r\n          return <Square {...iconProps} />;\r\n        case 'triangle':\r\n          return <ChangeHistory {...iconProps} />;\r\n        case 'rectangle':\r\n          return <Rectangle {...iconProps} />;\r\n        case 'star':\r\n          return <Star {...iconProps} />;\r\n        case 'heart':\r\n          return <Favorite {...iconProps} />;\r\n        case 'diamond':\r\n          return <Diamond {...iconProps} />;\r\n        case 'umbrella':\r\n          return <BeachAccess {...iconProps} />;\r\n        case 'wrench':\r\n          return <Build {...iconProps} />;\r\n        case 'cake':\r\n          return <Cake {...iconProps} />;\r\n        case 'call':\r\n          return <Phone {...iconProps} />;\r\n        case 'smile':\r\n          return <EmojiEmotions {...iconProps} />;\r\n        case 'sun':\r\n          return <WbSunny {...iconProps} />;\r\n        case 'moon':\r\n          return <DarkMode {...iconProps} />;\r\n        case 'cloud':\r\n          return <Cloud {...iconProps} />;\r\n        case 'plus':\r\n          return <Add {...iconProps} />;\r\n        case 'minus':\r\n          return <Remove {...iconProps} />;\r\n        case 'up':\r\n          return <ArrowUpward {...iconProps} />;\r\n        case 'down':\r\n          return <ArrowDownward {...iconProps} />;\r\n        case 'left':\r\n          return <ArrowBack {...iconProps} />;\r\n        case 'right':\r\n          return <ArrowForward {...iconProps} />;\r\n        default:\r\n          return <Square {...iconProps} />;\r\n      }\r\n    }\r\n    \r\n    getShapeIcon.displayName = 'getShapeIcon';\r\n    return getShapeIcon;\r\n  }, []);\r\n\r\n  // Get game-specific color styling from theme\r\n  const getColorStyles = (color: string) => {\r\n    const gameColors = theme.palette.games?.colors;\r\n    if (!gameColors) return {};\r\n    \r\n    const colorKey = color.toLowerCase();\r\n    const colorValue = gameColors[colorKey as keyof typeof gameColors];\r\n    \r\n    if (colorValue) {\r\n      return {\r\n        backgroundColor: colorValue,\r\n        color: ['yellow', 'orange', 'pink'].includes(colorKey) ? '#000' : '#fff',\r\n      };\r\n    }\r\n    \r\n    return {};\r\n  };\r\n\r\n  // Generate content based on game type and children\r\n  const getContent = () => {\r\n    if (gameType === 'colors' && typeof children === 'string') {\r\n      return (\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"span\"\r\n          sx={{ \r\n            fontWeight: 'medium',\r\n            textTransform: 'capitalize',\r\n            ...getColorStyles(children)\r\n          }}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      );\r\n    } else if (gameType === 'shapes' && typeof children === 'string') {\r\n      return getShapeIcon(children);\r\n    } else if (typeof children === 'string') {\r\n      return (\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"span\"\r\n          sx={{ \r\n            fontWeight: 'medium',\r\n            textAlign: 'center',\r\n            padding: theme.spacing(1),\r\n          }}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      );\r\n    }\r\n    return children;\r\n  };\r\n\r\n  return (\r\n    <StyledChoiceCard\r\n      onClick={!disabled ? onClick : undefined}\r\n      role=\"button\"\r\n      tabIndex={disabled ? -1 : 0}\r\n      aria-label={`Choice: ${children}`}\r\n      aria-pressed={selected}\r\n      aria-disabled={disabled}\r\n      onKeyDown={(e) => {\r\n        if (!disabled && (e.key === 'Enter' || e.key === ' ')) {\r\n          e.preventDefault();\r\n          onClick();\r\n        }\r\n      }}\r\n      sx={{\r\n        // Pass styling props through sx instead of component props\r\n        ...(selected && {\r\n          borderColor: correct \r\n            ? theme.palette.success.main \r\n            : incorrect \r\n              ? theme.palette.error.main \r\n              : theme.palette.primary.main,\r\n          borderWidth: '2px',\r\n          borderStyle: 'solid',\r\n          boxShadow: correct\r\n            ? theme.customShadows.focus\r\n            : incorrect\r\n              ? theme.customShadows.focusError\r\n              : theme.customShadows.cardHover,\r\n        }),\r\n        ...(disabled && {\r\n          opacity: 0.6,\r\n          pointerEvents: 'none',\r\n        }),\r\n        // Game-specific styling\r\n        ...(gameType === 'colors' && {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }),\r\n        ...(gameType === 'shapes' && {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: 80,\r\n            transition: 'transform 0.3s ease, color 0.3s ease',\r\n            ...(selected && {\r\n              transform: 'scale(1.1)',\r\n              color: correct \r\n                ? theme.palette.success.light \r\n                : incorrect \r\n                  ? theme.palette.error.light \r\n                  : undefined,\r\n            }),\r\n          },\r\n        }),\r\n      }}\r\n    >\r\n      <StyledChoiceCardAction disabled={disabled}>\r\n        <CardContent sx={{ \r\n          padding: theme.spacing(2),\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%',\r\n          height: '100%',\r\n          '&:last-child': { paddingBottom: theme.spacing(2) },\r\n        }}>\r\n          {getContent()}\r\n        </CardContent>\r\n      </StyledChoiceCardAction>\r\n    </StyledChoiceCard>\r\n  );\r\n}\r\n\r\nChoiceCard.displayName = 'ChoiceCard';\r\nexport default ChoiceCard; "],"names":["ChoiceCard","onClick","children","selected","correct","incorrect","disabled","gameType","theme","useTheme","getShapeIcon","useMemo","createShapeIconFunction","shape","iconSize","UI_CONSTANTS","SHAPE_ICON_SIZE","iconProps","sx","fontSize","toLowerCase","Circle","Square","ChangeHistory","Rectangle","Star","Favorite","Diamond","BeachAccess","Build","Cake","Phone","EmojiEmotions","WbSunny","DarkMode","Cloud","Add","Remove","ArrowUpward","ArrowDownward","ArrowBack","ArrowForward","displayName","getColorStyles","color","gameColors","palette","games","colors","colorKey","colorValue","backgroundColor","includes","getContent","Typography","variant","component","fontWeight","textTransform","textAlign","padding","spacing","StyledChoiceCard","undefined","role","tabIndex","aria-label","aria-pressed","aria-disabled","onKeyDown","e","key","preventDefault","borderColor","success","main","error","primary","borderWidth","borderStyle","boxShadow","customShadows","focus","focusError","cardHover","opacity","pointerEvents","display","alignItems","justifyContent","transition","transform","light","StyledChoiceCardAction","CardContent","width","height","paddingBottom"],"mappings":"AAAA;;;;;+BAqPA;;;eAAA;;;;uBAnPmC;0BACe;4BACO;2BAE5B;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmC7B;;;CAGC,GACD,SAASA,WAAW,EAClBC,OAAO,EACPC,QAAQ,EACRC,WAAW,KAAK,EAChBC,UAAU,KAAK,EACfC,YAAY,KAAK,EACjBC,WAAW,KAAK,EAChBC,QAAQ,EACQ;IAChB,MAAMC,QAAQC,IAAAA,kBAAQ;IAEtB,0DAA0D;IAC1D,MAAMC,eAAeC,IAAAA,cAAO,EAAC,SAASC;QACpC,SAASF,aAAaG,KAAa;YACjC,MAAMC,WAAWC,uBAAY,CAACC,eAAe;YAC7C,MAAMC,YAAY;gBAAEC,IAAI;oBAAEC,UAAUL;gBAAS;YAAE;YAE/C,OAAQD,MAAMO,WAAW;gBACvB,KAAK;oBACH,qBAAO,qBAACC,eAAM;wBAAE,GAAGJ,SAAS;;gBAC9B,KAAK;oBACH,qBAAO,qBAACK,eAAM;wBAAE,GAAGL,SAAS;;gBAC9B,KAAK;oBACH,qBAAO,qBAACM,sBAAa;wBAAE,GAAGN,SAAS;;gBACrC,KAAK;oBACH,qBAAO,qBAACO,kBAAS;wBAAE,GAAGP,SAAS;;gBACjC,KAAK;oBACH,qBAAO,qBAACQ,aAAI;wBAAE,GAAGR,SAAS;;gBAC5B,KAAK;oBACH,qBAAO,qBAACS,iBAAQ;wBAAE,GAAGT,SAAS;;gBAChC,KAAK;oBACH,qBAAO,qBAACU,gBAAO;wBAAE,GAAGV,SAAS;;gBAC/B,KAAK;oBACH,qBAAO,qBAACW,oBAAW;wBAAE,GAAGX,SAAS;;gBACnC,KAAK;oBACH,qBAAO,qBAACY,cAAK;wBAAE,GAAGZ,SAAS;;gBAC7B,KAAK;oBACH,qBAAO,qBAACa,aAAI;wBAAE,GAAGb,SAAS;;gBAC5B,KAAK;oBACH,qBAAO,qBAACc,cAAK;wBAAE,GAAGd,SAAS;;gBAC7B,KAAK;oBACH,qBAAO,qBAACe,sBAAa;wBAAE,GAAGf,SAAS;;gBACrC,KAAK;oBACH,qBAAO,qBAACgB,gBAAO;wBAAE,GAAGhB,SAAS;;gBAC/B,KAAK;oBACH,qBAAO,qBAACiB,iBAAQ;wBAAE,GAAGjB,SAAS;;gBAChC,KAAK;oBACH,qBAAO,qBAACkB,cAAK;wBAAE,GAAGlB,SAAS;;gBAC7B,KAAK;oBACH,qBAAO,qBAACmB,YAAG;wBAAE,GAAGnB,SAAS;;gBAC3B,KAAK;oBACH,qBAAO,qBAACoB,eAAM;wBAAE,GAAGpB,SAAS;;gBAC9B,KAAK;oBACH,qBAAO,qBAACqB,oBAAW;wBAAE,GAAGrB,SAAS;;gBACnC,KAAK;oBACH,qBAAO,qBAACsB,sBAAa;wBAAE,GAAGtB,SAAS;;gBACrC,KAAK;oBACH,qBAAO,qBAACuB,kBAAS;wBAAE,GAAGvB,SAAS;;gBACjC,KAAK;oBACH,qBAAO,qBAACwB,qBAAY;wBAAE,GAAGxB,SAAS;;gBACpC;oBACE,qBAAO,qBAACK,eAAM;wBAAE,GAAGL,SAAS;;YAChC;QACF;QAEAP,aAAagC,WAAW,GAAG;QAC3B,OAAOhC;IACT,GAAG,EAAE;IAEL,6CAA6C;IAC7C,MAAMiC,iBAAiB,CAACC;QACtB,MAAMC,aAAarC,MAAMsC,OAAO,CAACC,KAAK,EAAEC;QACxC,IAAI,CAACH,YAAY,OAAO,CAAC;QAEzB,MAAMI,WAAWL,MAAMxB,WAAW;QAClC,MAAM8B,aAAaL,UAAU,CAACI,SAAoC;QAElE,IAAIC,YAAY;YACd,OAAO;gBACLC,iBAAiBD;gBACjBN,OAAO;oBAAC;oBAAU;oBAAU;iBAAO,CAACQ,QAAQ,CAACH,YAAY,SAAS;YACpE;QACF;QAEA,OAAO,CAAC;IACV;IAEA,mDAAmD;IACnD,MAAMI,aAAa;QACjB,IAAI9C,aAAa,YAAY,OAAOL,aAAa,UAAU;YACzD,qBACE,qBAACoD,oBAAU;gBACTC,SAAQ;gBACRC,WAAU;gBACVtC,IAAI;oBACFuC,YAAY;oBACZC,eAAe;oBACf,GAAGf,eAAezC,SAAS;gBAC7B;0BAECA;;QAGP,OAAO,IAAIK,aAAa,YAAY,OAAOL,aAAa,UAAU;YAChE,OAAOQ,aAAaR;QACtB,OAAO,IAAI,OAAOA,aAAa,UAAU;YACvC,qBACE,qBAACoD,oBAAU;gBACTC,SAAQ;gBACRC,WAAU;gBACVtC,IAAI;oBACFuC,YAAY;oBACZE,WAAW;oBACXC,SAASpD,MAAMqD,OAAO,CAAC;gBACzB;0BAEC3D;;QAGP;QACA,OAAOA;IACT;IAEA,qBACE,qBAAC4D,4BAAgB;QACf7D,SAAS,CAACK,WAAWL,UAAU8D;QAC/BC,MAAK;QACLC,UAAU3D,WAAW,CAAC,IAAI;QAC1B4D,cAAY,CAAC,QAAQ,EAAEhE,UAAU;QACjCiE,gBAAchE;QACdiE,iBAAe9D;QACf+D,WAAW,CAACC;YACV,IAAI,CAAChE,YAAagE,CAAAA,EAAEC,GAAG,KAAK,WAAWD,EAAEC,GAAG,KAAK,GAAE,GAAI;gBACrDD,EAAEE,cAAc;gBAChBvE;YACF;QACF;QACAiB,IAAI;YACF,2DAA2D;YAC3D,GAAIf,YAAY;gBACdsE,aAAarE,UACTI,MAAMsC,OAAO,CAAC4B,OAAO,CAACC,IAAI,GAC1BtE,YACEG,MAAMsC,OAAO,CAAC8B,KAAK,CAACD,IAAI,GACxBnE,MAAMsC,OAAO,CAAC+B,OAAO,CAACF,IAAI;gBAChCG,aAAa;gBACbC,aAAa;gBACbC,WAAW5E,UACPI,MAAMyE,aAAa,CAACC,KAAK,GACzB7E,YACEG,MAAMyE,aAAa,CAACE,UAAU,GAC9B3E,MAAMyE,aAAa,CAACG,SAAS;YACrC,CAAC;YACD,GAAI9E,YAAY;gBACd+E,SAAS;gBACTC,eAAe;YACjB,CAAC;YACD,wBAAwB;YACxB,GAAI/E,aAAa,YAAY;gBAC3BgF,SAAS;gBACTC,YAAY;gBACZC,gBAAgB;YAClB,CAAC;YACD,GAAIlF,aAAa,YAAY;gBAC3BgF,SAAS;gBACTC,YAAY;gBACZC,gBAAgB;gBAChB,sBAAsB;oBACpBtE,UAAU;oBACVuE,YAAY;oBACZ,GAAIvF,YAAY;wBACdwF,WAAW;wBACX/C,OAAOxC,UACHI,MAAMsC,OAAO,CAAC4B,OAAO,CAACkB,KAAK,GAC3BvF,YACEG,MAAMsC,OAAO,CAAC8B,KAAK,CAACgB,KAAK,GACzB7B;oBACR,CAAC;gBACH;YACF,CAAC;QACH;kBAEA,cAAA,qBAAC8B,kCAAsB;YAACvF,UAAUA;sBAChC,cAAA,qBAACwF,qBAAW;gBAAC5E,IAAI;oBACf0C,SAASpD,MAAMqD,OAAO,CAAC;oBACvB0B,SAAS;oBACTC,YAAY;oBACZC,gBAAgB;oBAChBM,OAAO;oBACPC,QAAQ;oBACR,gBAAgB;wBAAEC,eAAezF,MAAMqD,OAAO,CAAC;oBAAG;gBACpD;0BACGR;;;;AAKX;AAEArD,WAAW0C,WAAW,GAAG;MACzB,WAAe1C"}
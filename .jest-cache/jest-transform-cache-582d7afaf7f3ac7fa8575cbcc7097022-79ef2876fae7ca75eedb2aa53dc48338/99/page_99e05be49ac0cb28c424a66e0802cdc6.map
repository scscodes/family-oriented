{"version":3,"sources":["C:\\repos\\family-oriented\\src\\app\\dashboard\\page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAvatar, useUser, useRoleGuard } from \"@/context/UserContext\";\r\nimport { useDemo } from \"@/context/DemoContext\";\r\nimport { analyticsService, type LearningProgressData, type PerformanceMetrics } from \"@/utils/analyticsService\";\r\nimport { logger } from \"@/utils/logger\";\r\nimport { \r\n  Box, \r\n  Typography, \r\n  CircularProgress, \r\n  Alert, \r\n  Button, \r\n  Card, \r\n  CardContent\r\n} from \"@mui/material\";\r\nimport { Settings } from '@mui/icons-material';\r\nimport dynamic from 'next/dynamic';\r\n\r\nimport { FeatureGate, UsageOverview, SubscriptionBadge } from '@/shared/components';\r\nimport { useSubscription } from '@/hooks/useSubscription';\r\nimport { useEnhancedTheme } from '@/theme/EnhancedThemeProvider';\r\n\r\n// Dynamically import DashboardCharts to avoid SSR issues with Chart.js\r\nconst DashboardCharts = dynamic(() => import('@/features/analytics/components/DashboardCharts'), {\r\n  ssr: false,\r\n  loading: () => (\r\n    <Box sx={{ p: 2, textAlign: 'center' }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  )\r\n});\r\n\r\n/**\r\n * Check if all contexts are ready for dashboard rendering\r\n */\r\nfunction useIsDashboardReady() {\r\n  const { isHydrated } = useEnhancedTheme();\r\n  const { loadingState } = useUser();\r\n  const { isTransitioning } = useDemo();\r\n  \r\n  // Wait for theme, user context, and no ongoing demo transitions\r\n  return isHydrated && loadingState.isReady && !isTransitioning;\r\n}\r\n\r\n/**\r\n * User Dashboard page for learning progress, recommendations, and metrics.\r\n * Focuses on robust data flow and error handling.\r\n * Uses role guard to prevent flashing of admin-only content.\r\n * Enhanced with demo context awareness for smooth scenario switching.\r\n */\r\nexport default function DashboardPage() {\r\n  const isDashboardReady = useIsDashboardReady();\r\n  const { currentAvatar } = useAvatar();\r\n  const { error: userError, loadingState } = useUser();\r\n  const { hasRole, isReady } = useRoleGuard();\r\n  const { isTransitioning, currentScenario, error: demoError } = useDemo();\r\n  const { } = useSubscription();\r\n  const avatarId = currentAvatar?.id;\r\n\r\n  const [progress, setProgress] = useState<LearningProgressData[] | null>(null);\r\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\r\n  const [dashboardLoading, setDashboardLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastLoadedAvatarId, setLastLoadedAvatarId] = useState<string | null>(null);\r\n\r\n  // Enhanced analytics loading with demo scenario awareness\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      // Don't load during demo transitions\r\n      if (isTransitioning) {\r\n        logger.debug('Skipping analytics load during demo transition');\r\n        return;\r\n      }\r\n\r\n      // Wait for user context to be ready\r\n      if (!loadingState.isReady) {\r\n        logger.debug('Waiting for user context to be ready');\r\n        return;\r\n      }\r\n\r\n      if (!avatarId) {\r\n        logger.debug('No avatar ID, clearing dashboard data');\r\n        setProgress(null);\r\n        setMetrics(null);\r\n        setDashboardLoading(false);\r\n        setLastLoadedAvatarId(null);\r\n        return;\r\n      }\r\n\r\n      // Skip if already loaded for this avatar (prevents unnecessary reloads)\r\n      if (lastLoadedAvatarId === avatarId) {\r\n        logger.debug('Analytics already loaded for this avatar:', avatarId);\r\n        return;\r\n      }\r\n\r\n      setDashboardLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        logger.info('🔄 Loading analytics data for avatar:', avatarId, 'in scenario:', currentScenario);\r\n\r\n        const [progressData, metricsData] = await Promise.all([\r\n          analyticsService.getAvatarProgress(avatarId),\r\n          analyticsService.getPerformanceMetrics(avatarId)\r\n        ]);\r\n\r\n        logger.debug('📊 Analytics data loaded successfully:', { \r\n          progress: progressData?.length || 0, \r\n          metrics: metricsData?.totalGamesPlayed || 0,\r\n          avatarId,\r\n          scenario: currentScenario\r\n        });\r\n\r\n        setProgress(progressData);\r\n        setMetrics(metricsData);\r\n        setLastLoadedAvatarId(avatarId);\r\n        \r\n      } catch (err) {\r\n        logger.error('❌ Error loading analytics data:', {\r\n          error: err,\r\n          avatarId,\r\n          scenario: currentScenario,\r\n          isDemo: avatarId?.startsWith('demo-') || avatarId?.startsWith('00000000')\r\n        });\r\n        \r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to load analytics data';\r\n        setError(`Analytics Error: ${errorMessage}`);\r\n        \r\n        // Clear data on error\r\n        setProgress(null);\r\n        setMetrics(null);\r\n        setLastLoadedAvatarId(null);\r\n      } finally {\r\n        setDashboardLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [avatarId, isTransitioning, loadingState.isReady, currentScenario, lastLoadedAvatarId]);\r\n\r\n  // Reset loading state when demo scenario changes\r\n  useEffect(() => {\r\n    if (isTransitioning) {\r\n      logger.debug('Demo transition started, resetting dashboard state');\r\n      setError(null);\r\n      setLastLoadedAvatarId(null); // Force reload after transition\r\n    }\r\n  }, [isTransitioning]);\r\n\r\n  // Handle demo scenario transition loading\r\n  if (isTransitioning) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <CircularProgress />\r\n        <Typography variant=\"body2\" sx={{ ml: 2 }}>Switching demo scenario...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Wait for full hydration before showing dashboard\r\n  if (!isDashboardReady) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <CircularProgress />\r\n        <Typography variant=\"body2\" sx={{ ml: 2 }}>Loading dashboard...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Handle demo context errors\r\n  if (demoError) {\r\n    return (\r\n      <Box sx={{ p: 2 }}>\r\n        <Alert severity=\"error\">\r\n          Demo Error: {demoError}\r\n          <br />\r\n          <Button variant=\"outlined\" sx={{ mt: 1 }} onClick={() => window.location.reload()}>\r\n            Reload Page\r\n          </Button>\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Handle user context errors\r\n  if (userError) {\r\n    return (\r\n      <Box sx={{ p: 2 }}>\r\n        <Alert severity=\"error\">\r\n          User Context Error: {userError}\r\n          <br />\r\n          <Button variant=\"outlined\" sx={{ mt: 1 }} onClick={() => window.location.reload()}>\r\n            Reload Page\r\n          </Button>\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Handle no avatar case\r\n  if (!avatarId) {\r\n    return (\r\n      <Alert severity=\"info\" sx={{ m: 2 }}>\r\n        No avatar selected. Please create or select an avatar to view your dashboard.\r\n        {currentScenario && (\r\n          <Typography variant=\"body2\" sx={{ mt: 1, fontStyle: 'italic' }}>\r\n            Current demo scenario: {currentScenario}\r\n          </Typography>\r\n        )}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  // Handle loading state\r\n  if (dashboardLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <CircularProgress />\r\n        <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n          Loading analytics for {currentAvatar?.name || 'avatar'}...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Handle analytics errors\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 2 }}>\r\n        <Alert \r\n          severity=\"warning\" \r\n          action={\r\n            <Button \r\n              color=\"inherit\" \r\n              size=\"small\" \r\n              onClick={() => {\r\n                setError(null);\r\n                setLastLoadedAvatarId(null);\r\n              }}\r\n            >\r\n              Retry\r\n            </Button>\r\n          }\r\n        >\r\n          {error}\r\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n            Avatar: {currentAvatar?.name} ({avatarId})\r\n            <br />\r\n            Scenario: {currentScenario}\r\n          </Typography>\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Header with Subscription Badge */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Box>\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            Analytics Dashboard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {currentAvatar?.name} • {currentScenario}\r\n          </Typography>\r\n        </Box>\r\n        <SubscriptionBadge variant=\"basic\" />\r\n      </Box>\r\n\r\n      {/* Feature Gate for Analytics */}\r\n      <FeatureGate \r\n        feature=\"analytics\" \r\n        mode=\"alert\"\r\n        fallback={\r\n          <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n            Analytics dashboard requires a subscription plan. Please upgrade to access learning insights.\r\n          </Alert>\r\n        }\r\n      >\r\n        {/* Subscription Usage Overview */}\r\n        <Card sx={{ mb: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Subscription Usage\r\n            </Typography>\r\n            <UsageOverview compact={true} />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Advanced Reporting Gate */}\r\n        <FeatureGate \r\n          feature=\"advanced_reporting\" \r\n          mode=\"overlay\"\r\n          fallback={\r\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n              Advanced reporting requires Professional plan. Upgrade to access detailed analytics.\r\n            </Alert>\r\n          }\r\n        >\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Advanced Analytics\r\n              </Typography>\r\n              <DashboardCharts \r\n                progress={progress || []}\r\n                metrics={metrics || {\r\n                  totalGamesPlayed: 0,\r\n                  averageSessionDuration: 0,\r\n                  overallCompletionRate: 0,\r\n                  skillLevelDistribution: {},\r\n                  subjectPreferences: {},\r\n                  learningVelocity: 0,\r\n                  engagementScore: 0\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </FeatureGate>\r\n\r\n        {/* Regular Analytics Content */}\r\n        <Box sx={{ \r\n          display: 'grid', \r\n          gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)' }, \r\n          gap: 3 \r\n        }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Learning Progress\r\n              </Typography>\r\n              {progress && progress.length > 0 ? (\r\n                <Box>\r\n                  {progress.map((p, index) => (\r\n                    <Box key={index} sx={{ mb: 2 }}>\r\n                      <Typography variant=\"body1\">{p.gameId}</Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Mastery: {p.masteryScore}% • Level: {p.skillLevel}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  No progress data available yet. Play some games to see your progress!\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Performance Summary\r\n              </Typography>\r\n              {metrics ? (\r\n                <Box>\r\n                  <Typography variant=\"body2\">\r\n                    Games Played: {metrics.totalGamesPlayed}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Avg Session: {Math.round(metrics.averageSessionDuration / 60)} minutes\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Completion Rate: {Math.round(metrics.overallCompletionRate * 100)}%\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Engagement Score: {Math.round(metrics.engagementScore)}%\r\n                  </Typography>\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  No performance data available yet.\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </FeatureGate>\r\n\r\n      {/* User Management Access for Account Owners */}\r\n      {isReady && hasRole('account_owner') && (\r\n        <Card sx={{ mt: 3 }}>\r\n          <CardContent>\r\n            <FeatureGate \r\n              feature=\"user_management\" \r\n              mode=\"alert\"\r\n              compact={true}\r\n            >\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">\r\n                    User Management\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Manage users, roles, and avatars for your organization\r\n                  </Typography>\r\n                </Box>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  href=\"/dashboard/user-management\"\r\n                  startIcon={<Settings />}\r\n                >\r\n                  Manage Users\r\n                </Button>\r\n              </Box>\r\n            </FeatureGate>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n    </Box>\r\n  );\r\n} "],"names":["DashboardPage","DashboardCharts","dynamic","ssr","loading","Box","sx","p","textAlign","CircularProgress","useIsDashboardReady","isHydrated","useEnhancedTheme","loadingState","useUser","isTransitioning","useDemo","isReady","isDashboardReady","currentAvatar","useAvatar","error","userError","hasRole","useRoleGuard","currentScenario","demoError","useSubscription","avatarId","id","progress","setProgress","useState","metrics","setMetrics","dashboardLoading","setDashboardLoading","setError","lastLoadedAvatarId","setLastLoadedAvatarId","useEffect","loadData","logger","debug","info","progressData","metricsData","Promise","all","analyticsService","getAvatarProgress","getPerformanceMetrics","length","totalGamesPlayed","scenario","err","isDemo","startsWith","errorMessage","Error","message","display","justifyContent","alignItems","minHeight","Typography","variant","ml","Alert","severity","br","Button","mt","onClick","window","location","reload","m","fontStyle","name","action","color","size","mb","component","SubscriptionBadge","FeatureGate","feature","mode","fallback","Card","CardContent","gutterBottom","UsageOverview","compact","averageSessionDuration","overallCompletionRate","skillLevelDistribution","subjectPreferences","learningVelocity","engagementScore","gridTemplateColumns","xs","md","gap","map","index","gameId","masteryScore","skillLevel","Math","round","href","startIcon","Settings"],"mappings":"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"}
25614dc0f9688997707a6720cb2a91b0
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * User Dashboard page for learning progress, recommendations, and metrics.
 * Focuses on robust data flow and error handling.
 * Uses role guard to prevent flashing of admin-only content.
 * Enhanced with demo context awareness for smooth scenario switching.
 */ "default", {
    enumerable: true,
    get: function() {
        return DashboardPage;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _UserContext = require("../../context/UserContext");
const _DemoContext = require("../../context/DemoContext");
const _analyticsService = require("../../utils/analyticsService");
const _logger = require("../../utils/logger");
const _material = require("@mui/material");
const _Settings = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Settings"));
const _dynamic = /*#__PURE__*/ _interop_require_default(require("next/dynamic"));
const _components = require("../../shared/components");
const _useSubscription = require("../../hooks/useSubscription");
const _EnhancedThemeProvider = require("../../theme/EnhancedThemeProvider");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Dynamically import DashboardCharts to avoid SSR issues with Chart.js
const DashboardCharts = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../../features/analytics/components/DashboardCharts"))), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("@/features/analytics/components/DashboardCharts")
            ]
    },
    ssr: false,
    loading: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2,
                textAlign: 'center'
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {})
        })
});
/**
 * Check if all contexts are ready for dashboard rendering
 */ function useIsDashboardReady() {
    const { isHydrated } = (0, _EnhancedThemeProvider.useEnhancedTheme)();
    const { loadingState } = (0, _UserContext.useUser)();
    const { isTransitioning } = (0, _DemoContext.useDemo)();
    // Wait for theme, user context, and no ongoing demo transitions
    return isHydrated && loadingState.isReady && !isTransitioning;
}
function DashboardPage() {
    const isDashboardReady = useIsDashboardReady();
    const { currentAvatar } = (0, _UserContext.useAvatar)();
    const { error: userError, loadingState } = (0, _UserContext.useUser)();
    const { hasRole, isReady } = (0, _UserContext.useRoleGuard)();
    const { isTransitioning, currentScenario, error: demoError } = (0, _DemoContext.useDemo)();
    const {} = (0, _useSubscription.useSubscription)();
    const avatarId = currentAvatar?.id;
    const [progress, setProgress] = (0, _react.useState)(null);
    const [metrics, setMetrics] = (0, _react.useState)(null);
    const [dashboardLoading, setDashboardLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    const [lastLoadedAvatarId, setLastLoadedAvatarId] = (0, _react.useState)(null);
    // Enhanced analytics loading with demo scenario awareness
    (0, _react.useEffect)(()=>{
        const loadData = async ()=>{
            // Don't load during demo transitions
            if (isTransitioning) {
                _logger.logger.debug('Skipping analytics load during demo transition');
                return;
            }
            // Wait for user context to be ready
            if (!loadingState.isReady) {
                _logger.logger.debug('Waiting for user context to be ready');
                return;
            }
            if (!avatarId) {
                _logger.logger.debug('No avatar ID, clearing dashboard data');
                setProgress(null);
                setMetrics(null);
                setDashboardLoading(false);
                setLastLoadedAvatarId(null);
                return;
            }
            // Skip if already loaded for this avatar (prevents unnecessary reloads)
            if (lastLoadedAvatarId === avatarId) {
                _logger.logger.debug('Analytics already loaded for this avatar:', avatarId);
                return;
            }
            setDashboardLoading(true);
            setError(null);
            try {
                _logger.logger.info('🔄 Loading analytics data for avatar:', avatarId, 'in scenario:', currentScenario);
                const [progressData, metricsData] = await Promise.all([
                    _analyticsService.analyticsService.getAvatarProgress(avatarId),
                    _analyticsService.analyticsService.getPerformanceMetrics(avatarId)
                ]);
                _logger.logger.debug('📊 Analytics data loaded successfully:', {
                    progress: progressData?.length || 0,
                    metrics: metricsData?.totalGamesPlayed || 0,
                    avatarId,
                    scenario: currentScenario
                });
                setProgress(progressData);
                setMetrics(metricsData);
                setLastLoadedAvatarId(avatarId);
            } catch (err) {
                _logger.logger.error('❌ Error loading analytics data:', {
                    error: err,
                    avatarId,
                    scenario: currentScenario,
                    isDemo: avatarId?.startsWith('demo-') || avatarId?.startsWith('00000000')
                });
                const errorMessage = err instanceof Error ? err.message : 'Failed to load analytics data';
                setError(`Analytics Error: ${errorMessage}`);
                // Clear data on error
                setProgress(null);
                setMetrics(null);
                setLastLoadedAvatarId(null);
            } finally{
                setDashboardLoading(false);
            }
        };
        loadData();
    }, [
        avatarId,
        isTransitioning,
        loadingState.isReady,
        currentScenario,
        lastLoadedAvatarId
    ]);
    // Reset loading state when demo scenario changes
    (0, _react.useEffect)(()=>{
        if (isTransitioning) {
            _logger.logger.debug('Demo transition started, resetting dashboard state');
            setError(null);
            setLastLoadedAvatarId(null); // Force reload after transition
        }
    }, [
        isTransitioning
    ]);
    // Handle demo scenario transition loading
    if (isTransitioning) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                minHeight: '200px'
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {}),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                    variant: "body2",
                    sx: {
                        ml: 2
                    },
                    children: "Switching demo scenario..."
                })
            ]
        });
    }
    // Wait for full hydration before showing dashboard
    if (!isDashboardReady) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                minHeight: '200px'
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {}),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                    variant: "body2",
                    sx: {
                        ml: 2
                    },
                    children: "Loading dashboard..."
                })
            ]
        });
    }
    // Handle demo context errors
    if (demoError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
                severity: "error",
                children: [
                    "Demo Error: ",
                    demoError,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                        variant: "outlined",
                        sx: {
                            mt: 1
                        },
                        onClick: ()=>window.location.reload(),
                        children: "Reload Page"
                    })
                ]
            })
        });
    }
    // Handle user context errors
    if (userError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
                severity: "error",
                children: [
                    "User Context Error: ",
                    userError,
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                        variant: "outlined",
                        sx: {
                            mt: 1
                        },
                        onClick: ()=>window.location.reload(),
                        children: "Reload Page"
                    })
                ]
            })
        });
    }
    // Handle no avatar case
    if (!avatarId) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
            severity: "info",
            sx: {
                m: 2
            },
            children: [
                "No avatar selected. Please create or select an avatar to view your dashboard.",
                currentScenario && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                    variant: "body2",
                    sx: {
                        mt: 1,
                        fontStyle: 'italic'
                    },
                    children: [
                        "Current demo scenario: ",
                        currentScenario
                    ]
                })
            ]
        });
    }
    // Handle loading state
    if (dashboardLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
            sx: {
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                minHeight: '200px'
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {}),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                    variant: "body2",
                    sx: {
                        ml: 2
                    },
                    children: [
                        "Loading analytics for ",
                        currentAvatar?.name || 'avatar',
                        "..."
                    ]
                })
            ]
        });
    }
    // Handle analytics errors
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
                severity: "warning",
                action: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                    color: "inherit",
                    size: "small",
                    onClick: ()=>{
                        setError(null);
                        setLastLoadedAvatarId(null);
                    },
                    children: "Retry"
                }),
                children: [
                    error,
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "body2",
                        sx: {
                            mt: 1
                        },
                        children: [
                            "Avatar: ",
                            currentAvatar?.name,
                            " (",
                            avatarId,
                            ")",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                            "Scenario: ",
                            currentScenario
                        ]
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
        sx: {
            p: 3
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                sx: {
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    mb: 3
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                variant: "h4",
                                component: "h1",
                                children: "Analytics Dashboard"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                variant: "body2",
                                color: "text.secondary",
                                children: [
                                    currentAvatar?.name,
                                    " • ",
                                    currentScenario
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.SubscriptionBadge, {
                        variant: "basic"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_components.FeatureGate, {
                feature: "analytics",
                mode: "alert",
                fallback: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Alert, {
                    severity: "warning",
                    sx: {
                        mb: 3
                    },
                    children: "Analytics dashboard requires a subscription plan. Please upgrade to access learning insights."
                }),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                        sx: {
                            mb: 3
                        },
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                    variant: "h6",
                                    gutterBottom: true,
                                    children: "Subscription Usage"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.UsageOverview, {
                                    compact: true
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.FeatureGate, {
                        feature: "advanced_reporting",
                        mode: "overlay",
                        fallback: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Alert, {
                            severity: "info",
                            sx: {
                                mb: 2
                            },
                            children: "Advanced reporting requires Professional plan. Upgrade to access detailed analytics."
                        }),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                            sx: {
                                mb: 3
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                        variant: "h6",
                                        gutterBottom: true,
                                        children: "Advanced Analytics"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(DashboardCharts, {
                                        progress: progress || [],
                                        metrics: metrics || {
                                            totalGamesPlayed: 0,
                                            averageSessionDuration: 0,
                                            overallCompletionRate: 0,
                                            skillLevelDistribution: {},
                                            subjectPreferences: {},
                                            learningVelocity: 0,
                                            engagementScore: 0
                                        }
                                    })
                                ]
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        sx: {
                            display: 'grid',
                            gridTemplateColumns: {
                                xs: '1fr',
                                md: 'repeat(2, 1fr)'
                            },
                            gap: 3
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "h6",
                                            gutterBottom: true,
                                            children: "Learning Progress"
                                        }),
                                        progress && progress.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                                            children: progress.map((p, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                                    sx: {
                                                        mb: 2
                                                    },
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                                            variant: "body1",
                                                            children: p.gameId
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                            variant: "body2",
                                                            color: "text.secondary",
                                                            children: [
                                                                "Mastery: ",
                                                                p.masteryScore,
                                                                "% • Level: ",
                                                                p.skillLevel
                                                            ]
                                                        })
                                                    ]
                                                }, index))
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "body2",
                                            color: "text.secondary",
                                            children: "No progress data available yet. Play some games to see your progress!"
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "h6",
                                            gutterBottom: true,
                                            children: "Performance Summary"
                                        }),
                                        metrics ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                    variant: "body2",
                                                    children: [
                                                        "Games Played: ",
                                                        metrics.totalGamesPlayed
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                    variant: "body2",
                                                    children: [
                                                        "Avg Session: ",
                                                        Math.round(metrics.averageSessionDuration / 60),
                                                        " minutes"
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                    variant: "body2",
                                                    children: [
                                                        "Completion Rate: ",
                                                        Math.round(metrics.overallCompletionRate * 100),
                                                        "%"
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                                    variant: "body2",
                                                    children: [
                                                        "Engagement Score: ",
                                                        Math.round(metrics.engagementScore),
                                                        "%"
                                                    ]
                                                })
                                            ]
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "body2",
                                            color: "text.secondary",
                                            children: "No performance data available yet."
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            }),
            isReady && hasRole('account_owner') && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                sx: {
                    mt: 3
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CardContent, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_components.FeatureGate, {
                        feature: "user_management",
                        mode: "alert",
                        compact: true,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                            sx: {
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center'
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "h6",
                                            children: "User Management"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "body2",
                                            color: "text.secondary",
                                            children: "Manage users, roles, and avatars for your organization"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                    variant: "contained",
                                    href: "/dashboard/user-management",
                                    startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Settings.default, {}),
                                    children: "Manage Users"
                                })
                            ]
                        })
                    })
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
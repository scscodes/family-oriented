{"version":3,"sources":["C:\\repos\\family-oriented\\src\\shared\\components\\debug\\DemoTransitionPreview.tsx"],"sourcesContent":["/**\r\n * Demo Transition Preview Component\r\n * Shows users what will change when switching demo scenarios\r\n * Provides validation and preview of tier transitions\r\n */\r\n\r\n'use client';\r\n\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Chip,\r\n  Alert,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle,\r\n  Cancel,\r\n  Upgrade,\r\n  ArrowDownward,\r\n  Person,\r\n  Security\r\n} from '@mui/icons-material';\r\nimport { useDemo } from '@/context/DemoContext';\r\nimport { useUser } from '@/context/UserContext';\r\nimport { TIER_CONFIGURATIONS, type SubscriptionTier } from '@/utils/subscriptionService';\r\nimport { DEMO_SCENARIOS } from '@/utils/demoConfig';\r\n\r\ninterface DemoTransitionPreviewProps {\r\n  targetScenarioKey: string;\r\n}\r\n\r\nexport default function DemoTransitionPreview({ targetScenarioKey }: DemoTransitionPreviewProps) {\r\n  const { currentConfig } = useDemo();\r\n  const { avatars } = useUser();\r\n  \r\n  const targetConfig = DEMO_SCENARIOS[targetScenarioKey];\r\n  \r\n  if (!targetConfig) {\r\n    return (\r\n      <Alert severity=\"error\">\r\n        Unknown scenario: {targetScenarioKey}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  const currentTier = currentConfig.tier;\r\n  const targetTier = targetConfig.tier;\r\n  const isUpgrade = getTierPriority(targetTier) > getTierPriority(currentTier);\r\n  const isDowngrade = getTierPriority(targetTier) < getTierPriority(currentTier);\r\n  const isSameTier = currentTier === targetTier;\r\n\r\n  const currentTierConfig = TIER_CONFIGURATIONS[currentTier];\r\n  const targetTierConfig = TIER_CONFIGURATIONS[targetTier];\r\n\r\n  // Calculate feature changes\r\n  const currentFeatures = Object.entries(currentTierConfig.features)\r\n    .filter(([, enabled]) => enabled)\r\n    .map(([name]) => name);\r\n  \r\n  const targetFeatures = Object.entries(targetTierConfig.features)\r\n    .filter(([, enabled]) => enabled)\r\n    .map(([name]) => name);\r\n\r\n  const gainedFeatures = targetFeatures.filter(f => !currentFeatures.includes(f));\r\n  const lostFeatures = currentFeatures.filter(f => !targetFeatures.includes(f));\r\n\r\n  // Check avatar limit compatibility\r\n  const currentAvatarCount = avatars?.length || 0;\r\n  const currentAvatarLimit = currentTierConfig.limits.avatars;\r\n  const targetAvatarLimit = targetTierConfig.limits.avatars;\r\n  const avatarLimitIssue = targetAvatarLimit < currentAvatarCount;\r\n\r\n  return (\r\n    <Box>\r\n      {/* Tier Change Summary */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          Tier Change\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Chip \r\n            label={currentTierConfig.displayName} \r\n            size=\"small\" \r\n            variant=\"outlined\" \r\n          />\r\n          {isUpgrade ? <Upgrade color=\"success\" /> : isDowngrade ? <ArrowDownward color=\"warning\" /> : '→'}\r\n          <Chip \r\n            label={targetTierConfig.displayName} \r\n            size=\"small\" \r\n            color={isUpgrade ? 'success' : isDowngrade ? 'warning' : 'default'}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Avatar Limit Changes */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          Avatar Limits\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Person sx={{ fontSize: 16 }} />\r\n          <Typography variant=\"body2\">\r\n            {currentAvatarLimit === 10000 ? 'Unlimited' : currentAvatarLimit} → {targetAvatarLimit === 10000 ? 'Unlimited' : targetAvatarLimit}\r\n          </Typography>\r\n          {avatarLimitIssue && (\r\n            <Chip \r\n              label=\"⚠️ Over Limit\" \r\n              size=\"small\" \r\n              color=\"error\" \r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        </Box>\r\n        {avatarLimitIssue && (\r\n          <Alert severity=\"warning\" sx={{ mt: 1 }}>\r\n            Current avatar count ({currentAvatarCount}) exceeds target limit ({targetAvatarLimit}). \r\n            Some avatars may need to be removed.\r\n          </Alert>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Role Changes */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          Role Changes\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Security sx={{ fontSize: 16 }} />\r\n          <Typography variant=\"body2\">\r\n            {currentConfig.roles.join(', ')} → {targetConfig.roles.join(', ')}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Feature Changes */}\r\n      {!isSameTier && (gainedFeatures.length > 0 || lostFeatures.length > 0) && (\r\n        <>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            Feature Changes\r\n          </Typography>\r\n          \r\n          {gainedFeatures.length > 0 && (\r\n            <List dense>\r\n              <Typography variant=\"caption\" color=\"success.main\" sx={{ fontWeight: 600 }}>\r\n                Gained Features:\r\n              </Typography>\r\n              {gainedFeatures.map((feature) => (\r\n                <ListItem key={feature} sx={{ py: 0.25 }}>\r\n                  <ListItemIcon sx={{ minWidth: 24 }}>\r\n                    <CheckCircle sx={{ fontSize: 16, color: 'success.main' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText \r\n                    primary={formatFeatureName(feature)}\r\n                    primaryTypographyProps={{ variant: 'body2' }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n\r\n          {lostFeatures.length > 0 && (\r\n            <List dense>\r\n              <Typography variant=\"caption\" color=\"error.main\" sx={{ fontWeight: 600 }}>\r\n                Lost Features:\r\n              </Typography>\r\n              {lostFeatures.map((feature) => (\r\n                <ListItem key={feature} sx={{ py: 0.25 }}>\r\n                  <ListItemIcon sx={{ minWidth: 24 }}>\r\n                    <Cancel sx={{ fontSize: 16, color: 'error.main' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText \r\n                    primary={formatFeatureName(feature)}\r\n                    primaryTypographyProps={{ variant: 'body2' }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Organization Change */}\r\n      <Divider sx={{ my: 2 }} />\r\n      <Box>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          Organization\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {currentConfig.orgName} → {targetConfig.orgName}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Helper functions\r\nfunction getTierPriority(tier: SubscriptionTier): number {\r\n  const priorities = { personal: 1, professional: 2, enterprise: 3 };\r\n  return priorities[tier];\r\n}\r\n\r\nfunction formatFeatureName(feature: string): string {\r\n  return feature\r\n    .replace(/_/g, ' ')\r\n    .replace(/\\b\\w/g, l => l.toUpperCase());\r\n} "],"names":["DemoTransitionPreview","targetScenarioKey","currentConfig","useDemo","avatars","useUser","targetConfig","DEMO_SCENARIOS","Alert","severity","currentTier","tier","targetTier","isUpgrade","getTierPriority","isDowngrade","isSameTier","currentTierConfig","TIER_CONFIGURATIONS","targetTierConfig","currentFeatures","Object","entries","features","filter","enabled","map","name","targetFeatures","gainedFeatures","f","includes","lostFeatures","currentAvatarCount","length","currentAvatarLimit","limits","targetAvatarLimit","avatarLimitIssue","Box","sx","mb","Typography","variant","gutterBottom","display","alignItems","gap","Chip","label","displayName","size","Upgrade","color","ArrowDownward","Person","fontSize","mt","Security","roles","join","Divider","my","List","dense","fontWeight","feature","ListItem","py","ListItemIcon","minWidth","CheckCircle","ListItemText","primary","formatFeatureName","primaryTypographyProps","Cancel","orgName","priorities","personal","professional","enterprise","replace","l","toUpperCase"],"mappings":"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"}
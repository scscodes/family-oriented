{"version":3,"sources":["C:\\repos\\family-oriented\\jest.setup.ts"],"sourcesContent":["import '@testing-library/jest-dom';\r\nimport { TextEncoder, TextDecoder } from 'util';\r\n\r\n// Polyfill TextEncoder/TextDecoder for jose/Supabase in Jest\r\nif (typeof global.TextEncoder === 'undefined') {\r\n  global.TextEncoder = TextEncoder;\r\n}\r\nif (typeof global.TextDecoder === 'undefined') {\r\n  global.TextDecoder = TextDecoder as typeof global.TextDecoder;\r\n}\r\n\r\n// Set dummy Supabase env vars for tests\r\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'http://localhost:54321';\r\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-key';\r\n\r\n// Enhanced localStorage mock with better error handling\r\ninterface LocalStorageMock {\r\n  getItem: jest.Mock;\r\n  setItem: jest.Mock;\r\n  removeItem: jest.Mock;\r\n  clear: jest.Mock;\r\n  _storage: Record<string, string>;\r\n}\r\n\r\nconst localStorageMock: LocalStorageMock = {\r\n  getItem: jest.fn((key: string) => {\r\n    const item = localStorageMock._storage[key];\r\n    return item || null;\r\n  }),\r\n  setItem: jest.fn((key: string, value: string) => {\r\n    localStorageMock._storage[key] = value;\r\n  }),\r\n  removeItem: jest.fn((key: string) => {\r\n    delete localStorageMock._storage[key];\r\n  }),\r\n  clear: jest.fn(() => {\r\n    localStorageMock._storage = {};\r\n  }),\r\n  _storage: {} as Record<string, string>\r\n};\r\n\r\nObject.defineProperty(window, 'localStorage', {\r\n  value: localStorageMock,\r\n});\r\n\r\n// Enhanced window.matchMedia mock\r\nObject.defineProperty(window, 'matchMedia', {\r\n  writable: true,\r\n  value: jest.fn().mockImplementation(query => ({\r\n    matches: false,\r\n    media: query,\r\n    onchange: null,\r\n    addListener: jest.fn(),\r\n    removeListener: jest.fn(),\r\n    addEventListener: jest.fn(),\r\n    removeEventListener: jest.fn(),\r\n    dispatchEvent: jest.fn(),\r\n  })),\r\n});\r\n\r\n// Mock ResizeObserver (needed for Chart.js)\r\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\r\n  observe: jest.fn(),\r\n  unobserve: jest.fn(),\r\n  disconnect: jest.fn(),\r\n}));\r\n\r\n// Mock IntersectionObserver\r\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\r\n  observe: jest.fn(),\r\n  unobserve: jest.fn(),\r\n  disconnect: jest.fn(),\r\n}));\r\n\r\n// Mock fetch for API calls\r\nglobal.fetch = jest.fn(() =>\r\n  Promise.resolve({\r\n    ok: true,\r\n    status: 200,\r\n    json: () => Promise.resolve({}),\r\n    text: () => Promise.resolve(''),\r\n  })\r\n) as jest.Mock;\r\n\r\n// Enhanced console error handling for tests\r\nconst originalError = console.error;\r\nbeforeAll(() => {\r\n  console.error = (...args: unknown[]) => {\r\n    // Suppress known React testing warnings\r\n    if (\r\n      typeof args[0] === 'string' &&\r\n      (args[0].includes('Warning: ReactDOM.render is deprecated') ||\r\n       args[0].includes('Warning: An invalid form control') ||\r\n       args[0].includes('Warning: Cannot update a component'))\r\n    ) {\r\n      return;\r\n    }\r\n    originalError.apply(console, args);\r\n  };\r\n});\r\n\r\nafterAll(() => {\r\n  console.error = originalError;\r\n});\r\n\r\n// Global test timeout helpers\r\nexport const TEST_TIMEOUTS = {\r\n  FAST: 2000,      // For sync operations\r\n  MEDIUM: 5000,    // For simple async operations  \r\n  SLOW: 10000,     // For complex async operations\r\n  INTEGRATION: 15000 // For integration tests\r\n} as const;\r\n\r\n// Global test utilities\r\n(global as any).testUtils = {\r\n  waitForStableState: async (callback: () => boolean, timeout = TEST_TIMEOUTS.MEDIUM) => {\r\n    const startTime = Date.now();\r\n    while (!callback() && Date.now() - startTime < timeout) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n    }\r\n    if (!callback()) {\r\n      throw new Error(`Condition not met within ${timeout}ms`);\r\n    }\r\n  },\r\n  \r\n  createMockPromise: <T>(value: T, delay = 0): Promise<T> => {\r\n    return new Promise(resolve => setTimeout(() => resolve(value), delay));\r\n  },\r\n  \r\n  createMockRejection: (error: Error, delay = 0): Promise<never> => {\r\n    return new Promise((_, reject) => setTimeout(() => reject(error), delay));\r\n  }\r\n};\r\n\r\n// Enhanced global error handling\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\r\n});\r\n\r\n// Cleanup after each test\r\nafterEach(() => {\r\n  // Clear all mocks\r\n  jest.clearAllMocks();\r\n  \r\n  // Reset localStorage\r\n  localStorageMock.clear();\r\n  \r\n  // Clear any pending timers safely - only if fake timers are enabled\r\n  try {\r\n    // Check if we have pending timers before trying to clear them\r\n    if (jest.getTimerCount && jest.getTimerCount() > 0) {\r\n      jest.runOnlyPendingTimers();\r\n    }\r\n  } catch (error) {\r\n    // Silently ignore timer-related errors during cleanup\r\n  }\r\n  \r\n  // Always ensure we're using real timers after each test\r\n  try {\r\n    jest.useRealTimers();\r\n  } catch {\r\n    // Ignore if real timers are already in use\r\n  }\r\n});\r\n"],"names":["TEST_TIMEOUTS","global","TextEncoder","TextDecoder","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","localStorageMock","getItem","jest","fn","key","item","_storage","setItem","value","removeItem","clear","Object","defineProperty","window","writable","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","ResizeObserver","observe","unobserve","disconnect","IntersectionObserver","fetch","Promise","resolve","ok","status","json","text","originalError","console","error","beforeAll","args","includes","apply","afterAll","FAST","MEDIUM","SLOW","INTEGRATION","testUtils","waitForStableState","callback","timeout","startTime","Date","now","setTimeout","Error","createMockPromise","delay","createMockRejection","_","reject","on","reason","promise","afterEach","clearAllMocks","getTimerCount","runOnlyPendingTimers","useRealTimers"],"mappings":";;;;+BA0GaA;;;eAAAA;;;QA1GN;sBACkC;AAEzC,6DAA6D;AAC7D,IAAI,OAAOC,OAAOC,WAAW,KAAK,aAAa;IAC7CD,OAAOC,WAAW,GAAGA,iBAAW;AAClC;AACA,IAAI,OAAOD,OAAOE,WAAW,KAAK,aAAa;IAC7CF,OAAOE,WAAW,GAAGA,iBAAW;AAClC;AAEA,wCAAwC;AACxCC,QAAQC,GAAG,CAACC,wBAAwB,GAAG;AACvCF,QAAQC,GAAG,CAACE,6BAA6B,GAAG;AAW5C,MAAMC,mBAAqC;IACzCC,SAASC,KAAKC,EAAE,CAAC,CAACC;QAChB,MAAMC,OAAOL,iBAAiBM,QAAQ,CAACF,IAAI;QAC3C,OAAOC,QAAQ;IACjB;IACAE,SAASL,KAAKC,EAAE,CAAC,CAACC,KAAaI;QAC7BR,iBAAiBM,QAAQ,CAACF,IAAI,GAAGI;IACnC;IACAC,YAAYP,KAAKC,EAAE,CAAC,CAACC;QACnB,OAAOJ,iBAAiBM,QAAQ,CAACF,IAAI;IACvC;IACAM,OAAOR,KAAKC,EAAE,CAAC;QACbH,iBAAiBM,QAAQ,GAAG,CAAC;IAC/B;IACAA,UAAU,CAAC;AACb;AAEAK,OAAOC,cAAc,CAACC,QAAQ,gBAAgB;IAC5CL,OAAOR;AACT;AAEA,kCAAkC;AAClCW,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVN,OAAON,KAAKC,EAAE,GAAGY,kBAAkB,CAACC,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAalB,KAAKC,EAAE;YACpBkB,gBAAgBnB,KAAKC,EAAE;YACvBmB,kBAAkBpB,KAAKC,EAAE;YACzBoB,qBAAqBrB,KAAKC,EAAE;YAC5BqB,eAAetB,KAAKC,EAAE;QACxB,CAAA;AACF;AAEA,4CAA4C;AAC5CV,OAAOgC,cAAc,GAAGvB,KAAKC,EAAE,GAAGY,kBAAkB,CAAC,IAAO,CAAA;QAC1DW,SAASxB,KAAKC,EAAE;QAChBwB,WAAWzB,KAAKC,EAAE;QAClByB,YAAY1B,KAAKC,EAAE;IACrB,CAAA;AAEA,4BAA4B;AAC5BV,OAAOoC,oBAAoB,GAAG3B,KAAKC,EAAE,GAAGY,kBAAkB,CAAC,IAAO,CAAA;QAChEW,SAASxB,KAAKC,EAAE;QAChBwB,WAAWzB,KAAKC,EAAE;QAClByB,YAAY1B,KAAKC,EAAE;IACrB,CAAA;AAEA,2BAA2B;AAC3BV,OAAOqC,KAAK,GAAG5B,KAAKC,EAAE,CAAC,IACrB4B,QAAQC,OAAO,CAAC;QACdC,IAAI;QACJC,QAAQ;QACRC,MAAM,IAAMJ,QAAQC,OAAO,CAAC,CAAC;QAC7BI,MAAM,IAAML,QAAQC,OAAO,CAAC;IAC9B;AAGF,4CAA4C;AAC5C,MAAMK,gBAAgBC,QAAQC,KAAK;AACnCC,UAAU;IACRF,QAAQC,KAAK,GAAG,CAAC,GAAGE;QAClB,wCAAwC;QACxC,IACE,OAAOA,IAAI,CAAC,EAAE,KAAK,YAClBA,CAAAA,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,6CACjBD,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,uCACjBD,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,qCAAoC,GACtD;YACA;QACF;QACAL,cAAcM,KAAK,CAACL,SAASG;IAC/B;AACF;AAEAG,SAAS;IACPN,QAAQC,KAAK,GAAGF;AAClB;AAGO,MAAM7C,gBAAgB;IAC3BqD,MAAM;IACNC,QAAQ;IACRC,MAAM;IACNC,aAAa,MAAM,wBAAwB;AAC7C;AAEA,wBAAwB;AACvBvD,OAAewD,SAAS,GAAG;IAC1BC,oBAAoB,OAAOC,UAAyBC,UAAU5D,cAAcsD,MAAM;QAChF,MAAMO,YAAYC,KAAKC,GAAG;QAC1B,MAAO,CAACJ,cAAcG,KAAKC,GAAG,KAAKF,YAAYD,QAAS;YACtD,MAAM,IAAIrB,QAAQC,CAAAA,UAAWwB,WAAWxB,SAAS;QACnD;QACA,IAAI,CAACmB,YAAY;YACf,MAAM,IAAIM,MAAM,CAAC,yBAAyB,EAAEL,QAAQ,EAAE,CAAC;QACzD;IACF;IAEAM,mBAAmB,CAAIlD,OAAUmD,QAAQ,CAAC;QACxC,OAAO,IAAI5B,QAAQC,CAAAA,UAAWwB,WAAW,IAAMxB,QAAQxB,QAAQmD;IACjE;IAEAC,qBAAqB,CAACrB,OAAcoB,QAAQ,CAAC;QAC3C,OAAO,IAAI5B,QAAQ,CAAC8B,GAAGC,SAAWN,WAAW,IAAMM,OAAOvB,QAAQoB;IACpE;AACF;AAEA,iCAAiC;AACjC/D,QAAQmE,EAAE,CAAC,sBAAsB,CAACC,QAAQC;IACxC3B,QAAQC,KAAK,CAAC,2BAA2B0B,SAAS,WAAWD;AAC/D;AAEA,0BAA0B;AAC1BE,UAAU;IACR,kBAAkB;IAClBhE,KAAKiE,aAAa;IAElB,qBAAqB;IACrBnE,iBAAiBU,KAAK;IAEtB,oEAAoE;IACpE,IAAI;QACF,8DAA8D;QAC9D,IAAIR,KAAKkE,aAAa,IAAIlE,KAAKkE,aAAa,KAAK,GAAG;YAClDlE,KAAKmE,oBAAoB;QAC3B;IACF,EAAE,OAAO9B,OAAO;IACd,sDAAsD;IACxD;IAEA,wDAAwD;IACxD,IAAI;QACFrC,KAAKoE,aAAa;IACpB,EAAE,OAAM;IACN,2CAA2C;IAC7C;AACF"}
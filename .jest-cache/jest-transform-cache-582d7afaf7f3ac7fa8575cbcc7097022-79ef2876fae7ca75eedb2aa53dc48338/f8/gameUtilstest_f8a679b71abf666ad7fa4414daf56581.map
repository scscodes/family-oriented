{"version":3,"sources":["C:\\repos\\family-oriented\\src\\utils\\__tests__\\gameUtils.test.ts"],"sourcesContent":["import { generateNumberQuestions } from '../gameUtils';\r\nimport {\r\n  generateLetterQuestions,\r\n  generateShapeQuestions,\r\n  generateColorQuestions,\r\n  generatePatternQuestions,\r\n  generateMathQuestions,\r\n  generateMixedQuestions,\r\n  generateFillInTheBlankQuestions,\r\n  generateRhymingQuestions\r\n} from '../gameUtils';\r\n\r\ndescribe('generateNumberQuestions', () => {\r\n  it('creates questions within range and with unique options', () => {\r\n    const questions = generateNumberQuestions(3, 1, 5, 4);\r\n    expect(questions).toHaveLength(3);\r\n    questions.forEach(q => {\r\n      const ans = parseInt(q.correctAnswer, 10);\r\n      expect(ans).toBeGreaterThanOrEqual(1);\r\n      expect(ans).toBeLessThanOrEqual(5);\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(4);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateLetterQuestions', () => {\r\n  it('creates questions with correct case and unique options', () => {\r\n    const questions = generateLetterQuestions(5, 4);\r\n    expect(questions).toHaveLength(5);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(4);\r\n      expect(['letters']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateShapeQuestions', () => {\r\n  it('creates questions with valid shapes and unique options', () => {\r\n    const questions = generateShapeQuestions(4, 3);\r\n    expect(questions).toHaveLength(4);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(3);\r\n      expect(['shapes']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateColorQuestions', () => {\r\n  it('creates questions with valid colors and unique options', () => {\r\n    const questions = generateColorQuestions(4, 3);\r\n    expect(questions).toHaveLength(4);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(3);\r\n      expect(['colors']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generatePatternQuestions', () => {\r\n  it('creates pattern questions with correct answer in options', () => {\r\n    const questions = generatePatternQuestions(3, 3);\r\n    expect(questions).toHaveLength(3);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(q.options.length).toBeLessThanOrEqual(3);\r\n      expect(['patterns']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateMathQuestions', () => {\r\n  it('creates math questions with correct answer in options', () => {\r\n    const questions = generateMathQuestions(3, 3);\r\n    expect(questions).toHaveLength(3);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(3);\r\n      expect(['math']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateMixedQuestions', () => {\r\n  it('creates a mixed set of questions', () => {\r\n    const questions = generateMixedQuestions(6, 1, 10, 3);\r\n    expect(questions).toHaveLength(6);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(3);\r\n      expect([\r\n        'numbers',\r\n        'letters',\r\n        'shapes',\r\n        'colors',\r\n        'patterns',\r\n        'math'\r\n      ]).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateFillInTheBlankQuestions', () => {\r\n  it('creates fill-in-the-blank questions with correct answer in options', () => {\r\n    const questions = generateFillInTheBlankQuestions(3, 3);\r\n    expect(questions).toHaveLength(3);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(new Set(q.options).size).toBe(q.options.length);\r\n      expect(q.options.length).toBe(3);\r\n      expect(q.prompt).toMatch(/completes the word/);\r\n      expect(['fill-in-the-blank']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('generateRhymingQuestions', () => {\r\n  it('creates rhyming questions with correct answer in options', () => {\r\n    const questions = generateRhymingQuestions(3);\r\n    expect(questions).toHaveLength(3);\r\n    questions.forEach(q => {\r\n      expect(q.options).toContain(q.correctAnswer);\r\n      expect(['rhyming']).toContain(q.type);\r\n    });\r\n  });\r\n});\r\n"],"names":["describe","it","questions","generateNumberQuestions","expect","toHaveLength","forEach","q","ans","parseInt","correctAnswer","toBeGreaterThanOrEqual","toBeLessThanOrEqual","options","toContain","Set","size","toBe","length","generateLetterQuestions","type","generateShapeQuestions","generateColorQuestions","generatePatternQuestions","generateMathQuestions","generateMixedQuestions","generateFillInTheBlankQuestions","prompt","toMatch","generateRhymingQuestions"],"mappings":";;;;2BAAwC;AAYxCA,SAAS,2BAA2B;IAClCC,GAAG,0DAA0D;QAC3D,MAAMC,YAAYC,IAAAA,kCAAuB,EAAC,GAAG,GAAG,GAAG;QACnDC,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChB,MAAMC,MAAMC,SAASF,EAAEG,aAAa,EAAE;YACtCN,OAAOI,KAAKG,sBAAsB,CAAC;YACnCP,OAAOI,KAAKI,mBAAmB,CAAC;YAChCR,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;QAChC;IACF;AACF;AAEAjB,SAAS,2BAA2B;IAClCC,GAAG,0DAA0D;QAC3D,MAAMC,YAAYiB,IAAAA,kCAAuB,EAAC,GAAG;QAC7Cf,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAO;gBAAC;aAAU,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACtC;IACF;AACF;AAEApB,SAAS,0BAA0B;IACjCC,GAAG,0DAA0D;QAC3D,MAAMC,YAAYmB,IAAAA,iCAAsB,EAAC,GAAG;QAC5CjB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAO;gBAAC;aAAS,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACrC;IACF;AACF;AAEApB,SAAS,0BAA0B;IACjCC,GAAG,0DAA0D;QAC3D,MAAMC,YAAYoB,IAAAA,iCAAsB,EAAC,GAAG;QAC5ClB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAO;gBAAC;aAAS,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACrC;IACF;AACF;AAEApB,SAAS,4BAA4B;IACnCC,GAAG,4DAA4D;QAC7D,MAAMC,YAAYqB,IAAAA,mCAAwB,EAAC,GAAG;QAC9CnB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAEN,mBAAmB,CAAC;YAC7CR,OAAO;gBAAC;aAAW,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACvC;IACF;AACF;AAEApB,SAAS,yBAAyB;IAChCC,GAAG,yDAAyD;QAC1D,MAAMC,YAAYsB,IAAAA,gCAAqB,EAAC,GAAG;QAC3CpB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAO;gBAAC;aAAO,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACnC;IACF;AACF;AAEApB,SAAS,0BAA0B;IACjCC,GAAG,oCAAoC;QACrC,MAAMC,YAAYuB,IAAAA,iCAAsB,EAAC,GAAG,GAAG,IAAI;QACnDrB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAO;gBACL;gBACA;gBACA;gBACA;gBACA;gBACA;aACD,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACrB;IACF;AACF;AAEApB,SAAS,mCAAmC;IAC1CC,GAAG,sEAAsE;QACvE,MAAMC,YAAYwB,IAAAA,0CAA+B,EAAC,GAAG;QACrDtB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO,IAAIW,IAAIR,EAAEM,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAACV,EAAEM,OAAO,CAACK,MAAM;YACrDd,OAAOG,EAAEM,OAAO,CAACK,MAAM,EAAED,IAAI,CAAC;YAC9Bb,OAAOG,EAAEoB,MAAM,EAAEC,OAAO,CAAC;YACzBxB,OAAO;gBAAC;aAAoB,EAAEU,SAAS,CAACP,EAAEa,IAAI;QAChD;IACF;AACF;AAEApB,SAAS,4BAA4B;IACnCC,GAAG,4DAA4D;QAC7D,MAAMC,YAAY2B,IAAAA,mCAAwB,EAAC;QAC3CzB,OAAOF,WAAWG,YAAY,CAAC;QAC/BH,UAAUI,OAAO,CAACC,CAAAA;YAChBH,OAAOG,EAAEM,OAAO,EAAEC,SAAS,CAACP,EAAEG,aAAa;YAC3CN,OAAO;gBAAC;aAAU,EAAEU,SAAS,CAACP,EAAEa,IAAI;QACtC;IACF;AACF"}
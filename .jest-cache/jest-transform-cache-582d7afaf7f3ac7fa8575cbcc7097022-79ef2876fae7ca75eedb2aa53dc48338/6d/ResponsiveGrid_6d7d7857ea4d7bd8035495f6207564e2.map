{"version":3,"sources":["C:\\repos\\family-oriented\\src\\shared\\layout\\ResponsiveGrid.tsx"],"sourcesContent":["import { styled, Box } from '@mui/material';\r\nimport { spacing } from '@/theme/tokens';\r\n\r\ninterface ResponsiveGridProps {\r\n  columns?: {\r\n    xs?: number;\r\n    sm?: number;\r\n    md?: number;\r\n    lg?: number;\r\n  };\r\n  gap?: number;\r\n  minItemWidth?: string;\r\n}\r\n\r\n/**\r\n * Responsive grid with consistent spacing and breakpoint behavior\r\n * Replaces repetitive grid styling patterns\r\n */\r\nexport const ResponsiveGrid = styled(Box)<ResponsiveGridProps>(({ \r\n  theme, \r\n  columns = { xs: 1, sm: 2, md: 3, lg: 4 },\r\n  gap = 2,\r\n  minItemWidth = '200px'\r\n}) => ({\r\n  display: 'grid',\r\n  gap: theme.spacing(gap),\r\n  gridTemplateColumns: `repeat(auto-fit, minmax(${minItemWidth}, 1fr))`,\r\n  \r\n  '& > *': {\r\n    minWidth: 0,\r\n  },\r\n  \r\n  [theme.breakpoints.down('sm')]: {\r\n    gridTemplateColumns: `repeat(${columns.xs || 1}, 1fr)`,\r\n    gap: theme.spacing(gap * 0.75),\r\n  },\r\n  \r\n  [theme.breakpoints.between('sm', 'md')]: {\r\n    gridTemplateColumns: `repeat(${columns.sm || 2}, 1fr)`,\r\n  },\r\n  \r\n  [theme.breakpoints.between('md', 'lg')]: {\r\n    gridTemplateColumns: `repeat(${columns.md || 3}, 1fr)`,\r\n  },\r\n  \r\n  [theme.breakpoints.up('lg')]: {\r\n    gridTemplateColumns: `repeat(${columns.lg || 4}, 1fr)`,\r\n  },\r\n}));\r\n\r\n/**\r\n * Specialized grid for game options with optimal spacing\r\n * Automatically adjusts based on number of options\r\n */\r\nexport const OptionGrid = styled(Box)<{ optionCount?: number }>(({ theme, optionCount = 4 }) => {\r\n  const getOptimalColumns = (count: number) => {\r\n    if (count <= 2) return { xs: 1, sm: 2, md: 2, lg: 2 };\r\n    if (count <= 4) return { xs: 1, sm: 2, md: 2, lg: 2 };\r\n    if (count <= 6) return { xs: 2, sm: 2, md: 3, lg: 3 };\r\n    return { xs: 2, sm: 3, md: 4, lg: 4 };\r\n  };\r\n  \r\n  const columns = getOptimalColumns(optionCount);\r\n  \r\n  return {\r\n    display: 'grid',\r\n    gap: spacing.md,\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n    \r\n    [theme.breakpoints.down('sm')]: {\r\n      gridTemplateColumns: `repeat(${columns.xs}, 1fr)`,\r\n      gap: spacing.sm,\r\n      padding: `0 ${spacing.sm}px`,\r\n    },\r\n    \r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      gridTemplateColumns: `repeat(${columns.sm}, 1fr)`,\r\n    },\r\n    \r\n    [theme.breakpoints.between('md', 'lg')]: {\r\n      gridTemplateColumns: `repeat(${columns.md}, 1fr)`,\r\n    },\r\n    \r\n    [theme.breakpoints.up('lg')]: {\r\n      gridTemplateColumns: `repeat(${columns.lg}, 1fr)`,\r\n    },\r\n    \r\n    '& > *': {\r\n      minHeight: '100px',\r\n      aspectRatio: optionCount <= 4 ? '1' : 'auto',\r\n    },\r\n  };\r\n});\r\n\r\n/**\r\n * Feature grid for homepage sections\r\n * Optimized for feature cards and content sections\r\n */\r\nexport const FeatureGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gap: spacing.xl,\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n  alignItems: 'start',\r\n  \r\n  [theme.breakpoints.down('md')]: {\r\n    gap: spacing.lg,\r\n    gridTemplateColumns: '1fr',\r\n  },\r\n  \r\n  [theme.breakpoints.up('md')]: {\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n  },\r\n  \r\n  '& > *': {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\n/**\r\n * Subject grid for academic category display\r\n * Specialized for subject cards with icons\r\n */\r\nexport const SubjectGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gap: spacing.md,\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\r\n  marginBottom: spacing.xl,\r\n  \r\n  [theme.breakpoints.down('sm')]: {\r\n    gridTemplateColumns: '1fr',\r\n  },\r\n  \r\n  [theme.breakpoints.between('sm', 'lg')]: {\r\n    gridTemplateColumns: 'repeat(2, 1fr)',\r\n  },\r\n  \r\n  [theme.breakpoints.up('lg')]: {\r\n    gridTemplateColumns: 'repeat(4, 1fr)',\r\n  },\r\n  \r\n  '& > *': {\r\n    minHeight: '120px',\r\n    transition: `all ${spacing.md * 4}ms ease-in-out`,\r\n  },\r\n})); "],"names":["FeatureGrid","OptionGrid","ResponsiveGrid","SubjectGrid","styled","Box","theme","columns","xs","sm","md","lg","gap","minItemWidth","display","spacing","gridTemplateColumns","minWidth","breakpoints","down","between","up","optionCount","getOptimalColumns","count","maxWidth","margin","padding","minHeight","aspectRatio","xl","alignItems","height","marginBottom","transition"],"mappings":"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"}
{"version":3,"sources":["C:\\repos\\family-oriented\\src\\utils\\settingsUtils.ts"],"sourcesContent":["/**\r\n * Game settings management\r\n */\r\n\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * Default game settings\r\n */\r\nexport interface GameSettings {\r\n  numberRange: {\r\n    min: number;\r\n    max: number;\r\n  };\r\n  questionCount: number;\r\n  optionsCount: number;\r\n}\r\n\r\n/**\r\n * Default settings for each game type\r\n */\r\nexport const DEFAULT_SETTINGS: Record<string, GameSettings> = {\r\n  numbers: {\r\n    numberRange: {\r\n      min: 1,\r\n      max: 50\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  letters: {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 25 // A-Z\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  shapes: {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 0 // Not applicable\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  colors: {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 0 // Not applicable\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  patterns: {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 0 // Not applicable\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  math: {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 0 // Not applicable\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  'fill-in-the-blank': {\r\n    numberRange: {\r\n      min: 0,\r\n      max: 0 // Not applicable\r\n    },\r\n    questionCount: 10,\r\n    optionsCount: 4\r\n  },\r\n  'rhyming': {\r\n    numberRange: { min: 0, max: 0 }, // Not applicable\r\n    questionCount: 10,\r\n    optionsCount: 3\r\n  },\r\n};\r\n\r\n/**\r\n * Retrieves settings from localStorage if available, otherwise returns defaults\r\n */\r\nexport function getSettings(gameType: string): GameSettings {\r\n  if (typeof window === 'undefined') {\r\n    return DEFAULT_SETTINGS[gameType] || DEFAULT_SETTINGS.numbers;\r\n  }\r\n\r\n  const savedSettings = localStorage.getItem(`${gameType}_settings`);\r\n  \r\n  if (savedSettings) {\r\n    try {\r\n      return JSON.parse(savedSettings);\r\n    } catch (e) {\r\n      logger.error('Failed to parse saved settings', e);\r\n    }\r\n  }\r\n  \r\n  return DEFAULT_SETTINGS[gameType] || DEFAULT_SETTINGS.numbers;\r\n}\r\n\r\n/**\r\n * Saves settings to localStorage\r\n */\r\nexport function saveSettings(gameType: string, settings: GameSettings): void {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.setItem(`${gameType}_settings`, JSON.stringify(settings));\r\n  }\r\n} "],"names":["DEFAULT_SETTINGS","getSettings","saveSettings","numbers","numberRange","min","max","questionCount","optionsCount","letters","shapes","colors","patterns","math","gameType","window","savedSettings","localStorage","getItem","JSON","parse","e","logger","error","settings","setItem","stringify"],"mappings":"AAAA;;CAEC;;;;;;;;;;;IAmBYA,gBAAgB;eAAhBA;;IAmEGC,WAAW;eAAXA;;IAqBAC,YAAY;eAAZA;;;wBAzGO;AAiBhB,MAAMF,mBAAiD;IAC5DG,SAAS;QACPC,aAAa;YACXC,KAAK;YACLC,KAAK;QACP;QACAC,eAAe;QACfC,cAAc;IAChB;IACAC,SAAS;QACPL,aAAa;YACXC,KAAK;YACLC,KAAK,GAAG,MAAM;QAChB;QACAC,eAAe;QACfC,cAAc;IAChB;IACAE,QAAQ;QACNN,aAAa;YACXC,KAAK;YACLC,KAAK,EAAE,iBAAiB;QAC1B;QACAC,eAAe;QACfC,cAAc;IAChB;IACAG,QAAQ;QACNP,aAAa;YACXC,KAAK;YACLC,KAAK,EAAE,iBAAiB;QAC1B;QACAC,eAAe;QACfC,cAAc;IAChB;IACAI,UAAU;QACRR,aAAa;YACXC,KAAK;YACLC,KAAK,EAAE,iBAAiB;QAC1B;QACAC,eAAe;QACfC,cAAc;IAChB;IACAK,MAAM;QACJT,aAAa;YACXC,KAAK;YACLC,KAAK,EAAE,iBAAiB;QAC1B;QACAC,eAAe;QACfC,cAAc;IAChB;IACA,qBAAqB;QACnBJ,aAAa;YACXC,KAAK;YACLC,KAAK,EAAE,iBAAiB;QAC1B;QACAC,eAAe;QACfC,cAAc;IAChB;IACA,WAAW;QACTJ,aAAa;YAAEC,KAAK;YAAGC,KAAK;QAAE;QAC9BC,eAAe;QACfC,cAAc;IAChB;AACF;AAKO,SAASP,YAAYa,QAAgB;IAC1C,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAOf,gBAAgB,CAACc,SAAS,IAAId,iBAAiBG,OAAO;IAC/D;IAEA,MAAMa,gBAAgBC,aAAaC,OAAO,CAAC,GAAGJ,SAAS,SAAS,CAAC;IAEjE,IAAIE,eAAe;QACjB,IAAI;YACF,OAAOG,KAAKC,KAAK,CAACJ;QACpB,EAAE,OAAOK,GAAG;YACVC,cAAM,CAACC,KAAK,CAAC,kCAAkCF;QACjD;IACF;IAEA,OAAOrB,gBAAgB,CAACc,SAAS,IAAId,iBAAiBG,OAAO;AAC/D;AAKO,SAASD,aAAaY,QAAgB,EAAEU,QAAsB;IACnE,IAAI,OAAOT,WAAW,aAAa;QACjCE,aAAaQ,OAAO,CAAC,GAAGX,SAAS,SAAS,CAAC,EAAEK,KAAKO,SAAS,CAACF;IAC9D;AACF"}
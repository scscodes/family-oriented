{"version":3,"sources":["C:\\repos\\family-oriented\\src\\utils\\arrayUtils.ts"],"sourcesContent":["/**\r\n * Utility functions for array operations\r\n */\r\n\r\n/**\r\n * Fisher-Yates shuffle algorithm for proper randomization\r\n * @param array - Array to shuffle (will be modified in place)\r\n * @returns The shuffled array\r\n */\r\nexport function shuffleArray<T>(array: T[]): T[] {\r\n  const shuffled = [...array]; // Create a copy to avoid mutating original\r\n  \r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n  }\r\n  \r\n  return shuffled;\r\n}\r\n\r\n/**\r\n * Generate unique random options for questions\r\n * @param correctAnswer - The correct answer to include\r\n * @param count - Number of additional wrong options to generate\r\n * @param generator - Function to generate a random option\r\n * @param maxAttempts - Maximum attempts to find unique options\r\n * @returns Array of unique options including the correct answer\r\n */\r\nexport function generateUniqueOptions(\r\n  correctAnswer: string,\r\n  count: number,\r\n  generator: () => string,\r\n  maxAttempts: number = 100\r\n): string[] {\r\n  const options = new Set([correctAnswer]);\r\n  let attempts = 0;\r\n  \r\n  while (options.size < count + 1 && attempts < maxAttempts) {\r\n    const option = generator();\r\n    if (option !== correctAnswer) {\r\n      options.add(option);\r\n    }\r\n    attempts++;\r\n  }\r\n  \r\n  // If we couldn't generate enough unique options, fill with generated ones\r\n  while (options.size < count + 1) {\r\n    options.add(generator());\r\n  }\r\n  \r\n  return shuffleArray(Array.from(options));\r\n} "],"names":["generateUniqueOptions","shuffleArray","array","shuffled","i","length","j","Math","floor","random","correctAnswer","count","generator","maxAttempts","options","Set","attempts","size","option","add","Array","from"],"mappings":"AAAA;;CAEC,GAED;;;;CAIC;;;;;;;;;;;IAoBeA,qBAAqB;eAArBA;;IAnBAC,YAAY;eAAZA;;;AAAT,SAASA,aAAgBC,KAAU;IACxC,MAAMC,WAAW;WAAID;KAAM,EAAE,2CAA2C;IAExE,IAAK,IAAIE,IAAID,SAASE,MAAM,GAAG,GAAGD,IAAI,GAAGA,IAAK;QAC5C,MAAME,IAAIC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAML,CAAAA,IAAI,CAAA;QAC1C,CAACD,QAAQ,CAACC,EAAE,EAAED,QAAQ,CAACG,EAAE,CAAC,GAAG;YAACH,QAAQ,CAACG,EAAE;YAAEH,QAAQ,CAACC,EAAE;SAAC;IACzD;IAEA,OAAOD;AACT;AAUO,SAASH,sBACdU,aAAqB,EACrBC,KAAa,EACbC,SAAuB,EACvBC,cAAsB,GAAG;IAEzB,MAAMC,UAAU,IAAIC,IAAI;QAACL;KAAc;IACvC,IAAIM,WAAW;IAEf,MAAOF,QAAQG,IAAI,GAAGN,QAAQ,KAAKK,WAAWH,YAAa;QACzD,MAAMK,SAASN;QACf,IAAIM,WAAWR,eAAe;YAC5BI,QAAQK,GAAG,CAACD;QACd;QACAF;IACF;IAEA,0EAA0E;IAC1E,MAAOF,QAAQG,IAAI,GAAGN,QAAQ,EAAG;QAC/BG,QAAQK,GAAG,CAACP;IACd;IAEA,OAAOX,aAAamB,MAAMC,IAAI,CAACP;AACjC"}
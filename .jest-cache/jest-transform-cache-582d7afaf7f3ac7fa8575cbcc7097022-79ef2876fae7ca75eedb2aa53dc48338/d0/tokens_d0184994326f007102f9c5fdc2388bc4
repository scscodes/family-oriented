7ed9dc40740ba9911d59bed0f81dfdfd
/**
 * Design Tokens System
 * Centralized design values for consistent styling across the application
 * Following Material-UI theme structure and WCAG accessibility standards
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    accessibility: function() {
        return accessibility;
    },
    borderRadius: function() {
        return borderRadius;
    },
    breakpoints: function() {
        return breakpoints;
    },
    gameColors: function() {
        return gameColors;
    },
    layout: function() {
        return layout;
    },
    mixins: function() {
        return mixins;
    },
    shadows: function() {
        return shadows;
    },
    spacing: function() {
        return spacing;
    },
    themeVariants: function() {
        return themeVariants;
    },
    transitions: function() {
        return transitions;
    },
    typography: function() {
        return typography;
    },
    zIndex: function() {
        return zIndex;
    }
});
const spacing = {
    xs: 4,
    sm: 8,
    md: 16,
    lg: 24,
    xl: 32,
    xxl: 48,
    xxxl: 64
};
const borderRadius = {
    none: 0,
    sm: 4,
    md: 8,
    lg: 16,
    xl: 24,
    full: 9999
};
const shadows = {
    card: '0 4px 14px rgba(0, 0, 0, 0.1)',
    cardHover: '0 8px 20px rgba(0, 0, 0, 0.15)',
    cardActive: '0 2px 8px rgba(0, 0, 0, 0.15)',
    focus: '0 0 20px rgba(46, 196, 182, 0.4)',
    focusError: '0 0 20px rgba(255, 90, 95, 0.4)',
    button: '0 4px 10px rgba(0, 0, 0, 0.1)',
    buttonHover: '0 6px 12px rgba(0, 0, 0, 0.2)',
    modal: '0 24px 48px rgba(0, 0, 0, 0.3)'
};
const typography = {
    fontFamily: {
        primary: 'var(--rubik-font)',
        secondary: 'var(--varela-round-font)',
        accent: 'var(--nunito-font)'
    },
    fontSize: {
        xs: '0.75rem',
        sm: '0.875rem',
        base: '1rem',
        lg: '1.125rem',
        xl: '1.25rem',
        '2xl': '1.5rem',
        '3xl': '1.875rem',
        '4xl': '2.25rem'
    },
    fontWeight: {
        normal: 400,
        medium: 500,
        semibold: 600,
        bold: 700
    },
    lineHeight: {
        tight: 1.2,
        normal: 1.5,
        relaxed: 1.75
    },
    letterSpacing: {
        tight: '-0.025em',
        normal: '0em',
        wide: '0.025em'
    }
};
const gameColors = {
    colors: {
        red: '#f44336',
        blue: '#2196f3',
        green: '#4caf50',
        yellow: '#FFD700',
        purple: '#9c27b0',
        orange: '#ff9800',
        pink: '#e91e63',
        brown: '#8B4513',
        black: '#000000',
        white: '#ffffff'
    },
    shapes: {
        primary: '#2196f3',
        secondary: '#9c27b0',
        success: '#4caf50',
        warning: '#ff9800',
        error: '#f44336',
        info: '#00bcd4'
    }
};
const transitions = {
    duration: {
        fast: '150ms',
        normal: '200ms',
        slow: '300ms',
        slower: '500ms'
    },
    easing: {
        ease: 'ease',
        easeIn: 'ease-in',
        easeOut: 'ease-out',
        easeInOut: 'ease-in-out'
    }
};
const zIndex = {
    dropdown: 1000,
    sticky: 1020,
    modal: 1300,
    tooltip: 1500
};
const breakpoints = {
    xs: 0,
    sm: 600,
    md: 900,
    lg: 1200,
    xl: 1536
};
const layout = {
    maxWidth: {
        xs: '20rem',
        sm: '24rem',
        md: '28rem',
        lg: '32rem',
        xl: '36rem',
        '2xl': '42rem',
        '3xl': '48rem',
        '4xl': '56rem',
        '5xl': '64rem',
        '6xl': '72rem',
        '7xl': '80rem',
        full: '100%'
    },
    minHeight: {
        screen: '100vh',
        full: '100%'
    }
};
const accessibility = {
    focusRing: {
        width: '2px',
        style: 'solid',
        color: 'rgba(46, 196, 182, 0.6)'
    },
    touchTarget: {
        minSize: '44px'
    },
    contrast: {
        // Minimum contrast ratios for WCAG AA compliance
        normal: 4.5,
        large: 3
    }
};
const mixins = {
    // Card styles with consistent elevation
    card: {
        borderRadius: borderRadius.lg,
        boxShadow: shadows.card,
        transition: `transform ${transitions.duration.normal}, box-shadow ${transitions.duration.normal}`,
        '&:hover': {
            transform: 'translateY(-2px)',
            boxShadow: shadows.cardHover
        }
    },
    // Button styles with accessibility focus
    button: {
        borderRadius: borderRadius.xl,
        padding: `${spacing.sm}px ${spacing.lg}px`,
        fontWeight: typography.fontWeight.medium,
        transition: `all ${transitions.duration.normal}`,
        minHeight: accessibility.touchTarget.minSize,
        '&:focus-visible': {
            outline: `${accessibility.focusRing.width} ${accessibility.focusRing.style} ${accessibility.focusRing.color}`,
            outlineOffset: '2px'
        }
    },
    // Game choice card with interaction states
    choiceCard: {
        minHeight: '100px',
        borderRadius: borderRadius.lg,
        border: '2px solid transparent',
        cursor: 'pointer',
        transition: `all ${transitions.duration.normal}`,
        '&:hover': {
            transform: 'scale(1.02)',
            boxShadow: shadows.cardHover
        },
        '&:focus-visible': {
            outline: `${accessibility.focusRing.width} ${accessibility.focusRing.style} ${accessibility.focusRing.color}`,
            outlineOffset: '2px'
        }
    },
    // Page container with responsive padding
    pageContainer: {
        maxWidth: layout.maxWidth['7xl'],
        mx: 'auto',
        px: {
            xs: spacing.md,
            sm: spacing.lg,
            lg: spacing.xl
        },
        py: spacing.lg
    },
    // Game layout with consistent spacing
    gameLayout: {
        maxWidth: layout.maxWidth['5xl'],
        mx: 'auto',
        px: {
            xs: spacing.md,
            sm: spacing.lg
        },
        py: spacing.lg
    },
    // Responsive grid for game options
    responsiveGrid: {
        display: 'grid',
        gap: spacing.md,
        gridTemplateColumns: {
            xs: '1fr',
            sm: 'repeat(2, 1fr)',
            md: 'repeat(auto-fit, minmax(200px, 1fr))'
        }
    },
    // Accessible focus styles
    focusVisible: {
        '&:focus-visible': {
            outline: `${accessibility.focusRing.width} ${accessibility.focusRing.style} ${accessibility.focusRing.color}`,
            outlineOffset: '2px'
        }
    }
};
const themeVariants = {
    purple: {
        name: 'Purple Dreams',
        primary: '#667eea',
        secondary: '#764ba2',
        accent: '#9c88ff'
    },
    ocean: {
        name: 'Ocean Breeze',
        primary: '#00b4db',
        secondary: '#0083b0',
        accent: '#4dd0e1'
    },
    forest: {
        name: 'Forest Green',
        primary: '#56ab2f',
        secondary: '#a8e6cf',
        accent: '#88d8a3'
    },
    sunset: {
        name: 'Sunset Glow',
        primary: '#ff7e5f',
        secondary: '#feb47b',
        accent: '#ff9a9e'
    }
};

//# sourceMappingURL=data:application/json;base64,
{"version":3,"sources":["D:\\Projects\\family-oriented\\src\\features\\analytics\\components\\DashboardDebugPanel.tsx"],"sourcesContent":["/**\r\n * Dashboard Debug Panel\r\n * Embedded debug controls for development and demo environments\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Chip,\r\n  Collapse,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  Stack,\r\n  Alert,\r\n  Tooltip,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  ExpandMore,\r\n  ExpandLess,\r\n  BugReport,\r\n  Refresh,\r\n  Science,\r\n  AdminPanelSettings\r\n} from '@mui/icons-material';\r\nimport { useUser } from '@/context/UserContext';\r\nimport { useSubscription } from '@/hooks/useSubscription';\r\nimport { getAvailableScenarios, switchDemoScenario } from '@/utils/demoConfig';\r\n\r\n\r\n\r\n/**\r\n * Detect if we're in development/demo environment\r\n */\r\nfunction isDevelopmentMode(): boolean {\r\n  // Check multiple indicators for development/demo mode\r\n  const isDev = process.env.NODE_ENV === 'development';\r\n  const hasDemo = process.env.NEXT_PUBLIC_DEMO_SCENARIO !== undefined;\r\n  const hasDebugFlag = process.env.NEXT_PUBLIC_DEBUG_MODE === 'true';\r\n  const isLocalhost = typeof window !== 'undefined' && \r\n    (window.location.hostname === 'localhost' || \r\n     window.location.hostname === '127.0.0.1' ||\r\n     window.location.hostname.includes('.local'));\r\n  \r\n  // Also check for common development ports\r\n  const isDevPort = typeof window !== 'undefined' && \r\n    (window.location.port === '3000' || window.location.port === '3001');\r\n  \r\n  return isDev || hasDemo || hasDebugFlag || isLocalhost || isDevPort;\r\n}\r\n\r\nexport default function DashboardDebugPanel() {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [selectedScenario, setSelectedScenario] = useState('');\r\n  const userContext = useUser();\r\n  const subscription = useSubscription();\r\n  const availableScenarios = getAvailableScenarios();\r\n\r\n  // Only show in development/demo environments\r\n  if (!isDevelopmentMode()) {\r\n    return null;\r\n  }\r\n\r\n  const handleScenarioChange = (event: any) => {\r\n    const scenarioKey = event.target.value as string;\r\n    setSelectedScenario(scenarioKey);\r\n    switchDemoScenario(scenarioKey);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const hasIssues = !userContext.org || !subscription.subscriptionPlan || !subscription.tier;\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        mb: 2, \r\n        border: '2px solid',\r\n        borderColor: hasIssues ? 'error.main' : 'warning.main',\r\n        bgcolor: hasIssues ? 'error.50' : 'warning.50'\r\n      }}\r\n    >\r\n      <Box sx={{ p: 2 }}>\r\n        {/* Compact Header */}\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          <BugReport color={hasIssues ? 'error' : 'warning'} />\r\n          <Typography variant=\"subtitle2\" sx={{ flexGrow: 1 }}>\r\n            ðŸ§ª Development Mode\r\n          </Typography>\r\n          \r\n          {/* Quick Status Chips */}\r\n          <Chip \r\n            label={subscription.tier?.toUpperCase() || 'NO TIER'} \r\n            color={subscription.tier ? 'success' : 'error'}\r\n            size=\"small\"\r\n          />\r\n          <Chip \r\n            label={`${userContext.avatars?.length || 0} Avatars`}\r\n            color=\"info\"\r\n            size=\"small\"\r\n          />\r\n          <Chip \r\n            label={userContext.roles?.length ? userContext.roles.map(r => r.name).join(', ') : 'No Roles'}\r\n            color={userContext.roles?.length ? 'success' : 'warning'}\r\n            size=\"small\"\r\n          />\r\n\r\n          {/* Quick Scenario Switcher */}\r\n          <FormControl size=\"small\" sx={{ minWidth: 200 }}>\r\n            <Select\r\n              value={selectedScenario}\r\n              onChange={handleScenarioChange}\r\n              displayEmpty\r\n              size=\"small\"\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Switch Scenario\r\n              </MenuItem>\r\n              {availableScenarios.map((scenario) => (\r\n                <MenuItem key={scenario.key} value={scenario.key}>\r\n                  {scenario.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Expand/Collapse */}\r\n          <Tooltip title={expanded ? \"Hide Details\" : \"Show Debug Details\"}>\r\n            <IconButton \r\n              onClick={() => setExpanded(!expanded)}\r\n              size=\"small\"\r\n            >\r\n              {expanded ? <ExpandLess /> : <ExpandMore />}\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n\r\n        {/* Issues Alert */}\r\n        {hasIssues && !expanded && (\r\n          <Alert severity=\"error\" sx={{ mt: 1 }}>\r\n            Subscription system issues detected. Click expand for details.\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Expandable Details */}\r\n        <Collapse in={expanded}>\r\n          <Divider sx={{ my: 2 }} />\r\n          \r\n          <Stack spacing={2}>\r\n            {/* Quick Actions */}\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                startIcon={<Refresh />}\r\n                onClick={handleRefresh}\r\n              >\r\n                Refresh\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                startIcon={<AdminPanelSettings />}\r\n                onClick={() => console.log('UserContext State:', userContext)}\r\n              >\r\n                Log Context\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                startIcon={<Science />}\r\n                onClick={() => console.log('Subscription State:', subscription)}\r\n              >\r\n                Log Subscription\r\n              </Button>\r\n            </Stack>\r\n\r\n            {/* Detailed Debug Info */}\r\n            <Stack direction=\"row\" spacing={3}>\r\n              {/* Loading State */}\r\n              <Box sx={{ flex: 1 }}>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  Loading State\r\n                </Typography>\r\n                <Box sx={{ fontSize: '11px', fontFamily: 'monospace', bgcolor: 'grey.100', p: 1, borderRadius: 1 }}>\r\n                  {JSON.stringify(userContext.loadingState, null, 2)}\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Organization Info */}\r\n              <Box sx={{ flex: 1 }}>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  Organization\r\n                </Typography>\r\n                <Box sx={{ fontSize: '11px', fontFamily: 'monospace', bgcolor: 'grey.100', p: 1, borderRadius: 1 }}>\r\n                  {userContext.org ? (\r\n                    <>\r\n                      <div>Name: {userContext.org.name}</div>\r\n                      <div>Plan: {userContext.org.subscriptionPlan?.name || 'None'}</div>\r\n                      <div>Tier: {userContext.org.subscriptionPlan?.tier || 'None'}</div>\r\n                      <div>Limit: {userContext.org.subscriptionPlan?.avatar_limit || 'N/A'}</div>\r\n                    </>\r\n                  ) : (\r\n                    <div style={{ color: 'red' }}>NULL</div>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Feature Access */}\r\n              <Box sx={{ flex: 1 }}>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  Feature Access\r\n                </Typography>\r\n                <Stack spacing={0.5}>\r\n                  <Chip \r\n                    label={`Analytics: ${subscription.hasFeature('analytics')}`}\r\n                    color={subscription.hasFeature('analytics') ? 'success' : 'default'}\r\n                    size=\"small\"\r\n                  />\r\n                  <Chip \r\n                    label={`User Mgmt: ${subscription.hasFeature('user_management')}`}\r\n                    color={subscription.hasFeature('user_management') ? 'success' : 'default'}\r\n                    size=\"small\"\r\n                  />\r\n                  <Chip \r\n                    label={`Themes: ${subscription.hasFeature('premium_themes')}`}\r\n                    color={subscription.hasFeature('premium_themes') ? 'success' : 'default'}\r\n                    size=\"small\"\r\n                  />\r\n                </Stack>\r\n              </Box>\r\n            </Stack>\r\n\r\n            {/* Issues Analysis */}\r\n            {hasIssues && (\r\n              <Alert severity=\"error\">\r\n                <Typography variant=\"subtitle2\">Issues Detected:</Typography>\r\n                <ul style={{ margin: 0, paddingLeft: '20px' }}>\r\n                  {!userContext.org && <li>Organization data is null</li>}\r\n                  {!subscription.subscriptionPlan && <li>Subscription plan is null</li>}\r\n                  {!subscription.tier && <li>Subscription tier is null</li>}\r\n                  {!userContext.loadingState.isReady && <li>Loading state not ready</li>}\r\n                </ul>\r\n              </Alert>\r\n            )}\r\n          </Stack>\r\n        </Collapse>\r\n      </Box>\r\n    </Card>\r\n  );\r\n} "],"names":["DashboardDebugPanel","isDevelopmentMode","isDev","process","env","NODE_ENV","hasDemo","NEXT_PUBLIC_DEMO_SCENARIO","undefined","hasDebugFlag","NEXT_PUBLIC_DEBUG_MODE","isLocalhost","window","location","hostname","includes","isDevPort","port","expanded","setExpanded","useState","selectedScenario","setSelectedScenario","userContext","useUser","subscription","useSubscription","availableScenarios","getAvailableScenarios","handleScenarioChange","event","scenarioKey","target","value","switchDemoScenario","handleRefresh","reload","hasIssues","org","subscriptionPlan","tier","Card","sx","mb","border","borderColor","bgcolor","Box","p","Stack","direction","alignItems","spacing","BugReport","color","Typography","variant","flexGrow","Chip","label","toUpperCase","size","avatars","length","roles","map","r","name","join","FormControl","minWidth","Select","onChange","displayEmpty","MenuItem","disabled","scenario","key","Tooltip","title","IconButton","onClick","ExpandLess","ExpandMore","Alert","severity","mt","Collapse","in","Divider","my","Button","startIcon","Refresh","AdminPanelSettings","console","log","Science","flex","fontSize","fontFamily","borderRadius","JSON","stringify","loadingState","div","avatar_limit","style","hasFeature","ul","margin","paddingLeft","li","isReady"],"mappings":"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"}
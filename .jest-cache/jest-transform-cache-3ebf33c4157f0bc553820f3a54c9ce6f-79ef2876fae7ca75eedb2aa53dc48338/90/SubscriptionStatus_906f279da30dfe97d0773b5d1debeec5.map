{"version":3,"sources":["D:\\Projects\\family-oriented\\src\\features\\account\\components\\SubscriptionStatus.tsx"],"sourcesContent":["/**\r\n * SubscriptionStatus Component\r\n * Displays current subscription tier, usage, and upgrade options\r\n */\r\n\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  LinearProgress,\r\n  Chip,\r\n  Button,\r\n  Alert,\r\n  Stack\r\n} from '@mui/material';\r\nimport { \r\n  Upgrade, \r\n  Analytics, \r\n  Business,\r\n  Warning\r\n} from '@mui/icons-material';\r\nimport { useSubscription } from '@/hooks/useSubscription';\r\nimport { TIER_CONFIGURATIONS, type SubscriptionTier } from '@/utils/subscriptionService';\r\nimport TierTransitionButton from '@/features/subscription/components/TierTransitionButton';\r\n\r\ninterface SubscriptionStatusProps {\r\n  showUpgradePrompt?: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\n/**\r\n * Usage bar component with visual indicator\r\n */\r\nconst UsageBar: React.FC<{\r\n  label: string;\r\n  current: number;\r\n  limit: number;\r\n  warningThreshold?: number;\r\n}> = ({ label, current, limit, warningThreshold = 0.8 }) => {\r\n  const percentage = Math.min((current / limit) * 100, 100);\r\n  const isWarning = current / limit >= warningThreshold;\r\n  const isOver = current >= limit;\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {label}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color={isOver ? 'error.main' : 'text.primary'}>\r\n          {current} / {limit === 10000 ? 'âˆž' : limit}\r\n        </Typography>\r\n      </Box>\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={percentage}\r\n        color={isOver ? 'error' : isWarning ? 'warning' : 'primary'}\r\n        sx={{ height: 8, borderRadius: 4 }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\n/**\r\n * Feature availability chip\r\n */\r\nconst FeatureChip: React.FC<{\r\n  feature: string;\r\n  available: boolean;\r\n}> = ({ feature, available }) => (\r\n  <Chip\r\n    label={feature}\r\n    color={available ? 'success' : 'default'}\r\n    variant={available ? 'filled' : 'outlined'}\r\n    size=\"small\"\r\n    sx={{ mr: 1, mb: 1 }}\r\n  />\r\n);\r\n\r\n/**\r\n * Main subscription status component\r\n */\r\nexport default function SubscriptionStatus({ showUpgradePrompt = true, compact = false }: SubscriptionStatusProps) {\r\n  const { \r\n    subscriptionPlan, \r\n    tier, \r\n    isLoaded, \r\n    currentUsage, \r\n    getAvailableFeatures,\r\n    canCreateAvatar \r\n  } = useSubscription();\r\n\r\n  // Debug logging\r\n  console.log('SubscriptionStatus Debug:', {\r\n    subscriptionPlan,\r\n    tier,\r\n    isLoaded,\r\n    currentUsage\r\n  });\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Loading subscription information...\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!subscriptionPlan) {\r\n    return (\r\n      <Alert severity=\"warning\" action={\r\n        <Button \r\n          color=\"inherit\" \r\n          size=\"small\" \r\n          startIcon={<Upgrade />}\r\n          onClick={() => {\r\n            // For demo purposes, provide helpful message\r\n            alert('Demo Mode: This would normally redirect to a subscription signup page. Current demo uses Professional plan features.');\r\n          }}\r\n        >\r\n          Get Started\r\n        </Button>\r\n      }>\r\n        No active subscription plan. Please contact support or upgrade to continue.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  const tierConfig = TIER_CONFIGURATIONS[tier as SubscriptionTier];\r\n  const availableFeatures = getAvailableFeatures();\r\n  const avatarCreationResult = canCreateAvatar();\r\n  const avatarLimit = subscriptionPlan.avatar_limit || tierConfig?.limits.avatars || 5;\r\n\r\n  if (compact) {\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n        <Chip \r\n          label={tierConfig?.displayName || tier} \r\n          color=\"primary\" \r\n          variant=\"filled\"\r\n        />\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {currentUsage.avatarsCount}/{avatarLimit} avatars\r\n        </Typography>\r\n        {!avatarCreationResult.allowed && (\r\n          <Chip \r\n            label=\"Limit Reached\" \r\n            color=\"warning\" \r\n            size=\"small\"\r\n            icon={<Warning />}\r\n          />\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3 }}>\r\n          {/* Plan Information */}\r\n          <Box sx={{ flex: 1 }}>\r\n            <Stack spacing={2}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <Business color=\"primary\" />\r\n                <Typography variant=\"h6\">\r\n                  {tierConfig?.displayName || `${tier} Plan`}\r\n                </Typography>\r\n                <Chip \r\n                  label={tier?.toUpperCase() || 'UNKNOWN'} \r\n                  color=\"primary\" \r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n              \r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {tierConfig?.description || 'Subscription plan active'}\r\n              </Typography>\r\n\r\n              {/* Usage Meters */}\r\n              <Box>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  Usage Overview\r\n                </Typography>\r\n                \r\n                <UsageBar\r\n                  label=\"Avatars (Children)\"\r\n                  current={currentUsage.avatarsCount}\r\n                  limit={avatarLimit}\r\n                />\r\n                \r\n                {/* Add more usage bars here as needed */}\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n\r\n          {/* Features & Actions */}\r\n          <Box sx={{ flex: 1 }}>\r\n            <Stack spacing={2}>\r\n              <Typography variant=\"subtitle2\">\r\n                Available Features\r\n              </Typography>\r\n              \r\n              <Box>\r\n                <FeatureChip feature=\"Analytics\" available={availableFeatures.includes('analytics')} />\r\n                <FeatureChip feature=\"User Management\" available={availableFeatures.includes('user_management')} />\r\n                <FeatureChip feature=\"Premium Themes\" available={availableFeatures.includes('premium_themes')} />\r\n                <FeatureChip feature=\"Collections\" available={availableFeatures.includes('collections')} />\r\n                <FeatureChip feature=\"Scheduling\" available={availableFeatures.includes('scheduling')} />\r\n                <FeatureChip feature=\"Data Export\" available={availableFeatures.includes('export_data')} />\r\n              </Box>\r\n\r\n              {/* Upgrade prompt if at limits */}\r\n              {showUpgradePrompt && !avatarCreationResult.allowed && (\r\n                <Alert \r\n                  severity=\"warning\" \r\n                  action={\r\n                    <Button \r\n                      color=\"inherit\" \r\n                      size=\"small\"\r\n                      startIcon={<Upgrade />}\r\n                    >\r\n                      Upgrade Plan\r\n                    </Button>\r\n                  }\r\n                >\r\n                  <Typography variant=\"body2\">\r\n                    {avatarCreationResult.reason}\r\n                  </Typography>\r\n                </Alert>\r\n              )}\r\n\r\n              {/* Plan management actions */}\r\n              <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\r\n                <Button \r\n                  variant=\"outlined\" \r\n                  size=\"small\"\r\n                  startIcon={<Analytics />}\r\n                  href=\"/settings\"\r\n                >\r\n                  View Usage\r\n                </Button>\r\n                {tier && tier !== 'enterprise' && (\r\n                  <TierTransitionButton \r\n                    targetTier=\"professional\"\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n                {tier === 'personal' && (\r\n                  <TierTransitionButton \r\n                    targetTier=\"enterprise\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n/**\r\n * Quick subscription info for header/navbar\r\n */\r\nexport function SubscriptionBadge() {\r\n  const { tier, canCreateAvatar } = useSubscription();\r\n  const avatarResult = canCreateAvatar();\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n      <Chip \r\n        label={tier ? tier.charAt(0).toUpperCase() + tier.slice(1) : 'Free'} \r\n        color=\"primary\" \r\n        size=\"small\"\r\n      />\r\n      {!avatarResult.allowed && (\r\n        <Chip \r\n          label=\"Limit Reached\" \r\n          color=\"warning\" \r\n          size=\"small\"\r\n          icon={<Warning />}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n} "],"names":["SubscriptionBadge","SubscriptionStatus","UsageBar","label","current","limit","warningThreshold","percentage","Math","min","isWarning","isOver","Box","sx","mb","display","justifyContent","Typography","variant","color","LinearProgress","value","height","borderRadius","FeatureChip","feature","available","Chip","size","mr","showUpgradePrompt","compact","subscriptionPlan","tier","isLoaded","currentUsage","getAvailableFeatures","canCreateAvatar","useSubscription","console","log","Card","CardContent","Alert","severity","action","Button","startIcon","Upgrade","onClick","alert","tierConfig","TIER_CONFIGURATIONS","availableFeatures","avatarCreationResult","avatarLimit","avatar_limit","limits","avatars","alignItems","gap","displayName","avatarsCount","allowed","icon","Warning","flexDirection","xs","md","flex","Stack","spacing","Business","toUpperCase","description","gutterBottom","includes","reason","mt","Analytics","href","TierTransitionButton","targetTier","avatarResult","charAt","slice"],"mappings":"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"}
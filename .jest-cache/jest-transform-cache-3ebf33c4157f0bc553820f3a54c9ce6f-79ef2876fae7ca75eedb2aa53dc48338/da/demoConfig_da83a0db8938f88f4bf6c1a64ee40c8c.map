{"version":3,"sources":["D:\\Projects\\family-oriented\\src\\utils\\demoConfig.ts"],"sourcesContent":["/**\r\n * Demo Configuration System\r\n * Allows testing different subscription tiers and user scenarios\r\n */\r\n\r\nimport type { SubscriptionTier } from './subscriptionService';\r\n\r\nexport interface DemoUserConfig {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n  tier: SubscriptionTier;\r\n  roles: string[];\r\n  avatarCount: number;\r\n  orgName: string;\r\n}\r\n\r\n/**\r\n * Pre-configured demo scenarios for testing\r\n */\r\nexport const DEMO_SCENARIOS: Record<string, DemoUserConfig> = {\r\n  // Personal plan scenarios\r\n  personal_basic: {\r\n    id: 'demo-personal-basic',\r\n    email: 'personal@demo.com',\r\n    name: 'Personal User',\r\n    tier: 'personal',\r\n    roles: ['account_owner'],\r\n    avatarCount: 2,\r\n    orgName: 'Personal Family'\r\n  },\r\n  \r\n  personal_limit: {\r\n    id: 'demo-personal-limit',\r\n    email: 'personal-limit@demo.com', \r\n    name: 'Personal At Limit',\r\n    tier: 'personal',\r\n    roles: ['account_owner'],\r\n    avatarCount: 5, // At the 5 avatar limit\r\n    orgName: 'Full Personal Family'\r\n  },\r\n\r\n  // Professional plan scenarios  \r\n  professional_educator: {\r\n    id: 'demo-professional-educator',\r\n    email: 'educator@demo.com',\r\n    name: 'Professional Educator',\r\n    tier: 'professional',\r\n    roles: ['account_owner', 'org_admin', 'educator'],\r\n    avatarCount: 15,\r\n    orgName: 'Demo School District'\r\n  },\r\n\r\n  professional_admin: {\r\n    id: 'demo-professional-admin',\r\n    email: 'admin@demo.com',\r\n    name: 'Professional Admin',\r\n    tier: 'professional', \r\n    roles: ['account_owner', 'org_admin'],\r\n    avatarCount: 25,\r\n    orgName: 'Learning Center'\r\n  },\r\n\r\n  // Enterprise plan scenarios\r\n  enterprise_full: {\r\n    id: 'demo-enterprise-full',\r\n    email: 'enterprise@demo.com',\r\n    name: 'Enterprise Admin',\r\n    tier: 'enterprise',\r\n    roles: ['account_owner', 'org_admin', 'educator'],\r\n    avatarCount: 150,\r\n    orgName: 'Enterprise Education Corp'\r\n  },\r\n\r\n  // Limited role scenarios\r\n  educator_only: {\r\n    id: 'demo-educator-only',\r\n    email: 'teacher@demo.com',\r\n    name: 'Teacher User',\r\n    tier: 'professional',\r\n    roles: ['educator'], // No admin roles\r\n    avatarCount: 0, // Can't create avatars\r\n    orgName: 'School District'\r\n  }\r\n};\r\n\r\n/**\r\n * Get demo configuration from localStorage, environment, or default\r\n */\r\nexport function getDemoConfig(): DemoUserConfig {\r\n  // Priority: localStorage > environment > default\r\n  let scenarioKey = 'professional_educator';\r\n  \r\n  if (typeof window !== 'undefined') {\r\n    scenarioKey = localStorage.getItem('demo_scenario') || scenarioKey;\r\n  }\r\n  \r\n  scenarioKey = process.env.NEXT_PUBLIC_DEMO_SCENARIO || scenarioKey;\r\n  \r\n  const scenario = DEMO_SCENARIOS[scenarioKey];\r\n  \r\n  if (!scenario) {\r\n    console.warn(`Unknown demo scenario: ${scenarioKey}, falling back to professional_educator`);\r\n    return DEMO_SCENARIOS.professional_educator;\r\n  }\r\n  \r\n  console.log(`Using demo scenario: ${scenarioKey}`, scenario);\r\n  return scenario;\r\n}\r\n\r\n/**\r\n * Generate subscription plan from demo config\r\n */\r\nexport function createDemoSubscriptionPlan(config: DemoUserConfig) {\r\n  const tierConfig = {\r\n    personal: {\r\n      name: 'Personal Plan',\r\n      avatar_limit: 5,\r\n      features_included: {\r\n        analytics: true,\r\n        user_management: false,\r\n        premium_themes: false,\r\n        custom_branding: false,\r\n        collections: true,\r\n        scheduling: false,\r\n        bulk_operations: false,\r\n        api_access: false,\r\n        export_data: false,\r\n        advanced_reporting: false\r\n      }\r\n    },\r\n    professional: {\r\n      name: 'Professional Plan', \r\n      avatar_limit: 30,\r\n      features_included: {\r\n        analytics: true,\r\n        user_management: true,\r\n        premium_themes: true,\r\n        custom_branding: false,\r\n        collections: true,\r\n        scheduling: true,\r\n        bulk_operations: true,\r\n        api_access: false,\r\n        export_data: true,\r\n        advanced_reporting: true\r\n      }\r\n    },\r\n    enterprise: {\r\n      name: 'Enterprise Plan',\r\n      avatar_limit: 10000,\r\n      features_included: {\r\n        analytics: true,\r\n        user_management: true,\r\n        premium_themes: true,\r\n        custom_branding: true,\r\n        collections: true,\r\n        scheduling: true,\r\n        bulk_operations: true,\r\n        api_access: true,\r\n        export_data: true,\r\n        advanced_reporting: true\r\n      }\r\n    }\r\n  };\r\n\r\n  const planConfig = tierConfig[config.tier];\r\n  \r\n  return {\r\n    id: `demo-${config.tier}-plan`,\r\n    name: planConfig.name,\r\n    tier: config.tier,\r\n    avatar_limit: planConfig.avatar_limit,\r\n    features_included: planConfig.features_included\r\n  };\r\n}\r\n\r\n/**\r\n * Generate demo avatars based on config\r\n */\r\nexport function createDemoAvatars(config: DemoUserConfig) {\r\n  const avatars = [];\r\n  \r\n  for (let i = 0; i < config.avatarCount; i++) {\r\n    avatars.push({\r\n      id: `${config.id}-avatar-${i + 1}`,\r\n      user_id: config.id,\r\n      org_id: `${config.id}-org`,\r\n      name: `Demo Child ${i + 1}`,\r\n      encrypted_pii: null,\r\n      theme_settings: {},\r\n      game_preferences: {},\r\n      last_active: null,\r\n      created_at: null,\r\n      updated_at: null\r\n    });\r\n  }\r\n  \r\n  return avatars;\r\n}\r\n\r\n/**\r\n * Generate demo roles based on config\r\n */\r\nexport function createDemoRoles(config: DemoUserConfig) {\r\n  const roleDefinitions = {\r\n    account_owner: { id: 'role-account-owner', name: 'account_owner', description: 'Full administrative access' },\r\n    org_admin: { id: 'role-org-admin', name: 'org_admin', description: 'Organization management' },\r\n    educator: { id: 'role-educator', name: 'educator', description: 'Teaching and learning management' }\r\n  };\r\n\r\n  return config.roles.map(roleName => \r\n    roleDefinitions[roleName as keyof typeof roleDefinitions] || \r\n    { id: `role-${roleName}`, name: roleName, description: `${roleName} role` }\r\n  );\r\n}\r\n\r\n/**\r\n * Demo scenario switching for development\r\n */\r\nexport function switchDemoScenario(scenarioKey: string) {\r\n  if (typeof window !== 'undefined') {\r\n    // Store scenario preference\r\n    localStorage.setItem('demo_scenario', scenarioKey);\r\n    // Reload to apply new scenario\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\n/**\r\n * Get available demo scenarios for UI\r\n */\r\nexport function getAvailableScenarios() {\r\n  return Object.entries(DEMO_SCENARIOS).map(([key, config]) => ({\r\n    key,\r\n    label: `${config.tier.toUpperCase()}: ${config.name || config.email}`,\r\n    description: `${config.avatarCount} avatars, roles: ${config.roles.join(', ')}`,\r\n    config\r\n  }));\r\n} "],"names":["DEMO_SCENARIOS","createDemoAvatars","createDemoRoles","createDemoSubscriptionPlan","getAvailableScenarios","getDemoConfig","switchDemoScenario","personal_basic","id","email","name","tier","roles","avatarCount","orgName","personal_limit","professional_educator","professional_admin","enterprise_full","educator_only","scenarioKey","window","localStorage","getItem","process","env","NEXT_PUBLIC_DEMO_SCENARIO","scenario","console","warn","log","config","tierConfig","personal","avatar_limit","features_included","analytics","user_management","premium_themes","custom_branding","collections","scheduling","bulk_operations","api_access","export_data","advanced_reporting","professional","enterprise","planConfig","avatars","i","push","user_id","org_id","encrypted_pii","theme_settings","game_preferences","last_active","created_at","updated_at","roleDefinitions","account_owner","description","org_admin","educator","map","roleName","setItem","location","reload","Object","entries","key","label","toUpperCase","join"],"mappings":"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"}
f523ad3d733059622784a82ee133944a
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * User Dashboard page for learning progress, recommendations, and metrics.
 * Focuses on robust data flow and error handling.
 * Uses role guard to prevent flashing of admin-only content.
 */ "default", {
    enumerable: true,
    get: function() {
        return DashboardPage;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _UserContext = require("../../context/UserContext");
const _analyticsService = require("../../utils/analyticsService");
const _analyticsDebug = require("../../utils/analyticsDebug");
const _logger = require("../../utils/logger");
const _SubscriptionStatus = /*#__PURE__*/ _interop_require_default(require("../../features/account/components/SubscriptionStatus"));
const _material = require("@mui/material");
const _PlayArrow = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/PlayArrow"));
const _Star = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Star"));
const _History = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/History"));
const _Download = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/Download"));
const _CompareArrows = /*#__PURE__*/ _interop_require_default(require("@mui/icons-material/CompareArrows"));
const _datefns = require("date-fns");
const _dynamic = /*#__PURE__*/ _interop_require_default(require("next/dynamic"));
const _DashboardDebugPanel = /*#__PURE__*/ _interop_require_default(require("../../features/analytics/components/DashboardDebugPanel"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Dynamically import DashboardCharts to avoid SSR issues with Chart.js
const DashboardCharts = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../../features/analytics/components/DashboardCharts"))), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("@/features/analytics/components/DashboardCharts")
            ]
    },
    ssr: false,
    loading: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2,
                textAlign: 'center'
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {})
        })
});
function DashboardPage() {
    const { currentAvatar, setCurrentAvatar } = (0, _UserContext.useAvatar)();
    const { avatars, error: userError } = (0, _UserContext.useUser)();
    const { hasRole, isReady } = (0, _UserContext.useRoleGuard)();
    const avatarId = currentAvatar?.id;
    const [progress, setProgress] = (0, _react.useState)(null);
    const [recommendations, setRecommendations] = (0, _react.useState)(null);
    const [metrics, setMetrics] = (0, _react.useState)(null);
    const [comparisonData] = (0, _react.useState)(null);
    const [comparisonLabel] = (0, _react.useState)('');
    const [dashboardLoading, setDashboardLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    const runDiagnostic = async ()=>{
        if (!avatarId) return;
        _logger.logger.info('Running analytics diagnostic for avatar:', avatarId);
        await _analyticsDebug.analyticsDebugger.runFullDiagnostic(avatarId);
    };
    const createTestData = async ()=>{
        if (!avatarId) return;
        _logger.logger.info('Creating simple test data for avatar:', avatarId);
        try {
            const result = await _analyticsDebug.analyticsDebugger.createTestSessionData(avatarId);
            _logger.logger.info('Test data creation result:', result);
            if (result.success) {
                window.location.reload();
            }
        } catch (err) {
            _logger.logger.error('Failed to create test data:', err);
        }
    };
    const handleAvatarChange = (event)=>{
        const avatarId = event.target.value;
        const selectedAvatar = avatars?.find((a)=>a.id === avatarId);
        if (selectedAvatar) {
            setCurrentAvatar(selectedAvatar);
        }
    };
    (0, _react.useEffect)(()=>{
        const loadData = async ()=>{
            if (!avatarId) {
                setDashboardLoading(false);
                return;
            }
            setDashboardLoading(true);
            setError(null);
            try {
                _logger.logger.info('🔄 Loading analytics data for avatar:', avatarId);
                const [progressData, recommendationsData, metricsData] = await Promise.all([
                    _analyticsService.analyticsService.getAvatarProgress(avatarId),
                    _analyticsService.analyticsService.getLearningPathRecommendations(avatarId),
                    _analyticsService.analyticsService.getPerformanceMetrics(avatarId)
                ]);
                _logger.logger.debug('📊 Analytics data loaded:', {
                    progress: progressData,
                    recommendations: recommendationsData,
                    metrics: metricsData
                });
                setProgress(progressData);
                setRecommendations(recommendationsData);
                setMetrics(metricsData);
            } catch (err) {
                _logger.logger.error('❌ Error loading analytics data:', err);
                setError(err instanceof Error ? err.message : 'Failed to load analytics data');
            } finally{
                setDashboardLoading(false);
            }
        };
        loadData();
    }, [
        avatarId
    ]);
    if (userError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Alert, {
                severity: "error",
                children: [
                    userError,
                    " ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                        variant: "outlined",
                        sx: {
                            mt: 1
                        },
                        onClick: ()=>window.location.reload(),
                        children: "Reload"
                    })
                ]
            })
        });
    }
    if (!avatarId) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Alert, {
            severity: "info",
            children: "Please select or create an avatar to view your dashboard."
        });
    }
    if (dashboardLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                minHeight: '200px'
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.CircularProgress, {})
        });
    }
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
            sx: {
                p: 2
            },
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Alert, {
                severity: "error",
                children: error
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
        sx: {
            maxWidth: 'lg',
            mx: 'auto',
            py: 4
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_DashboardDebugPanel.default, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                variant: "h4",
                gutterBottom: true,
                children: "Learning Progress Dashboard"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                sx: {
                    mb: 3
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_SubscriptionStatus.default, {})
            }),
            isReady && (hasRole('account_owner') || hasRole('org_admin')) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                sx: {
                    mb: 2
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                    variant: "contained",
                    color: "secondary",
                    href: "/dashboard/user-management",
                    children: "Manage Users & Roles"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Box, {
                sx: {
                    mb: 3
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.FormControl, {
                    fullWidth: true,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.InputLabel, {
                            children: "Select Avatar"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Select, {
                            value: avatarId || '',
                            label: "Select Avatar",
                            onChange: handleAvatarChange,
                            children: avatars?.map((avatar)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.MenuItem, {
                                    value: avatar.id,
                                    children: avatar.name
                                }, avatar.id))
                        })
                    ]
                })
            }),
            currentAvatar && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Paper, {
                sx: {
                    p: 2,
                    mb: 3
                },
                elevation: 2,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: [
                            "Current Avatar: ",
                            currentAvatar.name
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        children: [
                            "ID: ",
                            currentAvatar.id
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                sx: {
                    mb: 3
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: "Quick Actions"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        sx: {
                            display: 'flex',
                            gap: 1,
                            flexWrap: 'wrap'
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlayArrow.default, {}),
                                onClick: ()=>window.location.href = '/games',
                                children: "Play Games"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Download.default, {}),
                                onClick: createTestData,
                                children: "Create Test Data"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Button, {
                                variant: "outlined",
                                startIcon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_History.default, {}),
                                onClick: runDiagnostic,
                                children: "Run Diagnostic"
                            })
                        ]
                    })
                ]
            }),
            metrics && progress && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                sx: {
                    mb: 3
                },
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: "Analytics Overview"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(DashboardCharts, {
                        metrics: metrics,
                        progress: progress,
                        comparisonData: comparisonData || undefined,
                        comparisonLabel: comparisonLabel
                    })
                ]
            }),
            progress && progress.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Paper, {
                sx: {
                    p: 2,
                    mb: 3
                },
                elevation: 2,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_Star.default, {
                                sx: {
                                    mr: 1,
                                    verticalAlign: 'middle'
                                }
                            }),
                            "Learning Progress"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.List, {
                        children: progress.map((item, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItem, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItemText, {
                                    primary: `${item.gameId}: ${item.skillLevel}`,
                                    secondary: `Mastery: ${Math.round(item.masteryScore * 100)}% | Last Played: ${item.lastPlayed ? (0, _datefns.format)(new Date(item.lastPlayed), 'MMM dd, yyyy') : 'Never'}`
                                })
                            }, index))
                    })
                ]
            }),
            recommendations && recommendations.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Paper, {
                sx: {
                    p: 2,
                    mb: 3
                },
                elevation: 2,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_CompareArrows.default, {
                                sx: {
                                    mr: 1,
                                    verticalAlign: 'middle'
                                }
                            }),
                            "Recommended Learning Path"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.List, {
                        children: recommendations.map((rec, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItem, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.ListItemText, {
                                    primary: rec.gameId,
                                    secondary: `${rec.reason} | Priority: ${rec.priority} | Difficulty: ${rec.estimatedDifficulty}`
                                })
                            }, index))
                    })
                ]
            }),
            metrics && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Paper, {
                sx: {
                    p: 2
                },
                elevation: 2,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                        variant: "h6",
                        gutterBottom: true,
                        children: "Performance Metrics"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Box, {
                        sx: {
                            display: 'grid',
                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                            gap: 2
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                variant: "outlined",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "subtitle2",
                                            children: "Engagement Score"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "h4",
                                            children: [
                                                Math.round(metrics.engagementScore * 100),
                                                "%"
                                            ]
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                variant: "outlined",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "subtitle2",
                                            children: "Learning Velocity"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "h4",
                                            children: metrics.learningVelocity.toFixed(1)
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                variant: "outlined",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "subtitle2",
                                            children: "Completion Rate"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "h4",
                                            children: [
                                                Math.round(metrics.overallCompletionRate * 100),
                                                "%"
                                            ]
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Card, {
                                variant: "outlined",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.CardContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_material.Typography, {
                                            variant: "subtitle2",
                                            children: "Avg Session Time"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_material.Typography, {
                                            variant: "h4",
                                            children: [
                                                Math.round(metrics.averageSessionDuration),
                                                " min"
                                            ]
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
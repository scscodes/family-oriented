{"version":3,"sources":["D:\\Projects\\family-oriented\\src\\features\\subscription\\components\\TierTransitionButton.tsx"],"sourcesContent":["/**\r\n * Tier Transition Button Component\r\n * Simple button that triggers tier transitions with validation\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n  Alert,\r\n  CircularProgress,\r\n  Box,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Upgrade, ArrowDownward } from '@mui/icons-material';\r\nimport { useTierTransition, type TierTransitionAnalysis } from '@/hooks/useTierTransition';\r\nimport { type SubscriptionTier } from '@/utils/subscriptionService';\r\n\r\ninterface TierTransitionButtonProps {\r\n  targetTier: SubscriptionTier;\r\n  variant?: 'contained' | 'outlined' | 'text';\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nexport default function TierTransitionButton({ \r\n  targetTier, \r\n  variant = 'contained',\r\n  size = 'medium'\r\n}: TierTransitionButtonProps) {\r\n  const { \r\n    currentTier,\r\n    analyzeTransition,\r\n    executeTransition,\r\n    getTierDisplayName,\r\n    isLoading,\r\n    error,\r\n    clearError\r\n  } = useTierTransition();\r\n  \r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [analysis, setAnalysis] = useState<TierTransitionAnalysis | null>(null);\r\n\r\n  // Don't show button if it's the current tier\r\n  if (currentTier === targetTier) {\r\n    return null;\r\n  }\r\n\r\n  const handleAnalyze = async () => {\r\n    try {\r\n      clearError();\r\n      const result = await analyzeTransition(targetTier);\r\n      setAnalysis(result);\r\n      setDialogOpen(true);\r\n    } catch (err) {\r\n      console.error('Failed to analyze transition:', err);\r\n    }\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const result = await executeTransition(targetTier);\r\n      if (result.success) {\r\n        setDialogOpen(false);\r\n        setAnalysis(null);\r\n        alert(result.message); // In real app, use proper notification\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to execute transition:', err);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialogOpen(false);\r\n    setAnalysis(null);\r\n    clearError();\r\n  };\r\n\r\n  const isUpgrade = analysis?.isUpgrade ?? false;\r\n  const tierName = getTierDisplayName(targetTier);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant={variant}\r\n        size={size}\r\n        onClick={handleAnalyze}\r\n        disabled={isLoading}\r\n        startIcon={isUpgrade ? <Upgrade /> : <ArrowDownward />}\r\n      >\r\n        {isUpgrade ? 'Upgrade to' : 'Switch to'} {tierName}\r\n      </Button>\r\n\r\n      <Dialog open={dialogOpen} onClose={handleClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          Confirm {isUpgrade ? 'Upgrade' : 'Plan Change'}\r\n        </DialogTitle>\r\n        \r\n        <DialogContent>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {analysis && (\r\n            <Box>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {isUpgrade ? 'Upgrade' : 'Change'} from{' '}\r\n                <Chip label={getTierDisplayName(analysis.fromTier)} size=\"small\" />{' '}\r\n                to{' '}\r\n                <Chip label={getTierDisplayName(analysis.toTier)} size=\"small\" color=\"primary\" />\r\n              </Typography>\r\n\r\n              {/* Cost Impact */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  Cost Impact:\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Monthly cost: ${analysis.costImpact.currentCost} â†’ ${analysis.costImpact.newCost}\r\n                </Typography>\r\n                <Typography \r\n                  variant=\"body2\" \r\n                  color={analysis.costImpact.monthlyDifference > 0 ? 'error.main' : 'success.main'}\r\n                >\r\n                  Difference: {analysis.costImpact.monthlyDifference > 0 ? '+' : ''}\r\n                  ${analysis.costImpact.monthlyDifference.toFixed(2)}/month\r\n                </Typography>\r\n                {analysis.costImpact.prorationAmount !== 0 && (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {analysis.costImpact.prorationDescription}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n\r\n              {/* Feature Changes */}\r\n              {analysis.featureChanges.gained.length > 0 && (\r\n                <Box sx={{ mb: 2 }}>\r\n                                                     <Typography variant=\"subtitle2\" color=\"success.main\" gutterBottom>\r\n                    Features you&apos;ll gain:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {analysis.featureChanges.gained.join(', ')}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n\r\n              {analysis.featureChanges.lost.length > 0 && (\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"error.main\" gutterBottom>\r\n                    Features you&apos;ll lose:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {analysis.featureChanges.lost.join(', ')}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n\r\n              {/* Warnings */}\r\n              {analysis.warnings.length > 0 && (\r\n                <Alert severity={analysis.canTransition ? 'warning' : 'error'} sx={{ mb: 2 }}>\r\n                  <ul style={{ margin: 0, paddingLeft: 16 }}>\r\n                    {analysis.warnings.map((warning, index) => (\r\n                      <li key={index}>{warning}</li>\r\n                    ))}\r\n                  </ul>\r\n                </Alert>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        \r\n        <DialogActions>\r\n          <Button onClick={handleClose} disabled={isLoading}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleConfirm}\r\n            variant=\"contained\"\r\n            disabled={isLoading || !analysis?.canTransition}\r\n            startIcon={isLoading ? <CircularProgress size={16} /> : undefined}\r\n          >\r\n            {isLoading ? 'Processing...' : `Confirm ${isUpgrade ? 'Upgrade' : 'Change'}`}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n} "],"names":["TierTransitionButton","targetTier","variant","size","currentTier","analyzeTransition","executeTransition","getTierDisplayName","isLoading","error","clearError","useTierTransition","dialogOpen","setDialogOpen","useState","analysis","setAnalysis","handleAnalyze","result","err","console","handleConfirm","success","alert","message","handleClose","isUpgrade","tierName","Button","onClick","disabled","startIcon","Upgrade","ArrowDownward","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Alert","severity","sx","mb","Box","Typography","gutterBottom","Chip","label","fromTier","toTier","color","costImpact","currentCost","newCost","monthlyDifference","toFixed","prorationAmount","prorationDescription","featureChanges","gained","length","join","lost","warnings","canTransition","ul","style","margin","paddingLeft","map","warning","index","li","DialogActions","CircularProgress","undefined"],"mappings":"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"}